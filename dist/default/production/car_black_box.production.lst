

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Feb 18 21:14:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     7                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     8                           	psect	stringtext,global,reloc=256,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,space=0,delta=2
    17                           	psect	clrtext,global,class=CODE,space=0,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    22                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    40                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=1
    51                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=1
    52                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2,group=2
    58                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,space=0,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74     0000                     
    75                           ; Generated 22/03/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F877A Definitions
   107                           ; 
   108                           ; SFR Addresses
   109     0004                     fsr             equ	4
   110     0004                     fsr0            equ	4
   111     0000                     indf            equ	0
   112     0000                     indf0           equ	0
   113     0002                     pc              equ	2
   114     0002                     pcl             equ	2
   115     000A                     pclath          equ	10
   116     0003                     status          equ	3
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     0000                     INDF            equ	0	;# 
   178     0001                     TMR0            equ	1	;# 
   179     0002                     PCL             equ	2	;# 
   180     0003                     STATUS          equ	3	;# 
   181     0004                     FSR             equ	4	;# 
   182     0005                     PORTA           equ	5	;# 
   183     0006                     PORTB           equ	6	;# 
   184     0007                     PORTC           equ	7	;# 
   185     0008                     PORTD           equ	8	;# 
   186     0009                     PORTE           equ	9	;# 
   187     000A                     PCLATH          equ	10	;# 
   188     000B                     INTCON          equ	11	;# 
   189     000C                     PIR1            equ	12	;# 
   190     000D                     PIR2            equ	13	;# 
   191     000E                     TMR1            equ	14	;# 
   192     000E                     TMR1L           equ	14	;# 
   193     000F                     TMR1H           equ	15	;# 
   194     0010                     T1CON           equ	16	;# 
   195     0011                     TMR2            equ	17	;# 
   196     0012                     T2CON           equ	18	;# 
   197     0013                     SSPBUF          equ	19	;# 
   198     0014                     SSPCON          equ	20	;# 
   199     0015                     CCPR1           equ	21	;# 
   200     0015                     CCPR1L          equ	21	;# 
   201     0016                     CCPR1H          equ	22	;# 
   202     0017                     CCP1CON         equ	23	;# 
   203     0018                     RCSTA           equ	24	;# 
   204     0019                     TXREG           equ	25	;# 
   205     001A                     RCREG           equ	26	;# 
   206     001B                     CCPR2           equ	27	;# 
   207     001B                     CCPR2L          equ	27	;# 
   208     001C                     CCPR2H          equ	28	;# 
   209     001D                     CCP2CON         equ	29	;# 
   210     001E                     ADRESH          equ	30	;# 
   211     001F                     ADCON0          equ	31	;# 
   212     0081                     OPTION_REG      equ	129	;# 
   213     0085                     TRISA           equ	133	;# 
   214     0086                     TRISB           equ	134	;# 
   215     0087                     TRISC           equ	135	;# 
   216     0088                     TRISD           equ	136	;# 
   217     0089                     TRISE           equ	137	;# 
   218     008C                     PIE1            equ	140	;# 
   219     008D                     PIE2            equ	141	;# 
   220     008E                     PCON            equ	142	;# 
   221     0091                     SSPCON2         equ	145	;# 
   222     0092                     PR2             equ	146	;# 
   223     0093                     SSPADD          equ	147	;# 
   224     0094                     SSPSTAT         equ	148	;# 
   225     0098                     TXSTA           equ	152	;# 
   226     0099                     SPBRG           equ	153	;# 
   227     009C                     CMCON           equ	156	;# 
   228     009D                     CVRCON          equ	157	;# 
   229     009E                     ADRESL          equ	158	;# 
   230     009F                     ADCON1          equ	159	;# 
   231     010C                     EEDATA          equ	268	;# 
   232     010D                     EEADR           equ	269	;# 
   233     010E                     EEDATH          equ	270	;# 
   234     010F                     EEADRH          equ	271	;# 
   235     018C                     EECON1          equ	396	;# 
   236     018D                     EECON2          equ	397	;# 
   237     0000                     INDF            equ	0	;# 
   238     0001                     TMR0            equ	1	;# 
   239     0002                     PCL             equ	2	;# 
   240     0003                     STATUS          equ	3	;# 
   241     0004                     FSR             equ	4	;# 
   242     0005                     PORTA           equ	5	;# 
   243     0006                     PORTB           equ	6	;# 
   244     0007                     PORTC           equ	7	;# 
   245     0008                     PORTD           equ	8	;# 
   246     0009                     PORTE           equ	9	;# 
   247     000A                     PCLATH          equ	10	;# 
   248     000B                     INTCON          equ	11	;# 
   249     000C                     PIR1            equ	12	;# 
   250     000D                     PIR2            equ	13	;# 
   251     000E                     TMR1            equ	14	;# 
   252     000E                     TMR1L           equ	14	;# 
   253     000F                     TMR1H           equ	15	;# 
   254     0010                     T1CON           equ	16	;# 
   255     0011                     TMR2            equ	17	;# 
   256     0012                     T2CON           equ	18	;# 
   257     0013                     SSPBUF          equ	19	;# 
   258     0014                     SSPCON          equ	20	;# 
   259     0015                     CCPR1           equ	21	;# 
   260     0015                     CCPR1L          equ	21	;# 
   261     0016                     CCPR1H          equ	22	;# 
   262     0017                     CCP1CON         equ	23	;# 
   263     0018                     RCSTA           equ	24	;# 
   264     0019                     TXREG           equ	25	;# 
   265     001A                     RCREG           equ	26	;# 
   266     001B                     CCPR2           equ	27	;# 
   267     001B                     CCPR2L          equ	27	;# 
   268     001C                     CCPR2H          equ	28	;# 
   269     001D                     CCP2CON         equ	29	;# 
   270     001E                     ADRESH          equ	30	;# 
   271     001F                     ADCON0          equ	31	;# 
   272     0081                     OPTION_REG      equ	129	;# 
   273     0085                     TRISA           equ	133	;# 
   274     0086                     TRISB           equ	134	;# 
   275     0087                     TRISC           equ	135	;# 
   276     0088                     TRISD           equ	136	;# 
   277     0089                     TRISE           equ	137	;# 
   278     008C                     PIE1            equ	140	;# 
   279     008D                     PIE2            equ	141	;# 
   280     008E                     PCON            equ	142	;# 
   281     0091                     SSPCON2         equ	145	;# 
   282     0092                     PR2             equ	146	;# 
   283     0093                     SSPADD          equ	147	;# 
   284     0094                     SSPSTAT         equ	148	;# 
   285     0098                     TXSTA           equ	152	;# 
   286     0099                     SPBRG           equ	153	;# 
   287     009C                     CMCON           equ	156	;# 
   288     009D                     CVRCON          equ	157	;# 
   289     009E                     ADRESL          equ	158	;# 
   290     009F                     ADCON1          equ	159	;# 
   291     010C                     EEDATA          equ	268	;# 
   292     010D                     EEADR           equ	269	;# 
   293     010E                     EEDATH          equ	270	;# 
   294     010F                     EEADRH          equ	271	;# 
   295     018C                     EECON1          equ	396	;# 
   296     018D                     EECON2          equ	397	;# 
   297     0000                     INDF            equ	0	;# 
   298     0001                     TMR0            equ	1	;# 
   299     0002                     PCL             equ	2	;# 
   300     0003                     STATUS          equ	3	;# 
   301     0004                     FSR             equ	4	;# 
   302     0005                     PORTA           equ	5	;# 
   303     0006                     PORTB           equ	6	;# 
   304     0007                     PORTC           equ	7	;# 
   305     0008                     PORTD           equ	8	;# 
   306     0009                     PORTE           equ	9	;# 
   307     000A                     PCLATH          equ	10	;# 
   308     000B                     INTCON          equ	11	;# 
   309     000C                     PIR1            equ	12	;# 
   310     000D                     PIR2            equ	13	;# 
   311     000E                     TMR1            equ	14	;# 
   312     000E                     TMR1L           equ	14	;# 
   313     000F                     TMR1H           equ	15	;# 
   314     0010                     T1CON           equ	16	;# 
   315     0011                     TMR2            equ	17	;# 
   316     0012                     T2CON           equ	18	;# 
   317     0013                     SSPBUF          equ	19	;# 
   318     0014                     SSPCON          equ	20	;# 
   319     0015                     CCPR1           equ	21	;# 
   320     0015                     CCPR1L          equ	21	;# 
   321     0016                     CCPR1H          equ	22	;# 
   322     0017                     CCP1CON         equ	23	;# 
   323     0018                     RCSTA           equ	24	;# 
   324     0019                     TXREG           equ	25	;# 
   325     001A                     RCREG           equ	26	;# 
   326     001B                     CCPR2           equ	27	;# 
   327     001B                     CCPR2L          equ	27	;# 
   328     001C                     CCPR2H          equ	28	;# 
   329     001D                     CCP2CON         equ	29	;# 
   330     001E                     ADRESH          equ	30	;# 
   331     001F                     ADCON0          equ	31	;# 
   332     0081                     OPTION_REG      equ	129	;# 
   333     0085                     TRISA           equ	133	;# 
   334     0086                     TRISB           equ	134	;# 
   335     0087                     TRISC           equ	135	;# 
   336     0088                     TRISD           equ	136	;# 
   337     0089                     TRISE           equ	137	;# 
   338     008C                     PIE1            equ	140	;# 
   339     008D                     PIE2            equ	141	;# 
   340     008E                     PCON            equ	142	;# 
   341     0091                     SSPCON2         equ	145	;# 
   342     0092                     PR2             equ	146	;# 
   343     0093                     SSPADD          equ	147	;# 
   344     0094                     SSPSTAT         equ	148	;# 
   345     0098                     TXSTA           equ	152	;# 
   346     0099                     SPBRG           equ	153	;# 
   347     009C                     CMCON           equ	156	;# 
   348     009D                     CVRCON          equ	157	;# 
   349     009E                     ADRESL          equ	158	;# 
   350     009F                     ADCON1          equ	159	;# 
   351     010C                     EEDATA          equ	268	;# 
   352     010D                     EEADR           equ	269	;# 
   353     010E                     EEDATH          equ	270	;# 
   354     010F                     EEADRH          equ	271	;# 
   355     018C                     EECON1          equ	396	;# 
   356     018D                     EECON2          equ	397	;# 
   357     0000                     INDF            equ	0	;# 
   358     0001                     TMR0            equ	1	;# 
   359     0002                     PCL             equ	2	;# 
   360     0003                     STATUS          equ	3	;# 
   361     0004                     FSR             equ	4	;# 
   362     0005                     PORTA           equ	5	;# 
   363     0006                     PORTB           equ	6	;# 
   364     0007                     PORTC           equ	7	;# 
   365     0008                     PORTD           equ	8	;# 
   366     0009                     PORTE           equ	9	;# 
   367     000A                     PCLATH          equ	10	;# 
   368     000B                     INTCON          equ	11	;# 
   369     000C                     PIR1            equ	12	;# 
   370     000D                     PIR2            equ	13	;# 
   371     000E                     TMR1            equ	14	;# 
   372     000E                     TMR1L           equ	14	;# 
   373     000F                     TMR1H           equ	15	;# 
   374     0010                     T1CON           equ	16	;# 
   375     0011                     TMR2            equ	17	;# 
   376     0012                     T2CON           equ	18	;# 
   377     0013                     SSPBUF          equ	19	;# 
   378     0014                     SSPCON          equ	20	;# 
   379     0015                     CCPR1           equ	21	;# 
   380     0015                     CCPR1L          equ	21	;# 
   381     0016                     CCPR1H          equ	22	;# 
   382     0017                     CCP1CON         equ	23	;# 
   383     0018                     RCSTA           equ	24	;# 
   384     0019                     TXREG           equ	25	;# 
   385     001A                     RCREG           equ	26	;# 
   386     001B                     CCPR2           equ	27	;# 
   387     001B                     CCPR2L          equ	27	;# 
   388     001C                     CCPR2H          equ	28	;# 
   389     001D                     CCP2CON         equ	29	;# 
   390     001E                     ADRESH          equ	30	;# 
   391     001F                     ADCON0          equ	31	;# 
   392     0081                     OPTION_REG      equ	129	;# 
   393     0085                     TRISA           equ	133	;# 
   394     0086                     TRISB           equ	134	;# 
   395     0087                     TRISC           equ	135	;# 
   396     0088                     TRISD           equ	136	;# 
   397     0089                     TRISE           equ	137	;# 
   398     008C                     PIE1            equ	140	;# 
   399     008D                     PIE2            equ	141	;# 
   400     008E                     PCON            equ	142	;# 
   401     0091                     SSPCON2         equ	145	;# 
   402     0092                     PR2             equ	146	;# 
   403     0093                     SSPADD          equ	147	;# 
   404     0094                     SSPSTAT         equ	148	;# 
   405     0098                     TXSTA           equ	152	;# 
   406     0099                     SPBRG           equ	153	;# 
   407     009C                     CMCON           equ	156	;# 
   408     009D                     CVRCON          equ	157	;# 
   409     009E                     ADRESL          equ	158	;# 
   410     009F                     ADCON1          equ	159	;# 
   411     010C                     EEDATA          equ	268	;# 
   412     010D                     EEADR           equ	269	;# 
   413     010E                     EEDATH          equ	270	;# 
   414     010F                     EEADRH          equ	271	;# 
   415     018C                     EECON1          equ	396	;# 
   416     018D                     EECON2          equ	397	;# 
   417     0000                     INDF            equ	0	;# 
   418     0001                     TMR0            equ	1	;# 
   419     0002                     PCL             equ	2	;# 
   420     0003                     STATUS          equ	3	;# 
   421     0004                     FSR             equ	4	;# 
   422     0005                     PORTA           equ	5	;# 
   423     0006                     PORTB           equ	6	;# 
   424     0007                     PORTC           equ	7	;# 
   425     0008                     PORTD           equ	8	;# 
   426     0009                     PORTE           equ	9	;# 
   427     000A                     PCLATH          equ	10	;# 
   428     000B                     INTCON          equ	11	;# 
   429     000C                     PIR1            equ	12	;# 
   430     000D                     PIR2            equ	13	;# 
   431     000E                     TMR1            equ	14	;# 
   432     000E                     TMR1L           equ	14	;# 
   433     000F                     TMR1H           equ	15	;# 
   434     0010                     T1CON           equ	16	;# 
   435     0011                     TMR2            equ	17	;# 
   436     0012                     T2CON           equ	18	;# 
   437     0013                     SSPBUF          equ	19	;# 
   438     0014                     SSPCON          equ	20	;# 
   439     0015                     CCPR1           equ	21	;# 
   440     0015                     CCPR1L          equ	21	;# 
   441     0016                     CCPR1H          equ	22	;# 
   442     0017                     CCP1CON         equ	23	;# 
   443     0018                     RCSTA           equ	24	;# 
   444     0019                     TXREG           equ	25	;# 
   445     001A                     RCREG           equ	26	;# 
   446     001B                     CCPR2           equ	27	;# 
   447     001B                     CCPR2L          equ	27	;# 
   448     001C                     CCPR2H          equ	28	;# 
   449     001D                     CCP2CON         equ	29	;# 
   450     001E                     ADRESH          equ	30	;# 
   451     001F                     ADCON0          equ	31	;# 
   452     0081                     OPTION_REG      equ	129	;# 
   453     0085                     TRISA           equ	133	;# 
   454     0086                     TRISB           equ	134	;# 
   455     0087                     TRISC           equ	135	;# 
   456     0088                     TRISD           equ	136	;# 
   457     0089                     TRISE           equ	137	;# 
   458     008C                     PIE1            equ	140	;# 
   459     008D                     PIE2            equ	141	;# 
   460     008E                     PCON            equ	142	;# 
   461     0091                     SSPCON2         equ	145	;# 
   462     0092                     PR2             equ	146	;# 
   463     0093                     SSPADD          equ	147	;# 
   464     0094                     SSPSTAT         equ	148	;# 
   465     0098                     TXSTA           equ	152	;# 
   466     0099                     SPBRG           equ	153	;# 
   467     009C                     CMCON           equ	156	;# 
   468     009D                     CVRCON          equ	157	;# 
   469     009E                     ADRESL          equ	158	;# 
   470     009F                     ADCON1          equ	159	;# 
   471     010C                     EEDATA          equ	268	;# 
   472     010D                     EEADR           equ	269	;# 
   473     010E                     EEDATH          equ	270	;# 
   474     010F                     EEADRH          equ	271	;# 
   475     018C                     EECON1          equ	396	;# 
   476     018D                     EECON2          equ	397	;# 
   477     0000                     INDF            equ	0	;# 
   478     0001                     TMR0            equ	1	;# 
   479     0002                     PCL             equ	2	;# 
   480     0003                     STATUS          equ	3	;# 
   481     0004                     FSR             equ	4	;# 
   482     0005                     PORTA           equ	5	;# 
   483     0006                     PORTB           equ	6	;# 
   484     0007                     PORTC           equ	7	;# 
   485     0008                     PORTD           equ	8	;# 
   486     0009                     PORTE           equ	9	;# 
   487     000A                     PCLATH          equ	10	;# 
   488     000B                     INTCON          equ	11	;# 
   489     000C                     PIR1            equ	12	;# 
   490     000D                     PIR2            equ	13	;# 
   491     000E                     TMR1            equ	14	;# 
   492     000E                     TMR1L           equ	14	;# 
   493     000F                     TMR1H           equ	15	;# 
   494     0010                     T1CON           equ	16	;# 
   495     0011                     TMR2            equ	17	;# 
   496     0012                     T2CON           equ	18	;# 
   497     0013                     SSPBUF          equ	19	;# 
   498     0014                     SSPCON          equ	20	;# 
   499     0015                     CCPR1           equ	21	;# 
   500     0015                     CCPR1L          equ	21	;# 
   501     0016                     CCPR1H          equ	22	;# 
   502     0017                     CCP1CON         equ	23	;# 
   503     0018                     RCSTA           equ	24	;# 
   504     0019                     TXREG           equ	25	;# 
   505     001A                     RCREG           equ	26	;# 
   506     001B                     CCPR2           equ	27	;# 
   507     001B                     CCPR2L          equ	27	;# 
   508     001C                     CCPR2H          equ	28	;# 
   509     001D                     CCP2CON         equ	29	;# 
   510     001E                     ADRESH          equ	30	;# 
   511     001F                     ADCON0          equ	31	;# 
   512     0081                     OPTION_REG      equ	129	;# 
   513     0085                     TRISA           equ	133	;# 
   514     0086                     TRISB           equ	134	;# 
   515     0087                     TRISC           equ	135	;# 
   516     0088                     TRISD           equ	136	;# 
   517     0089                     TRISE           equ	137	;# 
   518     008C                     PIE1            equ	140	;# 
   519     008D                     PIE2            equ	141	;# 
   520     008E                     PCON            equ	142	;# 
   521     0091                     SSPCON2         equ	145	;# 
   522     0092                     PR2             equ	146	;# 
   523     0093                     SSPADD          equ	147	;# 
   524     0094                     SSPSTAT         equ	148	;# 
   525     0098                     TXSTA           equ	152	;# 
   526     0099                     SPBRG           equ	153	;# 
   527     009C                     CMCON           equ	156	;# 
   528     009D                     CVRCON          equ	157	;# 
   529     009E                     ADRESL          equ	158	;# 
   530     009F                     ADCON1          equ	159	;# 
   531     010C                     EEDATA          equ	268	;# 
   532     010D                     EEADR           equ	269	;# 
   533     010E                     EEDATH          equ	270	;# 
   534     010F                     EEADRH          equ	271	;# 
   535     018C                     EECON1          equ	396	;# 
   536     018D                     EECON2          equ	397	;# 
   537     0000                     INDF            equ	0	;# 
   538     0001                     TMR0            equ	1	;# 
   539     0002                     PCL             equ	2	;# 
   540     0003                     STATUS          equ	3	;# 
   541     0004                     FSR             equ	4	;# 
   542     0005                     PORTA           equ	5	;# 
   543     0006                     PORTB           equ	6	;# 
   544     0007                     PORTC           equ	7	;# 
   545     0008                     PORTD           equ	8	;# 
   546     0009                     PORTE           equ	9	;# 
   547     000A                     PCLATH          equ	10	;# 
   548     000B                     INTCON          equ	11	;# 
   549     000C                     PIR1            equ	12	;# 
   550     000D                     PIR2            equ	13	;# 
   551     000E                     TMR1            equ	14	;# 
   552     000E                     TMR1L           equ	14	;# 
   553     000F                     TMR1H           equ	15	;# 
   554     0010                     T1CON           equ	16	;# 
   555     0011                     TMR2            equ	17	;# 
   556     0012                     T2CON           equ	18	;# 
   557     0013                     SSPBUF          equ	19	;# 
   558     0014                     SSPCON          equ	20	;# 
   559     0015                     CCPR1           equ	21	;# 
   560     0015                     CCPR1L          equ	21	;# 
   561     0016                     CCPR1H          equ	22	;# 
   562     0017                     CCP1CON         equ	23	;# 
   563     0018                     RCSTA           equ	24	;# 
   564     0019                     TXREG           equ	25	;# 
   565     001A                     RCREG           equ	26	;# 
   566     001B                     CCPR2           equ	27	;# 
   567     001B                     CCPR2L          equ	27	;# 
   568     001C                     CCPR2H          equ	28	;# 
   569     001D                     CCP2CON         equ	29	;# 
   570     001E                     ADRESH          equ	30	;# 
   571     001F                     ADCON0          equ	31	;# 
   572     0081                     OPTION_REG      equ	129	;# 
   573     0085                     TRISA           equ	133	;# 
   574     0086                     TRISB           equ	134	;# 
   575     0087                     TRISC           equ	135	;# 
   576     0088                     TRISD           equ	136	;# 
   577     0089                     TRISE           equ	137	;# 
   578     008C                     PIE1            equ	140	;# 
   579     008D                     PIE2            equ	141	;# 
   580     008E                     PCON            equ	142	;# 
   581     0091                     SSPCON2         equ	145	;# 
   582     0092                     PR2             equ	146	;# 
   583     0093                     SSPADD          equ	147	;# 
   584     0094                     SSPSTAT         equ	148	;# 
   585     0098                     TXSTA           equ	152	;# 
   586     0099                     SPBRG           equ	153	;# 
   587     009C                     CMCON           equ	156	;# 
   588     009D                     CVRCON          equ	157	;# 
   589     009E                     ADRESL          equ	158	;# 
   590     009F                     ADCON1          equ	159	;# 
   591     010C                     EEDATA          equ	268	;# 
   592     010D                     EEADR           equ	269	;# 
   593     010E                     EEDATH          equ	270	;# 
   594     010F                     EEADRH          equ	271	;# 
   595     018C                     EECON1          equ	396	;# 
   596     018D                     EECON2          equ	397	;# 
   597     0000                     INDF            equ	0	;# 
   598     0001                     TMR0            equ	1	;# 
   599     0002                     PCL             equ	2	;# 
   600     0003                     STATUS          equ	3	;# 
   601     0004                     FSR             equ	4	;# 
   602     0005                     PORTA           equ	5	;# 
   603     0006                     PORTB           equ	6	;# 
   604     0007                     PORTC           equ	7	;# 
   605     0008                     PORTD           equ	8	;# 
   606     0009                     PORTE           equ	9	;# 
   607     000A                     PCLATH          equ	10	;# 
   608     000B                     INTCON          equ	11	;# 
   609     000C                     PIR1            equ	12	;# 
   610     000D                     PIR2            equ	13	;# 
   611     000E                     TMR1            equ	14	;# 
   612     000E                     TMR1L           equ	14	;# 
   613     000F                     TMR1H           equ	15	;# 
   614     0010                     T1CON           equ	16	;# 
   615     0011                     TMR2            equ	17	;# 
   616     0012                     T2CON           equ	18	;# 
   617     0013                     SSPBUF          equ	19	;# 
   618     0014                     SSPCON          equ	20	;# 
   619     0015                     CCPR1           equ	21	;# 
   620     0015                     CCPR1L          equ	21	;# 
   621     0016                     CCPR1H          equ	22	;# 
   622     0017                     CCP1CON         equ	23	;# 
   623     0018                     RCSTA           equ	24	;# 
   624     0019                     TXREG           equ	25	;# 
   625     001A                     RCREG           equ	26	;# 
   626     001B                     CCPR2           equ	27	;# 
   627     001B                     CCPR2L          equ	27	;# 
   628     001C                     CCPR2H          equ	28	;# 
   629     001D                     CCP2CON         equ	29	;# 
   630     001E                     ADRESH          equ	30	;# 
   631     001F                     ADCON0          equ	31	;# 
   632     0081                     OPTION_REG      equ	129	;# 
   633     0085                     TRISA           equ	133	;# 
   634     0086                     TRISB           equ	134	;# 
   635     0087                     TRISC           equ	135	;# 
   636     0088                     TRISD           equ	136	;# 
   637     0089                     TRISE           equ	137	;# 
   638     008C                     PIE1            equ	140	;# 
   639     008D                     PIE2            equ	141	;# 
   640     008E                     PCON            equ	142	;# 
   641     0091                     SSPCON2         equ	145	;# 
   642     0092                     PR2             equ	146	;# 
   643     0093                     SSPADD          equ	147	;# 
   644     0094                     SSPSTAT         equ	148	;# 
   645     0098                     TXSTA           equ	152	;# 
   646     0099                     SPBRG           equ	153	;# 
   647     009C                     CMCON           equ	156	;# 
   648     009D                     CVRCON          equ	157	;# 
   649     009E                     ADRESL          equ	158	;# 
   650     009F                     ADCON1          equ	159	;# 
   651     010C                     EEDATA          equ	268	;# 
   652     010D                     EEADR           equ	269	;# 
   653     010E                     EEDATH          equ	270	;# 
   654     010F                     EEADRH          equ	271	;# 
   655     018C                     EECON1          equ	396	;# 
   656     018D                     EECON2          equ	397	;# 
   657     0000                     INDF            equ	0	;# 
   658     0001                     TMR0            equ	1	;# 
   659     0002                     PCL             equ	2	;# 
   660     0003                     STATUS          equ	3	;# 
   661     0004                     FSR             equ	4	;# 
   662     0005                     PORTA           equ	5	;# 
   663     0006                     PORTB           equ	6	;# 
   664     0007                     PORTC           equ	7	;# 
   665     0008                     PORTD           equ	8	;# 
   666     0009                     PORTE           equ	9	;# 
   667     000A                     PCLATH          equ	10	;# 
   668     000B                     INTCON          equ	11	;# 
   669     000C                     PIR1            equ	12	;# 
   670     000D                     PIR2            equ	13	;# 
   671     000E                     TMR1            equ	14	;# 
   672     000E                     TMR1L           equ	14	;# 
   673     000F                     TMR1H           equ	15	;# 
   674     0010                     T1CON           equ	16	;# 
   675     0011                     TMR2            equ	17	;# 
   676     0012                     T2CON           equ	18	;# 
   677     0013                     SSPBUF          equ	19	;# 
   678     0014                     SSPCON          equ	20	;# 
   679     0015                     CCPR1           equ	21	;# 
   680     0015                     CCPR1L          equ	21	;# 
   681     0016                     CCPR1H          equ	22	;# 
   682     0017                     CCP1CON         equ	23	;# 
   683     0018                     RCSTA           equ	24	;# 
   684     0019                     TXREG           equ	25	;# 
   685     001A                     RCREG           equ	26	;# 
   686     001B                     CCPR2           equ	27	;# 
   687     001B                     CCPR2L          equ	27	;# 
   688     001C                     CCPR2H          equ	28	;# 
   689     001D                     CCP2CON         equ	29	;# 
   690     001E                     ADRESH          equ	30	;# 
   691     001F                     ADCON0          equ	31	;# 
   692     0081                     OPTION_REG      equ	129	;# 
   693     0085                     TRISA           equ	133	;# 
   694     0086                     TRISB           equ	134	;# 
   695     0087                     TRISC           equ	135	;# 
   696     0088                     TRISD           equ	136	;# 
   697     0089                     TRISE           equ	137	;# 
   698     008C                     PIE1            equ	140	;# 
   699     008D                     PIE2            equ	141	;# 
   700     008E                     PCON            equ	142	;# 
   701     0091                     SSPCON2         equ	145	;# 
   702     0092                     PR2             equ	146	;# 
   703     0093                     SSPADD          equ	147	;# 
   704     0094                     SSPSTAT         equ	148	;# 
   705     0098                     TXSTA           equ	152	;# 
   706     0099                     SPBRG           equ	153	;# 
   707     009C                     CMCON           equ	156	;# 
   708     009D                     CVRCON          equ	157	;# 
   709     009E                     ADRESL          equ	158	;# 
   710     009F                     ADCON1          equ	159	;# 
   711     010C                     EEDATA          equ	268	;# 
   712     010D                     EEADR           equ	269	;# 
   713     010E                     EEDATH          equ	270	;# 
   714     010F                     EEADRH          equ	271	;# 
   715     018C                     EECON1          equ	396	;# 
   716     018D                     EECON2          equ	397	;# 
   717     0000                     INDF            equ	0	;# 
   718     0001                     TMR0            equ	1	;# 
   719     0002                     PCL             equ	2	;# 
   720     0003                     STATUS          equ	3	;# 
   721     0004                     FSR             equ	4	;# 
   722     0005                     PORTA           equ	5	;# 
   723     0006                     PORTB           equ	6	;# 
   724     0007                     PORTC           equ	7	;# 
   725     0008                     PORTD           equ	8	;# 
   726     0009                     PORTE           equ	9	;# 
   727     000A                     PCLATH          equ	10	;# 
   728     000B                     INTCON          equ	11	;# 
   729     000C                     PIR1            equ	12	;# 
   730     000D                     PIR2            equ	13	;# 
   731     000E                     TMR1            equ	14	;# 
   732     000E                     TMR1L           equ	14	;# 
   733     000F                     TMR1H           equ	15	;# 
   734     0010                     T1CON           equ	16	;# 
   735     0011                     TMR2            equ	17	;# 
   736     0012                     T2CON           equ	18	;# 
   737     0013                     SSPBUF          equ	19	;# 
   738     0014                     SSPCON          equ	20	;# 
   739     0015                     CCPR1           equ	21	;# 
   740     0015                     CCPR1L          equ	21	;# 
   741     0016                     CCPR1H          equ	22	;# 
   742     0017                     CCP1CON         equ	23	;# 
   743     0018                     RCSTA           equ	24	;# 
   744     0019                     TXREG           equ	25	;# 
   745     001A                     RCREG           equ	26	;# 
   746     001B                     CCPR2           equ	27	;# 
   747     001B                     CCPR2L          equ	27	;# 
   748     001C                     CCPR2H          equ	28	;# 
   749     001D                     CCP2CON         equ	29	;# 
   750     001E                     ADRESH          equ	30	;# 
   751     001F                     ADCON0          equ	31	;# 
   752     0081                     OPTION_REG      equ	129	;# 
   753     0085                     TRISA           equ	133	;# 
   754     0086                     TRISB           equ	134	;# 
   755     0087                     TRISC           equ	135	;# 
   756     0088                     TRISD           equ	136	;# 
   757     0089                     TRISE           equ	137	;# 
   758     008C                     PIE1            equ	140	;# 
   759     008D                     PIE2            equ	141	;# 
   760     008E                     PCON            equ	142	;# 
   761     0091                     SSPCON2         equ	145	;# 
   762     0092                     PR2             equ	146	;# 
   763     0093                     SSPADD          equ	147	;# 
   764     0094                     SSPSTAT         equ	148	;# 
   765     0098                     TXSTA           equ	152	;# 
   766     0099                     SPBRG           equ	153	;# 
   767     009C                     CMCON           equ	156	;# 
   768     009D                     CVRCON          equ	157	;# 
   769     009E                     ADRESL          equ	158	;# 
   770     009F                     ADCON1          equ	159	;# 
   771     010C                     EEDATA          equ	268	;# 
   772     010D                     EEADR           equ	269	;# 
   773     010E                     EEDATH          equ	270	;# 
   774     010F                     EEADRH          equ	271	;# 
   775     018C                     EECON1          equ	396	;# 
   776     018D                     EECON2          equ	397	;# 
   777                           
   778                           	psect	idataCOMMON
   779     0003                     __pidataCOMMON:
   780                           
   781                           ;initializer for read_digital_keypad@once
   782     0003  3401               	retlw	1
   783                           
   784                           	psect	idataBANK0
   785     124A                     __pidataBANK0:
   786                           
   787                           ;initializer for menu_screen@select_pos
   788     124A  3401               	retlw	1
   789                           
   790                           ;initializer for login_screen@attempt
   791     124B  3403               	retlw	3
   792                           
   793                           ;initializer for _sec
   794     124C  343C               	retlw	60
   795                           
   796                           ;initializer for _pwd_flag
   797     124D  3401               	retlw	1
   798                           
   799                           ;initializer for _return_time
   800     124E  3405               	retlw	5
   801                           
   802                           	psect	idataBANK1
   803     130F                     __pidataBANK1:
   804                           
   805                           ;initializer for _gear
   806     130F  348F               	retlw	low (STR_1| (0+32768))
   807     1310  3489               	retlw	high (STR_1| (0+32768))
   808     1311  3495               	retlw	low (STR_2| (0+32768))
   809     1312  3489               	retlw	high (STR_2| (0+32768))
   810     1313  3477               	retlw	low (STR_3| (0+32768))
   811     1314  3489               	retlw	high (STR_3| (0+32768))
   812     1315  347A               	retlw	low (STR_4| (0+32768))
   813     1316  3489               	retlw	high (STR_4| (0+32768))
   814     1317  347D               	retlw	low (STR_5| (0+32768))
   815     1318  3489               	retlw	high (STR_5| (0+32768))
   816     1319  3480               	retlw	low (STR_6| (0+32768))
   817     131A  3489               	retlw	high (STR_6| (0+32768))
   818     131B  3483               	retlw	low (STR_7| (0+32768))
   819     131C  3489               	retlw	high (STR_7| (0+32768))
   820                           
   821                           ;initializer for _menu
   822     131D  3451               	retlw	low (STR_14| (0+32768))
   823     131E  3489               	retlw	high (STR_14| (0+32768))
   824     131F  343E               	retlw	low (STR_15| (0+32768))
   825     1320  3489               	retlw	high (STR_15| (0+32768))
   826     1321  3411               	retlw	low (STR_16| (0+32768))
   827     1322  3489               	retlw	high (STR_16| (0+32768))
   828     1323  34EA               	retlw	low (STR_17| (0+32768))
   829     1324  3488               	retlw	high (STR_17| (0+32768))
   830     1325  3466               	retlw	low (STR_18| (0+32768))
   831     1326  3488               	retlw	high (STR_18| (0+32768))
   832                           
   833                           ;initializer for main@F1244
   834     1327  344F               	retlw	79
   835     1328  344E               	retlw	78
   836     1329  3400               	retlw	0
   837     0019                     _TXREG          set	25
   838     001A                     _RCREG          set	26
   839     0001                     _TMR0           set	1
   840     0008                     _PORTD          set	8
   841     0013                     _SSPBUF         set	19
   842     0006                     _PORTB          set	6
   843     001E                     _ADRESH         set	30
   844     001F                     _ADCON0         set	31
   845     0064                     _TXIF           set	100
   846     0065                     _RCIF           set	101
   847     00C4                     _CREN           set	196
   848     00C7                     _SPEN           set	199
   849     0091                     _T2CKPS1        set	145
   850     0090                     _T2CKPS0        set	144
   851     005D                     _TMR0IE         set	93
   852     0061                     _TMR2IF         set	97
   853     0049                     _RE1            set	73
   854     004A                     _RE2            set	74
   855     00A5                     _SSPEN          set	165
   856     00A3                     _SSPM3          set	163
   857     00FA                     _nDONE          set	250
   858     00FA                     _GO             set	250
   859     00F8                     _ADON           set	248
   860     0092                     _TMR2ON         set	146
   861     005F                     _GIE            set	95
   862     005E                     _PEIE           set	94
   863     0099                     _SPBRG          set	153
   864     0092                     _PR2            set	146
   865     0088                     _TRISD          set	136
   866     0091                     _SSPCON2        set	145
   867     0093                     _SSPADD         set	147
   868     0086                     _TRISB          set	134
   869     009E                     _ADRESL         set	158
   870     0465                     _RCIE           set	1125
   871     0461                     _TMR2IE         set	1121
   872     040B                     _PSA            set	1035
   873     040D                     _T0CS           set	1037
   874     0449                     _TRISE1         set	1097
   875     044A                     _TRISE2         set	1098
   876     048E                     _ACKSTAT        set	1166
   877     048C                     _ACKEN          set	1164
   878     048D                     _ACKDT          set	1165
   879     048B                     _RCEN           set	1163
   880     048A                     _PEN            set	1162
   881     0488                     _SEN            set	1160
   882     04A2                     _R_nW           set	1186
   883     04FF                     _ADFM           set	1279
   884                           
   885                           	psect	strings
   886     1000                     __pstrings:
   887     1000                     stringtab:
   888     1000                     __stringtab:
   889                           
   890                           ;	String table - string pointers are 2 bytes each
   891     1000  1BFF               	btfsc	btemp+1,7
   892     1001  280A               	ljmp	stringcode
   893     1002  1383               	bcf	3,7
   894     1003  187F               	btfsc	btemp+1,0
   895     1004  1783               	bsf	3,7
   896     1005  0800               	movf	0,w
   897     1006  0A84               	incf	4,f
   898     1007  1903               	skipnz
   899     1008  0AFF               	incf	btemp+1,f
   900     1009  0008               	return
   901     100A                     stringcode:
   902     100A  087F               	movf	btemp+1,w
   903     100B  397F               	andlw	127
   904     100C  008A               	movwf	10
   905     100D  0804               	movf	4,w
   906     100E  0A84               	incf	4,f
   907     100F  1903               	skipnz
   908     1010  0AFF               	incf	btemp+1,f
   909     1011  0082               	movwf	2
   910     1012                     __stringbase:
   911     1012                     __end_of__stringtab:
   912                           
   913                           	psect	stringtext
   914     0800                     __pstringtext:
   915     0800                     STR_30:
   916     0800  3423               	retlw	35	;'#'
   917     0801  3420               	retlw	32	;' '
   918     0802  3454               	retlw	84	;'T'
   919     0803  3449               	retlw	73	;'I'
   920     0804  344D               	retlw	77	;'M'
   921     0805  3445               	retlw	69	;'E'
   922     0806  3420               	retlw	32	;' '
   923     0807  3420               	retlw	32	;' '
   924     0808  3420               	retlw	32	;' '
   925     0809  3420               	retlw	32	;' '
   926     080A  3420               	retlw	32	;' '
   927     080B  3445               	retlw	69	;'E'
   928     080C  3420               	retlw	32	;' '
   929     080D  3420               	retlw	32	;' '
   930     080E  3453               	retlw	83	;'S'
   931     080F  3450               	retlw	80	;'P'
   932     0810  340A               	retlw	10
   933     0811  340D               	retlw	13
   934     0812  3400               	retlw	0
   935     0813                     STR_42:
   936     0813  3450               	retlw	80	;'P'
   937     0814  3441               	retlw	65	;'A'
   938     0815  3453               	retlw	83	;'S'
   939     0816  3453               	retlw	83	;'S'
   940     0817  3457               	retlw	87	;'W'
   941     0818  344F               	retlw	79	;'O'
   942     0819  3452               	retlw	82	;'R'
   943     081A  3444               	retlw	68	;'D'
   944     081B  3420               	retlw	32	;' '
   945     081C  3443               	retlw	67	;'C'
   946     081D  3448               	retlw	72	;'H'
   947     081E  3441               	retlw	65	;'A'
   948     081F  344E               	retlw	78	;'N'
   949     0820  3447               	retlw	71	;'G'
   950     0821  3445               	retlw	69	;'E'
   951     0822  3444               	retlw	68	;'D'
   952     0823  3400               	retlw	0
   953     0824                     STR_27:
   954     0824  3423               	retlw	35	;'#'
   955     0825  3420               	retlw	32	;' '
   956     0826  3454               	retlw	84	;'T'
   957     0827  3449               	retlw	73	;'I'
   958     0828  344D               	retlw	77	;'M'
   959     0829  3445               	retlw	69	;'E'
   960     082A  3420               	retlw	32	;' '
   961     082B  3420               	retlw	32	;' '
   962     082C  3420               	retlw	32	;' '
   963     082D  3420               	retlw	32	;' '
   964     082E  3420               	retlw	32	;' '
   965     082F  3445               	retlw	69	;'E'
   966     0830  3420               	retlw	32	;' '
   967     0831  3420               	retlw	32	;' '
   968     0832  3453               	retlw	83	;'S'
   969     0833  3450               	retlw	80	;'P'
   970     0834  3400               	retlw	0
   971     0835                     STR_19:
   972     0835  3420               	retlw	32	;' '
   973     0836  3454               	retlw	84	;'T'
   974     0837  3449               	retlw	73	;'I'
   975     0838  344D               	retlw	77	;'M'
   976     0839  3445               	retlw	69	;'E'
   977     083A  3420               	retlw	32	;' '
   978     083B  3420               	retlw	32	;' '
   979     083C  3420               	retlw	32	;' '
   980     083D  3420               	retlw	32	;' '
   981     083E  3420               	retlw	32	;' '
   982     083F  3445               	retlw	69	;'E'
   983     0840  3456               	retlw	86	;'V'
   984     0841  3420               	retlw	32	;' '
   985     0842  3420               	retlw	32	;' '
   986     0843  3453               	retlw	83	;'S'
   987     0844  3450               	retlw	80	;'P'
   988     0845  3400               	retlw	0
   989     0846                     STR_33:
   990     0846  3454               	retlw	84	;'T'
   991     0847  3449               	retlw	73	;'I'
   992     0848  344D               	retlw	77	;'M'
   993     0849  3445               	retlw	69	;'E'
   994     084A  3420               	retlw	32	;' '
   995     084B  3428               	retlw	40	;'('
   996     084C  3448               	retlw	72	;'H'
   997     084D  3448               	retlw	72	;'H'
   998     084E  343A               	retlw	58	;':'
   999     084F  344D               	retlw	77	;'M'
  1000     0850  344D               	retlw	77	;'M'
  1001     0851  343A               	retlw	58	;':'
  1002     0852  3453               	retlw	83	;'S'
  1003     0853  3453               	retlw	83	;'S'
  1004     0854  3429               	retlw	41	;')'
  1005     0855  3400               	retlw	0
  1006     0856                     STR_21:
  1007     0856  3459               	retlw	89	;'Y'
  1008     0857  346F               	retlw	111	;'o'
  1009     0858  3475               	retlw	117	;'u'
  1010     0859  3420               	retlw	32	;' '
  1011     085A  3461               	retlw	97	;'a'
  1012     085B  3472               	retlw	114	;'r'
  1013     085C  3465               	retlw	101	;'e'
  1014     085D  3420               	retlw	32	;' '
  1015     085E  3462               	retlw	98	;'b'
  1016     085F  346C               	retlw	108	;'l'
  1017     0860  346F               	retlw	111	;'o'
  1018     0861  3463               	retlw	99	;'c'
  1019     0862  346B               	retlw	107	;'k'
  1020     0863  3465               	retlw	101	;'e'
  1021     0864  3464               	retlw	100	;'d'
  1022     0865  3400               	retlw	0
  1023     0866                     STR_18:
  1024     0866  3443               	retlw	67	;'C'
  1025     0867  3468               	retlw	104	;'h'
  1026     0868  3461               	retlw	97	;'a'
  1027     0869  346E               	retlw	110	;'n'
  1028     086A  3467               	retlw	103	;'g'
  1029     086B  3465               	retlw	101	;'e'
  1030     086C  3420               	retlw	32	;' '
  1031     086D  3450               	retlw	80	;'P'
  1032     086E  3461               	retlw	97	;'a'
  1033     086F  3473               	retlw	115	;'s'
  1034     0870  3473               	retlw	115	;'s'
  1035     0871  3420               	retlw	32	;' '
  1036     0872  3420               	retlw	32	;' '
  1037     0873  3420               	retlw	32	;' '
  1038     0874  3400               	retlw	0
  1039     0875                     STR_25:
  1040     0875  3441               	retlw	65	;'A'
  1041     0876  3474               	retlw	116	;'t'
  1042     0877  3474               	retlw	116	;'t'
  1043     0878  3465               	retlw	101	;'e'
  1044     0879  346D               	retlw	109	;'m'
  1045     087A  3470               	retlw	112	;'p'
  1046     087B  3474               	retlw	116	;'t'
  1047     087C  3473               	retlw	115	;'s'
  1048     087D  3420               	retlw	32	;' '
  1049     087E  346C               	retlw	108	;'l'
  1050     087F  3465               	retlw	101	;'e'
  1051     0880  3466               	retlw	102	;'f'
  1052     0881  3474               	retlw	116	;'t'
  1053     0882  343A               	retlw	58	;':'
  1054     0883  3400               	retlw	0
  1055     0884                     STR_41:
  1056     0884  3445               	retlw	69	;'E'
  1057     0885  344E               	retlw	78	;'N'
  1058     0886  3454               	retlw	84	;'T'
  1059     0887  3445               	retlw	69	;'E'
  1060     0888  3452               	retlw	82	;'R'
  1061     0889  3420               	retlw	32	;' '
  1062     088A  344E               	retlw	78	;'N'
  1063     088B  3445               	retlw	69	;'E'
  1064     088C  3457               	retlw	87	;'W'
  1065     088D  3420               	retlw	32	;' '
  1066     088E  3450               	retlw	80	;'P'
  1067     088F  3457               	retlw	87	;'W'
  1068     0890  3452               	retlw	82	;'R'
  1069     0891  3444               	retlw	68	;'D'
  1070     0892  3400               	retlw	0
  1071     0893                     STR_39:
  1072     0893  3434               	retlw	52	;'4'
  1073     0894  3420               	retlw	32	;' '
  1074     0895  3444               	retlw	68	;'D'
  1075     0896  3449               	retlw	73	;'I'
  1076     0897  3447               	retlw	71	;'G'
  1077     0898  3449               	retlw	73	;'I'
  1078     0899  3454               	retlw	84	;'T'
  1079     089A  3420               	retlw	32	;' '
  1080     089B  3454               	retlw	84	;'T'
  1081     089C  344F               	retlw	79	;'O'
  1082     089D  3420               	retlw	32	;' '
  1083     089E  3453               	retlw	83	;'S'
  1084     089F  3445               	retlw	69	;'E'
  1085     08A0  3454               	retlw	84	;'T'
  1086     08A1  3400               	retlw	0
  1087     08A2                     STR_24:
  1088     08A2  3457               	retlw	87	;'W'
  1089     08A3  3472               	retlw	114	;'r'
  1090     08A4  346F               	retlw	111	;'o'
  1091     08A5  346E               	retlw	110	;'n'
  1092     08A6  3467               	retlw	103	;'g'
  1093     08A7  3420               	retlw	32	;' '
  1094     08A8  3470               	retlw	112	;'p'
  1095     08A9  3461               	retlw	97	;'a'
  1096     08AA  3473               	retlw	115	;'s'
  1097     08AB  3473               	retlw	115	;'s'
  1098     08AC  3477               	retlw	119	;'w'
  1099     08AD  346F               	retlw	111	;'o'
  1100     08AE  3472               	retlw	114	;'r'
  1101     08AF  3464               	retlw	100	;'d'
  1102     08B0  3400               	retlw	0
  1103     08B1                     STR_9:
  1104     08B1  3445               	retlw	69	;'E'
  1105     08B2  346E               	retlw	110	;'n'
  1106     08B3  3474               	retlw	116	;'t'
  1107     08B4  3465               	retlw	101	;'e'
  1108     08B5  3472               	retlw	114	;'r'
  1109     08B6  3420               	retlw	32	;' '
  1110     08B7  3470               	retlw	112	;'p'
  1111     08B8  3461               	retlw	97	;'a'
  1112     08B9  3473               	retlw	115	;'s'
  1113     08BA  3473               	retlw	115	;'s'
  1114     08BB  3477               	retlw	119	;'w'
  1115     08BC  346F               	retlw	111	;'o'
  1116     08BD  3472               	retlw	114	;'r'
  1117     08BE  3464               	retlw	100	;'d'
  1118     08BF  3400               	retlw	0
  1119     08C0                     STR_37:
  1120     08C0  3445               	retlw	69	;'E'
  1121     08C1  344E               	retlw	78	;'N'
  1122     08C2  3454               	retlw	84	;'T'
  1123     08C3  3445               	retlw	69	;'E'
  1124     08C4  3452               	retlw	82	;'R'
  1125     08C5  3420               	retlw	32	;' '
  1126     08C6  344F               	retlw	79	;'O'
  1127     08C7  344C               	retlw	76	;'L'
  1128     08C8  3444               	retlw	68	;'D'
  1129     08C9  3420               	retlw	32	;' '
  1130     08CA  3450               	retlw	80	;'P'
  1131     08CB  3457               	retlw	87	;'W'
  1132     08CC  3444               	retlw	68	;'D'
  1133     08CD  3400               	retlw	0
  1134     08CE                     STR_38:
  1135     08CE  3445               	retlw	69	;'E'
  1136     08CF  344E               	retlw	78	;'N'
  1137     08D0  3454               	retlw	84	;'T'
  1138     08D1  3445               	retlw	69	;'E'
  1139     08D2  3452               	retlw	82	;'R'
  1140     08D3  3420               	retlw	32	;' '
  1141     08D4  344E               	retlw	78	;'N'
  1142     08D5  3445               	retlw	69	;'E'
  1143     08D6  3457               	retlw	87	;'W'
  1144     08D7  3420               	retlw	32	;' '
  1145     08D8  3450               	retlw	80	;'P'
  1146     08D9  3457               	retlw	87	;'W'
  1147     08DA  3444               	retlw	68	;'D'
  1148     08DB  3400               	retlw	0
  1149     08DC                     STR_20:
  1150     08DC  344C               	retlw	76	;'L'
  1151     08DD  346F               	retlw	111	;'o'
  1152     08DE  3467               	retlw	103	;'g'
  1153     08DF  3469               	retlw	105	;'i'
  1154     08E0  346E               	retlw	110	;'n'
  1155     08E1  3420               	retlw	32	;' '
  1156     08E2  3453               	retlw	83	;'S'
  1157     08E3  3475               	retlw	117	;'u'
  1158     08E4  3463               	retlw	99	;'c'
  1159     08E5  3463               	retlw	99	;'c'
  1160     08E6  3465               	retlw	101	;'e'
  1161     08E7  3473               	retlw	115	;'s'
  1162     08E8  3473               	retlw	115	;'s'
  1163     08E9  3400               	retlw	0
  1164     08EA                     STR_17:
  1165     08EA  3453               	retlw	83	;'S'
  1166     08EB  3465               	retlw	101	;'e'
  1167     08EC  3474               	retlw	116	;'t'
  1168     08ED  3420               	retlw	32	;' '
  1169     08EE  3454               	retlw	84	;'T'
  1170     08EF  3469               	retlw	105	;'i'
  1171     08F0  346D               	retlw	109	;'m'
  1172     08F1  3465               	retlw	101	;'e'
  1173     08F2  3420               	retlw	32	;' '
  1174     08F3  3420               	retlw	32	;' '
  1175     08F4  3420               	retlw	32	;' '
  1176     08F5  3420               	retlw	32	;' '
  1177     08F6  3400               	retlw	0
  1178     08F7                     STR_31:
  1179     08F7  3444               	retlw	68	;'D'
  1180     08F8  344F               	retlw	79	;'O'
  1181     08F9  3457               	retlw	87	;'W'
  1182     08FA  344E               	retlw	78	;'N'
  1183     08FB  344C               	retlw	76	;'L'
  1184     08FC  344F               	retlw	79	;'O'
  1185     08FD  3441               	retlw	65	;'A'
  1186     08FE  3444               	retlw	68	;'D'
  1187     08FF  3420               	retlw	32	;' '
  1188     0900  344C               	retlw	76	;'L'
  1189     0901  344F               	retlw	79	;'O'
  1190     0902  3447               	retlw	71	;'G'
  1191     0903  3400               	retlw	0
  1192     0904                     STR_32:
  1193     0904  3453               	retlw	83	;'S'
  1194     0905  3455               	retlw	85	;'U'
  1195     0906  3443               	retlw	67	;'C'
  1196     0907  3443               	retlw	67	;'C'
  1197     0908  3445               	retlw	69	;'E'
  1198     0909  3453               	retlw	83	;'S'
  1199     090A  3453               	retlw	83	;'S'
  1200     090B  3446               	retlw	70	;'F'
  1201     090C  3455               	retlw	85	;'U'
  1202     090D  344C               	retlw	76	;'L'
  1203     090E  344C               	retlw	76	;'L'
  1204     090F  3459               	retlw	89	;'Y'
  1205     0910  3400               	retlw	0
  1206     0911                     STR_16:
  1207     0911  3444               	retlw	68	;'D'
  1208     0912  346F               	retlw	111	;'o'
  1209     0913  3477               	retlw	119	;'w'
  1210     0914  346E               	retlw	110	;'n'
  1211     0915  346C               	retlw	108	;'l'
  1212     0916  346F               	retlw	111	;'o'
  1213     0917  3461               	retlw	97	;'a'
  1214     0918  3464               	retlw	100	;'d'
  1215     0919  3420               	retlw	32	;' '
  1216     091A  344C               	retlw	76	;'L'
  1217     091B  346F               	retlw	111	;'o'
  1218     091C  3467               	retlw	103	;'g'
  1219     091D  3400               	retlw	0
  1220     091E                     STR_29:
  1221     091E  3453               	retlw	83	;'S'
  1222     091F  3455               	retlw	85	;'U'
  1223     0920  3443               	retlw	67	;'C'
  1224     0921  3443               	retlw	67	;'C'
  1225     0922  3445               	retlw	69	;'E'
  1226     0923  3453               	retlw	83	;'S'
  1227     0924  3453               	retlw	83	;'S'
  1228     0925  3446               	retlw	70	;'F'
  1229     0926  3455               	retlw	85	;'U'
  1230     0927  344C               	retlw	76	;'L'
  1231     0928  344C               	retlw	76	;'L'
  1232     0929  3400               	retlw	0
  1233     092A                     STR_28:
  1234     092A  3443               	retlw	67	;'C'
  1235     092B  344C               	retlw	76	;'L'
  1236     092C  3445               	retlw	69	;'E'
  1237     092D  3441               	retlw	65	;'A'
  1238     092E  3452               	retlw	82	;'R'
  1239     092F  3420               	retlw	32	;' '
  1240     0930  344C               	retlw	76	;'L'
  1241     0931  344F               	retlw	79	;'O'
  1242     0932  3447               	retlw	71	;'G'
  1243     0933  3400               	retlw	0
  1244     0934                     STR_40:
  1245     0934  344F               	retlw	79	;'O'
  1246     0935  3452               	retlw	82	;'R'
  1247     0936  3420               	retlw	32	;' '
  1248     0937  3443               	retlw	67	;'C'
  1249     0938  3441               	retlw	65	;'A'
  1250     0939  344E               	retlw	78	;'N'
  1251     093A  3443               	retlw	67	;'C'
  1252     093B  3445               	retlw	69	;'E'
  1253     093C  344C               	retlw	76	;'L'
  1254     093D  3400               	retlw	0
  1255     093E                     STR_15:
  1256     093E  3443               	retlw	67	;'C'
  1257     093F  346C               	retlw	108	;'l'
  1258     0940  3465               	retlw	101	;'e'
  1259     0941  3461               	retlw	97	;'a'
  1260     0942  3472               	retlw	114	;'r'
  1261     0943  3420               	retlw	32	;' '
  1262     0944  344C               	retlw	76	;'L'
  1263     0945  346F               	retlw	111	;'o'
  1264     0946  3467               	retlw	103	;'g'
  1265     0947  3400               	retlw	0
  1266     0948                     STR_35:
  1267     0948  3454               	retlw	84	;'T'
  1268     0949  3449               	retlw	73	;'I'
  1269     094A  344D               	retlw	77	;'M'
  1270     094B  3445               	retlw	69	;'E'
  1271     094C  3420               	retlw	32	;' '
  1272     094D  3453               	retlw	83	;'S'
  1273     094E  3445               	retlw	69	;'E'
  1274     094F  3454               	retlw	84	;'T'
  1275     0950  3400               	retlw	0
  1276     0951                     STR_14:
  1277     0951  3456               	retlw	86	;'V'
  1278     0952  3469               	retlw	105	;'i'
  1279     0953  3465               	retlw	101	;'e'
  1280     0954  3477               	retlw	119	;'w'
  1281     0955  3420               	retlw	32	;' '
  1282     0956  344C               	retlw	76	;'L'
  1283     0957  346F               	retlw	111	;'o'
  1284     0958  3467               	retlw	103	;'g'
  1285     0959  3400               	retlw	0
  1286     095A                     STR_22:
  1287     095A  3457               	retlw	87	;'W'
  1288     095B  3461               	retlw	97	;'a'
  1289     095C  3469               	retlw	105	;'i'
  1290     095D  3474               	retlw	116	;'t'
  1291     095E  3420               	retlw	32	;' '
  1292     095F  3466               	retlw	102	;'f'
  1293     0960  346F               	retlw	111	;'o'
  1294     0961  3472               	retlw	114	;'r'
  1295     0962  3400               	retlw	0
  1296     0963                     STR_44:
  1297     0963  3447               	retlw	71	;'G'
  1298     0964  3452               	retlw	82	;'R'
  1299     0965  3441               	retlw	65	;'A'
  1300     0966  344E               	retlw	78	;'N'
  1301     0967  3454               	retlw	84	;'T'
  1302     0968  3445               	retlw	69	;'E'
  1303     0969  3444               	retlw	68	;'D'
  1304     096A  3400               	retlw	0
  1305     096B                     STR_45:
  1306     096B  3449               	retlw	73	;'I'
  1307     096C  344E               	retlw	78	;'N'
  1308     096D  3456               	retlw	86	;'V'
  1309     096E  3441               	retlw	65	;'A'
  1310     096F  344C               	retlw	76	;'L'
  1311     0970  3449               	retlw	73	;'I'
  1312     0971  3444               	retlw	68	;'D'
  1313     0972  3400               	retlw	0
  1314     0973                     STR_23:
  1315     0973  3473               	retlw	115	;'s'
  1316     0974  3465               	retlw	101	;'e'
  1317     0975  3463               	retlw	99	;'c'
  1318     0976  3400               	retlw	0
  1319     0977                     STR_3:
  1320     0977  3447               	retlw	71	;'G'
  1321     0978  3431               	retlw	49	;'1'
  1322     0979  3400               	retlw	0
  1323     097A                     STR_4:
  1324     097A  3447               	retlw	71	;'G'
  1325     097B  3432               	retlw	50	;'2'
  1326     097C  3400               	retlw	0
  1327     097D                     STR_5:
  1328     097D  3447               	retlw	71	;'G'
  1329     097E  3433               	retlw	51	;'3'
  1330     097F  3400               	retlw	0
  1331     0980                     STR_6:
  1332     0980  3447               	retlw	71	;'G'
  1333     0981  3434               	retlw	52	;'4'
  1334     0982  3400               	retlw	0
  1335     0983                     STR_7:
  1336     0983  3447               	retlw	71	;'G'
  1337     0984  3435               	retlw	53	;'5'
  1338     0985  3400               	retlw	0
  1339     0986                     STR_8:
  1340     0986  3420               	retlw	32	;' '
  1341     0987  3443               	retlw	67	;'C'
  1342     0988  3400               	retlw	0
  1343     0989                     STR_10:
  1344     0989  3443               	retlw	67	;'C'
  1345     098A  344C               	retlw	76	;'L'
  1346     098B  3400               	retlw	0
  1347     098C                     STR_11:
  1348     098C  3444               	retlw	68	;'D'
  1349     098D  344C               	retlw	76	;'L'
  1350     098E  3400               	retlw	0
  1351     098F                     STR_1:
  1352     098F  3447               	retlw	71	;'G'
  1353     0990  344E               	retlw	78	;'N'
  1354     0991  3400               	retlw	0
  1355     0992                     STR_13:
  1356     0992  3443               	retlw	67	;'C'
  1357     0993  3450               	retlw	80	;'P'
  1358     0994  3400               	retlw	0
  1359     0995                     STR_2:
  1360     0995  3447               	retlw	71	;'G'
  1361     0996  3452               	retlw	82	;'R'
  1362     0997  3400               	retlw	0
  1363     0998                     STR_12:
  1364     0998  3453               	retlw	83	;'S'
  1365     0999  3454               	retlw	84	;'T'
  1366     099A  3400               	retlw	0
  1367     08B1                     STR_26          equ	STR_9
  1368     0904                     STR_36          equ	STR_32
  1369     0904                     STR_43          equ	STR_32
  1370     0846                     STR_34          equ	STR_33
  1371                           
  1372                           	psect	cinit
  1373     000F                     start_initialization:	
  1374                           ; #config settings
  1375                           
  1376     000F                     __initialization:
  1377                           
  1378                           ; Initialize objects allocated to BANK1
  1379     000F  1383               	bcf	3,7	;select IRP bank0
  1380     0010  30BB               	movlw	low (__pdataBANK1+27)
  1381     0011  00FD               	movwf	btemp+-1
  1382     0012  3013               	movlw	high __pidataBANK1
  1383     0013  00FE               	movwf	btemp
  1384     0014  300F               	movlw	low __pidataBANK1
  1385     0015  00FF               	movwf	btemp+1
  1386     0016  30A0               	movlw	low __pdataBANK1
  1387     0017  0084               	movwf	4
  1388     0018  160A  118A  22D2  120A  118A  	fcall	init_ram0
  1389                           
  1390                           ; Initialize objects allocated to BANK0
  1391     001D  3066               	movlw	low (__pdataBANK0+5)
  1392     001E  00FD               	movwf	btemp+-1
  1393     001F  3012               	movlw	high __pidataBANK0
  1394     0020  00FE               	movwf	btemp
  1395     0021  304A               	movlw	low __pidataBANK0
  1396     0022  00FF               	movwf	btemp+1
  1397     0023  3061               	movlw	low __pdataBANK0
  1398     0024  0084               	movwf	4
  1399     0025  160A  118A  22D2  120A  118A  	fcall	init_ram0
  1400                           
  1401                           ; Initialize objects allocated to COMMON
  1402     002A  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  1403     002F  00FB               	movwf	__pdataCOMMON& (0+127)
  1404                           
  1405                           ; Clear objects allocated to BANK1
  1406     0030  30BB               	movlw	low __pbssBANK1
  1407     0031  0084               	movwf	4
  1408     0032  30D4               	movlw	low (__pbssBANK1+25)
  1409     0033  160A  118A  225E  120A  118A  	fcall	clear_ram0
  1410                           
  1411                           ; Clear objects allocated to BANK0
  1412     0038  3044               	movlw	low __pbssBANK0
  1413     0039  0084               	movwf	4
  1414     003A  3061               	movlw	low (__pbssBANK0+29)
  1415     003B  160A  118A  225E  120A  118A  	fcall	clear_ram0
  1416                           
  1417                           ; Clear objects allocated to COMMON
  1418     0040  01FA               	clrf	__pbssCOMMON& (0+127)
  1419     0041                     end_of_initialization:	
  1420                           ;End of C runtime variable initialization code
  1421                           
  1422     0041                     __end_of__initialization:
  1423     0041  0183               	clrf	3
  1424     0042  120A  118A  2845   	ljmp	_main	;jump to C main() function
  1425                           
  1426                           	psect	bssCOMMON
  1427     007A                     __pbssCOMMON:
  1428     007A                     read_digital_keypad@long_press:
  1429     007A                     	ds	1
  1430                           
  1431                           	psect	dataCOMMON
  1432     007B                     __pdataCOMMON:
  1433     007B                     read_digital_keypad@once:
  1434     007B                     	ds	1
  1435                           
  1436                           	psect	bssBANK0
  1437     0044                     __pbssBANK0:
  1438     0044                     isr@count:
  1439     0044                     	ds	2
  1440     0046                     read_digital_keypad@key:
  1441     0046                     	ds	1
  1442     0047                     read_digital_keypad@prev_key:
  1443     0047                     	ds	1
  1444     0048                     compare_pwd@i:
  1445     0048                     	ds	1
  1446     0049                     set_time@key:
  1447     0049                     	ds	1
  1448     004A                     set_time@shift:
  1449     004A                     	ds	1
  1450     004B                     view_log@shift:
  1451     004B                     	ds	1
  1452     004C                     menu_screen@menu_pos:
  1453     004C                     	ds	1
  1454     004D                     login_screen@i:
  1455     004D                     	ds	1
  1456     004E                     _pos:
  1457     004E                     	ds	1
  1458     004F                     _time:
  1459     004F                     	ds	7
  1460     0056                     compare_pwd@user_pwd:
  1461     0056                     	ds	4
  1462     005A                     login_screen@user_password:
  1463     005A                     	ds	4
  1464     005E                     _clock_reg:
  1465     005E                     	ds	3
  1466                           
  1467                           	psect	dataBANK0
  1468     0061                     __pdataBANK0:
  1469     0061                     menu_screen@select_pos:
  1470     0061                     	ds	1
  1471     0062                     login_screen@attempt:
  1472     0062                     	ds	1
  1473     0063                     _sec:
  1474     0063                     	ds	1
  1475     0064                     _pwd_flag:
  1476     0064                     	ds	1
  1477     0065                     _return_time:
  1478     0065                     	ds	1
  1479                           
  1480                           	psect	bssBANK1
  1481     00BB                     __pbssBANK1:
  1482     00BB                     _s_time:
  1483     00BB                     	ds	3
  1484     00BE                     _log:
  1485     00BE                     	ds	12
  1486     00CA                     compare_pwd@saved_pwd:
  1487     00CA                     	ds	5
  1488     00CF                     login_screen@saved_password:
  1489     00CF                     	ds	5
  1490                           
  1491                           	psect	dataBANK1
  1492     00A0                     __pdataBANK1:
  1493     00A0                     _gear:
  1494     00A0                     	ds	14
  1495     00AE                     _menu:
  1496     00AE                     	ds	10
  1497     00B8                     main@F1244:
  1498     00B8                     	ds	3
  1499                           
  1500                           	psect	inittext
  1501     12CE                     init_fetch0:	
  1502                           ;	Called with low address in FSR and high address in W
  1503                           
  1504     12CE  087E               	movf	btemp,w
  1505     12CF  008A               	movwf	10
  1506     12D0  087F               	movf	btemp+1,w
  1507     12D1  0082               	movwf	2
  1508     12D2                     init_ram0:	
  1509                           ;Called with:
  1510                           ;	high address of idata address in btemp 
  1511                           ;	low address of idata address in btemp+1 
  1512                           ;	low address of data in FSR
  1513                           ;	high address + 1 of data in btemp-1
  1514                           
  1515     12D2  160A  118A  22CE  160A  118A  	fcall	init_fetch0
  1516     12D7  0080               	movwf	0
  1517     12D8  0A84               	incf	4,f
  1518     12D9  0804               	movf	4,w
  1519     12DA  067D               	xorwf	btemp+-1,w
  1520     12DB  1903               	btfsc	3,2
  1521     12DC  3400               	retlw	0
  1522     12DD  0AFF               	incf	btemp+1,f
  1523     12DE  1903               	btfsc	3,2
  1524     12DF  0AFE               	incf	btemp,f
  1525     12E0  2AD2               	goto	init_ram0
  1526                           
  1527                           	psect	clrtext
  1528     125E                     clear_ram0:	
  1529                           ;	Called with FSR containing the base address, and
  1530                           ;	W with the last address+1
  1531                           
  1532     125E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1533     125F                     clrloop0:
  1534     125F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1535     1260  0A84               	incf	4,f	;increment pointer
  1536     1261  0604               	xorwf	4,w	;XOR with final address
  1537     1262  1903               	btfsc	3,2	;have we reached the end yet?
  1538     1263  3400               	retlw	0	;all done for this memory range, return
  1539     1264  0604               	xorwf	4,w	;XOR again to restore value
  1540     1265  2A5F               	goto	clrloop0	;do the next byte
  1541                           
  1542                           	psect	cstackBANK1
  1543     00D4                     __pcstackBANK1:
  1544     00D4                     main@wait:
  1545                           
  1546                           ; 2 bytes @ 0x0
  1547     00D4                     	ds	2
  1548     00D6                     main@menu_pos:
  1549                           
  1550                           ; 1 bytes @ 0x2
  1551     00D6                     	ds	1
  1552     00D7                     main@stat:
  1553                           
  1554                           ; 1 bytes @ 0x3
  1555     00D7                     	ds	1
  1556     00D8                     main@reset_flag:
  1557                           
  1558                           ; 1 bytes @ 0x4
  1559     00D8                     	ds	1
  1560     00D9                     main@gr:
  1561                           
  1562                           ; 2 bytes @ 0x5
  1563     00D9                     	ds	2
  1564     00DB                     main@event:
  1565                           
  1566                           ; 3 bytes @ 0x7
  1567     00DB                     	ds	3
  1568     00DE                     main@control_flag:
  1569                           
  1570                           ; 1 bytes @ 0xA
  1571     00DE                     	ds	1
  1572     00DF                     main@speed:
  1573                           
  1574                           ; 1 bytes @ 0xB
  1575     00DF                     	ds	1
  1576     00E0                     main@key:
  1577                           
  1578                           ; 1 bytes @ 0xC
  1579     00E0                     	ds	1
  1580                           
  1581                           	psect	cstackCOMMON
  1582     0070                     __pcstackCOMMON:
  1583     0070                     ?_init_clcd:
  1584     0070                     ?_init_digital_keypad:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587     0070                     ?_init_adc:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590     0070                     ?_init_timer2:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593     0070                     ?_read_digital_keypad:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596     0070                     ?_clear_screen:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599     0070                     ?_clear_log:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602     0070                     ?_download_log:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605     0070                     ?_set_time:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608     0070                     ?_change_password:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611     0070                     ?_read_ds1307:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614     0070                     ?_ext_eeprom_24C02_read:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617     0070                     ?_putchar:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620     0070                     ?_compare_pwd:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623     0070                     ?_i2c_start:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626     0070                     ?_i2c_rep_start:	
  1627                           ; 1 bytes @ 0x0
  1628                           
  1629     0070                     ?_i2c_read:	
  1630                           ; 1 bytes @ 0x0
  1631                           
  1632     0070                     ?_i2c_stop:	
  1633                           ; 1 bytes @ 0x0
  1634                           
  1635     0070                     ?_init_config:	
  1636                           ; 1 bytes @ 0x0
  1637                           
  1638     0070                     ?_main:	
  1639                           ; 1 bytes @ 0x0
  1640                           
  1641     0070                     ?_log_event:	
  1642                           ; 1 bytes @ 0x0
  1643                           
  1644     0070                     ?_i2c_wait_for_idle:	
  1645                           ; 1 bytes @ 0x0
  1646                           
  1647     0070                     ?_init_display_controller:	
  1648                           ; 1 bytes @ 0x0
  1649                           
  1650     0070                     ?_isr:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0070                     ?_i2c_write:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0070                     ??_isr:	
  1657                           ; 2 bytes @ 0x0
  1658                           
  1659                           
  1660                           ; 1 bytes @ 0x0
  1661     0070                     	ds	2
  1662     0072                     ?_strcpy:
  1663     0072                     ?_clcd_write:	
  1664                           ; 1 bytes @ 0x2
  1665                           
  1666     0072                     ?_strncpy:	
  1667                           ; 1 bytes @ 0x2
  1668                           
  1669     0072                     ?___bmul:	
  1670                           ; 1 bytes @ 0x2
  1671                           
  1672     0072                     ?_read_adc:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675     0072                     ?_strncmp:	
  1676                           ; 2 bytes @ 0x2
  1677                           
  1678     0072                     ?___awdiv:	
  1679                           ; 2 bytes @ 0x2
  1680                           
  1681     0072                     ?___awmod:	
  1682                           ; 2 bytes @ 0x2
  1683                           
  1684     0072                     ?___lwmod:	
  1685                           ; 2 bytes @ 0x2
  1686                           
  1687     0072                     ?___lldiv:	
  1688                           ; 2 bytes @ 0x2
  1689                           
  1690     0072                     i2c_read@ack:	
  1691                           ; 4 bytes @ 0x2
  1692                           
  1693     0072                     i2c_write@data:	
  1694                           ; 1 bytes @ 0x2
  1695                           
  1696     0072                     clcd_write@mode:	
  1697                           ; 1 bytes @ 0x2
  1698                           
  1699     0072                     putchar@data:	
  1700                           ; 1 bytes @ 0x2
  1701                           
  1702     0072                     ___bmul@multiplicand:	
  1703                           ; 1 bytes @ 0x2
  1704                           
  1705     0072                     strcpy@dest:	
  1706                           ; 1 bytes @ 0x2
  1707                           
  1708     0072                     strncmp@l:	
  1709                           ; 1 bytes @ 0x2
  1710                           
  1711     0072                     strncpy@d:	
  1712                           ; 1 bytes @ 0x2
  1713                           
  1714     0072                     ___awdiv@divisor:	
  1715                           ; 1 bytes @ 0x2
  1716                           
  1717     0072                     ___awmod@divisor:	
  1718                           ; 2 bytes @ 0x2
  1719                           
  1720     0072                     ___lwmod@divisor:	
  1721                           ; 2 bytes @ 0x2
  1722                           
  1723     0072                     ___lldiv@divisor:	
  1724                           ; 2 bytes @ 0x2
  1725                           
  1726     0072                     ??_init_digital_keypad:	
  1727                           ; 4 bytes @ 0x2
  1728                           
  1729     0072                     ??_init_adc:	
  1730                           ; 1 bytes @ 0x2
  1731                           
  1732     0072                     ??_init_timer2:	
  1733                           ; 1 bytes @ 0x2
  1734                           
  1735     0072                     ??_read_digital_keypad:	
  1736                           ; 1 bytes @ 0x2
  1737                           
  1738     0072                     ??_putchar:	
  1739                           ; 1 bytes @ 0x2
  1740                           
  1741     0072                     ??_i2c_start:	
  1742                           ; 1 bytes @ 0x2
  1743                           
  1744     0072                     ??_i2c_write:	
  1745                           ; 1 bytes @ 0x2
  1746                           
  1747     0072                     ??_i2c_rep_start:	
  1748                           ; 1 bytes @ 0x2
  1749                           
  1750     0072                     ??_i2c_read:	
  1751                           ; 1 bytes @ 0x2
  1752                           
  1753     0072                     ??_i2c_stop:	
  1754                           ; 1 bytes @ 0x2
  1755                           
  1756     0072                     ??_i2c_wait_for_idle:	
  1757                           ; 1 bytes @ 0x2
  1758                           
  1759                           
  1760                           ; 1 bytes @ 0x2
  1761     0072                     	ds	1
  1762     0073                     ?_ext_eeprom_24C02_byte_write:
  1763     0073                     ?_puts:	
  1764                           ; 1 bytes @ 0x3
  1765                           
  1766     0073                     ?_write_ds1307:	
  1767                           ; 1 bytes @ 0x3
  1768                           
  1769     0073                     read_digital_keypad@mode:	
  1770                           ; 1 bytes @ 0x3
  1771                           
  1772     0073                     write_ds1307@data:	
  1773                           ; 1 bytes @ 0x3
  1774                           
  1775     0073                     i2c_read@data:	
  1776                           ; 1 bytes @ 0x3
  1777                           
  1778     0073                     ext_eeprom_24C02_byte_write@data:	
  1779                           ; 1 bytes @ 0x3
  1780                           
  1781     0073                     ___bmul@product:	
  1782                           ; 1 bytes @ 0x3
  1783                           
  1784     0073                     strncmp@r:	
  1785                           ; 1 bytes @ 0x3
  1786                           
  1787     0073                     strncpy@s:	
  1788                           ; 1 bytes @ 0x3
  1789                           
  1790     0073                     puts@s:	
  1791                           ; 1 bytes @ 0x3
  1792                           
  1793     0073                     strcpy@src:	
  1794                           ; 2 bytes @ 0x3
  1795                           
  1796     0073                     ??_clcd_write:	
  1797                           ; 2 bytes @ 0x3
  1798                           
  1799     0073                     ??___bmul:	
  1800                           ; 1 bytes @ 0x3
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x3
  1804     0073                     	ds	1
  1805     0074                     read_ds1307@addr:
  1806     0074                     write_ds1307@addr:	
  1807                           ; 1 bytes @ 0x4
  1808                           
  1809     0074                     ext_eeprom_24C02_read@addr:	
  1810                           ; 1 bytes @ 0x4
  1811                           
  1812     0074                     ext_eeprom_24C02_byte_write@addr:	
  1813                           ; 1 bytes @ 0x4
  1814                           
  1815     0074                     ___bmul@multiplier:	
  1816                           ; 1 bytes @ 0x4
  1817                           
  1818     0074                     ___awdiv@dividend:	
  1819                           ; 1 bytes @ 0x4
  1820                           
  1821     0074                     ___awmod@dividend:	
  1822                           ; 2 bytes @ 0x4
  1823                           
  1824     0074                     ___lwmod@dividend:	
  1825                           ; 2 bytes @ 0x4
  1826                           
  1827     0074                     strncmp@n:	
  1828                           ; 2 bytes @ 0x4
  1829                           
  1830     0074                     strncpy@n:	
  1831                           ; 2 bytes @ 0x4
  1832                           
  1833     0074                     ??_read_adc:	
  1834                           ; 2 bytes @ 0x4
  1835                           
  1836     0074                     ??_read_ds1307:	
  1837                           ; 1 bytes @ 0x4
  1838                           
  1839     0074                     ??_ext_eeprom_24C02_read:	
  1840                           ; 1 bytes @ 0x4
  1841                           
  1842     0074                     ??_ext_eeprom_24C02_byte_write:	
  1843                           ; 1 bytes @ 0x4
  1844                           
  1845     0074                     ??_write_ds1307:	
  1846                           ; 1 bytes @ 0x4
  1847                           
  1848                           
  1849                           ; 1 bytes @ 0x4
  1850     0074                     	ds	1
  1851     0075                     ?_ext_eeprom_24C02_str_write:
  1852     0075                     read_adc@channel:	
  1853                           ; 1 bytes @ 0x5
  1854                           
  1855     0075                     read_ds1307@data:	
  1856                           ; 1 bytes @ 0x5
  1857                           
  1858     0075                     clcd_write@byte:	
  1859                           ; 1 bytes @ 0x5
  1860                           
  1861     0075                     ext_eeprom_24C02_read@data:	
  1862                           ; 1 bytes @ 0x5
  1863                           
  1864     0075                     ext_eeprom_24C02_str_write@str:	
  1865                           ; 1 bytes @ 0x5
  1866                           
  1867     0075                     ??_strcpy:	
  1868                           ; 1 bytes @ 0x5
  1869                           
  1870     0075                     ??_puts:	
  1871                           ; 1 bytes @ 0x5
  1872                           
  1873                           
  1874                           ; 1 bytes @ 0x5
  1875     0075                     	ds	1
  1876     0076                     ?_clcd_print:
  1877     0076                     ext_eeprom_24C02_str_write@addr:	
  1878                           ; 1 bytes @ 0x6
  1879                           
  1880     0076                     ___awdiv@counter:	
  1881                           ; 1 bytes @ 0x6
  1882                           
  1883     0076                     ___awmod@counter:	
  1884                           ; 1 bytes @ 0x6
  1885                           
  1886     0076                     ___lwmod@counter:	
  1887                           ; 1 bytes @ 0x6
  1888                           
  1889     0076                     strncpy@cp:	
  1890                           ; 1 bytes @ 0x6
  1891                           
  1892     0076                     read_adc@adc_reg_val:	
  1893                           ; 1 bytes @ 0x6
  1894                           
  1895     0076                     clcd_print@str:	
  1896                           ; 2 bytes @ 0x6
  1897                           
  1898     0076                     ___lldiv@dividend:	
  1899                           ; 2 bytes @ 0x6
  1900                           
  1901     0076                     ??_clear_screen:	
  1902                           ; 4 bytes @ 0x6
  1903                           
  1904     0076                     ??_ext_eeprom_24C02_str_write:	
  1905                           ; 1 bytes @ 0x6
  1906                           
  1907     0076                     ??_strncpy:	
  1908                           ; 1 bytes @ 0x6
  1909                           
  1910     0076                     ??_strncmp:	
  1911                           ; 1 bytes @ 0x6
  1912                           
  1913     0076                     ??_init_display_controller:	
  1914                           ; 1 bytes @ 0x6
  1915                           
  1916     0076                     ??___awdiv:	
  1917                           ; 1 bytes @ 0x6
  1918                           
  1919     0076                     ??___awmod:	
  1920                           ; 1 bytes @ 0x6
  1921                           
  1922     0076                     ??___lwmod:	
  1923                           ; 1 bytes @ 0x6
  1924                           
  1925                           
  1926                           ; 1 bytes @ 0x6
  1927     0076                     	ds	1
  1928     0077                     log_event@addr:
  1929     0077                     ___awdiv@sign:	
  1930                           ; 1 bytes @ 0x7
  1931                           
  1932     0077                     ___awmod@sign:	
  1933                           ; 1 bytes @ 0x7
  1934                           
  1935     0077                     strcpy@d:	
  1936                           ; 1 bytes @ 0x7
  1937                           
  1938     0077                     ??_log_event:	
  1939                           ; 1 bytes @ 0x7
  1940                           
  1941                           
  1942                           ; 1 bytes @ 0x7
  1943     0077                     	ds	1
  1944     0078                     clcd_print@addr:
  1945     0078                     ___awdiv@quotient:	
  1946                           ; 1 bytes @ 0x8
  1947                           
  1948     0078                     ??_init_clcd:	
  1949                           ; 2 bytes @ 0x8
  1950                           
  1951     0078                     ??___lwdiv:	
  1952                           ; 1 bytes @ 0x8
  1953                           
  1954                           
  1955                           ; 1 bytes @ 0x8
  1956     0078                     	ds	1
  1957     0079                     ??_clcd_print:
  1958                           
  1959                           ; 1 bytes @ 0x9
  1960     0079                     	ds	1
  1961     007A                     ??_log_car_event:
  1962     007A                     ??_display_dash_board:	
  1963                           ; 1 bytes @ 0xA
  1964                           
  1965     007A                     ??_view_log:	
  1966                           ; 1 bytes @ 0xA
  1967                           
  1968     007A                     ??_clcd_putch:	
  1969                           ; 1 bytes @ 0xA
  1970                           
  1971     007A                     ??_init_config:	
  1972                           ; 1 bytes @ 0xA
  1973                           
  1974                           
  1975                           	psect	cstackBANK0
  1976     0020                     __pcstackBANK0:	
  1977                           ; 1 bytes @ 0xA
  1978                           
  1979     0020                     ?___lwdiv:
  1980     0020                     ___lwdiv@divisor:	
  1981                           ; 2 bytes @ 0x0
  1982                           
  1983     0020                     ??_clear_log:	
  1984                           ; 2 bytes @ 0x0
  1985                           
  1986     0020                     ??_download_log:	
  1987                           ; 1 bytes @ 0x0
  1988                           
  1989     0020                     ??___lldiv:	
  1990                           ; 1 bytes @ 0x0
  1991                           
  1992                           
  1993                           ; 1 bytes @ 0x0
  1994     0020                     	ds	1
  1995     0021                     ___lldiv@quotient:
  1996                           
  1997                           ; 4 bytes @ 0x1
  1998     0021                     	ds	1
  1999     0022                     ___lwdiv@dividend:
  2000                           
  2001                           ; 2 bytes @ 0x2
  2002     0022                     	ds	1
  2003     0023                     clear_log@clear:
  2004     0023                     download_log@rlog:	
  2005                           ; 1 bytes @ 0x3
  2006                           
  2007                           
  2008                           ; 12 bytes @ 0x3
  2009     0023                     	ds	1
  2010     0024                     clear_log@i:
  2011     0024                     ___lwdiv@counter:	
  2012                           ; 1 bytes @ 0x4
  2013                           
  2014                           
  2015                           ; 1 bytes @ 0x4
  2016     0024                     	ds	1
  2017     0025                     ___lldiv@counter:
  2018     0025                     ___lwdiv@quotient:	
  2019                           ; 1 bytes @ 0x5
  2020                           
  2021                           
  2022                           ; 2 bytes @ 0x5
  2023     0025                     	ds	1
  2024     0026                     ?_init_i2c:
  2025     0026                     ?_init_uart:	
  2026                           ; 1 bytes @ 0x6
  2027                           
  2028     0026                     init_i2c@baud:	
  2029                           ; 1 bytes @ 0x6
  2030                           
  2031     0026                     init_uart@baud:	
  2032                           ; 4 bytes @ 0x6
  2033                           
  2034                           
  2035                           ; 4 bytes @ 0x6
  2036     0026                     	ds	1
  2037     0027                     ?_clcd_putch:
  2038     0027                     clcd_putch@addr:	
  2039                           ; 1 bytes @ 0x7
  2040                           
  2041                           
  2042                           ; 1 bytes @ 0x7
  2043     0027                     	ds	1
  2044     0028                     clcd_putch@data:
  2045                           
  2046                           ; 1 bytes @ 0x8
  2047     0028                     	ds	1
  2048     0029                     ?_login_screen:
  2049     0029                     ?_menu_screen:	
  2050                           ; 1 bytes @ 0x9
  2051                           
  2052     0029                     ?_view_log:	
  2053                           ; 1 bytes @ 0x9
  2054                           
  2055     0029                     ?_get_time:	
  2056                           ; 1 bytes @ 0x9
  2057                           
  2058     0029                     get_time@clock_reg:	
  2059                           ; 1 bytes @ 0x9
  2060                           
  2061     0029                     login_screen@reset_flag:	
  2062                           ; 1 bytes @ 0x9
  2063                           
  2064     0029                     menu_screen@reset_flag:	
  2065                           ; 1 bytes @ 0x9
  2066                           
  2067     0029                     view_log@reset_flag:	
  2068                           ; 1 bytes @ 0x9
  2069                           
  2070     0029                     ??_set_time:	
  2071                           ; 1 bytes @ 0x9
  2072                           
  2073     0029                     ??_compare_pwd:	
  2074                           ; 1 bytes @ 0x9
  2075                           
  2076                           
  2077                           ; 1 bytes @ 0x9
  2078     0029                     	ds	1
  2079     002A                     view_log@rlog:
  2080     002A                     ??_init_i2c:	
  2081                           ; 12 bytes @ 0xA
  2082                           
  2083     002A                     ??_init_uart:	
  2084                           ; 1 bytes @ 0xA
  2085                           
  2086     002A                     ??_login_screen:	
  2087                           ; 1 bytes @ 0xA
  2088                           
  2089     002A                     ??_menu_screen:	
  2090                           ; 1 bytes @ 0xA
  2091                           
  2092     002A                     ??_get_time:	
  2093                           ; 1 bytes @ 0xA
  2094                           
  2095                           
  2096                           ; 1 bytes @ 0xA
  2097     002A                     	ds	1
  2098     002B                     ?_log_car_event:
  2099     002B                     ?_display_dash_board:	
  2100                           ; 1 bytes @ 0xB
  2101                           
  2102     002B                     display_dash_board@event:	
  2103                           ; 1 bytes @ 0xB
  2104                           
  2105     002B                     log_car_event@event:	
  2106                           ; 1 bytes @ 0xB
  2107                           
  2108                           
  2109                           ; 1 bytes @ 0xB
  2110     002B                     	ds	1
  2111     002C                     menu_screen@key:
  2112     002C                     set_time@sec:	
  2113                           ; 1 bytes @ 0xC
  2114                           
  2115     002C                     display_dash_board@speed:	
  2116                           ; 1 bytes @ 0xC
  2117                           
  2118     002C                     log_car_event@speed:	
  2119                           ; 2 bytes @ 0xC
  2120                           
  2121     002C                     compare_pwd@wait:	
  2122                           ; 2 bytes @ 0xC
  2123                           
  2124                           
  2125                           ; 2 bytes @ 0xC
  2126     002C                     	ds	1
  2127     002D                     login_screen@add:
  2128     002D                     set_time@min:	
  2129                           ; 1 bytes @ 0xD
  2130                           
  2131                           
  2132                           ; 1 bytes @ 0xD
  2133     002D                     	ds	1
  2134     002E                     login_screen@key:
  2135     002E                     set_time@hr:	
  2136                           ; 1 bytes @ 0xE
  2137                           
  2138     002E                     compare_pwd@add:	
  2139                           ; 1 bytes @ 0xE
  2140                           
  2141                           
  2142                           ; 1 bytes @ 0xE
  2143     002E                     	ds	1
  2144     002F                     login_screen@j:
  2145     002F                     download_log@add:	
  2146                           ; 1 bytes @ 0xF
  2147                           
  2148     002F                     compare_pwd@reset_flag:	
  2149                           ; 1 bytes @ 0xF
  2150                           
  2151                           
  2152                           ; 1 bytes @ 0xF
  2153     002F                     	ds	1
  2154     0030                     download_log@j:
  2155     0030                     compare_pwd@key:	
  2156                           ; 1 bytes @ 0x10
  2157                           
  2158                           
  2159                           ; 1 bytes @ 0x10
  2160     0030                     	ds	1
  2161     0031                     download_log@i:
  2162     0031                     compare_pwd@j:	
  2163                           ; 1 bytes @ 0x11
  2164                           
  2165                           
  2166                           ; 1 bytes @ 0x11
  2167     0031                     	ds	1
  2168     0032                     ??_change_password:
  2169                           
  2170                           ; 1 bytes @ 0x12
  2171     0032                     	ds	3
  2172     0035                     change_password@pwd_arr:
  2173                           
  2174                           ; 5 bytes @ 0x15
  2175     0035                     	ds	1
  2176     0036                     view_log@add:
  2177                           
  2178                           ; 1 bytes @ 0x16
  2179     0036                     	ds	1
  2180     0037                     view_log@key:
  2181                           
  2182                           ; 1 bytes @ 0x17
  2183     0037                     	ds	1
  2184     0038                     view_log@i:
  2185                           
  2186                           ; 1 bytes @ 0x18
  2187     0038                     	ds	2
  2188     003A                     change_password@wait:
  2189                           
  2190                           ; 2 bytes @ 0x1A
  2191     003A                     	ds	2
  2192     003C                     change_password@res:
  2193                           
  2194                           ; 1 bytes @ 0x1C
  2195     003C                     	ds	1
  2196     003D                     change_password@add:
  2197                           
  2198                           ; 1 bytes @ 0x1D
  2199     003D                     	ds	1
  2200     003E                     change_password@wait_327:
  2201                           
  2202                           ; 1 bytes @ 0x1E
  2203     003E                     	ds	1
  2204     003F                     change_password@flag:
  2205                           
  2206                           ; 1 bytes @ 0x1F
  2207     003F                     	ds	1
  2208     0040                     change_password@key:
  2209                           
  2210                           ; 1 bytes @ 0x20
  2211     0040                     	ds	1
  2212     0041                     change_password@i:
  2213                           
  2214                           ; 1 bytes @ 0x21
  2215     0041                     	ds	1
  2216     0042                     ??_main:
  2217                           
  2218                           ; 1 bytes @ 0x22
  2219     0042                     	ds	2
  2220                           
  2221                           	psect	maintext
  2222     0045                     __pmaintext:	
  2223 ;;
  2224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2225 ;;
  2226 ;; *************** function _main *****************
  2227 ;; Defined at:
  2228 ;;		line 46 in file "main.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  wait            2    0[BANK1 ] unsigned int 
  2233 ;;  event           3    7[BANK1 ] unsigned char [3]
  2234 ;;  gr              2    5[BANK1 ] int 
  2235 ;;  key             1   12[BANK1 ] unsigned char 
  2236 ;;  speed           1   11[BANK1 ] unsigned char 
  2237 ;;  control_flag    1   10[BANK1 ] unsigned char 
  2238 ;;  reset_flag      1    4[BANK1 ] unsigned char 
  2239 ;;  stat            1    3[BANK1 ] unsigned char 
  2240 ;;  menu_pos        1    2[BANK1 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : B00/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       0       0       0       0
  2251 ;;      Locals:         0       0      13       0       0
  2252 ;;      Temps:          0       2       0       0       0
  2253 ;;      Totals:         0       2      13       0       0
  2254 ;;Total ram usage:       15 bytes
  2255 ;; Hardware stack levels required when called: 7
  2256 ;; This function calls:
  2257 ;;		___lwdiv
  2258 ;;		_change_password
  2259 ;;		_clcd_print
  2260 ;;		_clcd_write
  2261 ;;		_clear_log
  2262 ;;		_clear_screen
  2263 ;;		_display_dash_board
  2264 ;;		_download_log
  2265 ;;		_init_config
  2266 ;;		_log_car_event
  2267 ;;		_login_screen
  2268 ;;		_menu_screen
  2269 ;;		_read_adc
  2270 ;;		_read_digital_keypad
  2271 ;;		_set_time
  2272 ;;		_strcpy
  2273 ;;		_view_log
  2274 ;; This function is called by:
  2275 ;;		Startup code after reset
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279     0045                     _main:	
  2280                           ;psect for function _main
  2281                           
  2282     0045                     l4935:	
  2283                           ;incstack = 0
  2284                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2285                           
  2286                           
  2287                           ;main.c: 48:         for(unsigned int wait = 500;wait--;);
  2288     0045  160A  118A  24F3  120A  118A  	fcall	_init_config
  2289     004A                     l4937:
  2290                           
  2291                           ;main.c: 50:         if(key == 0x3E);main.c: 52:             strcpy(event, " C");
  2292     004A  1683               	bsf	3,5	;RP0=1, select bank1
  2293     004B  1303               	bcf	3,6	;RP1=0, select bank1
  2294     004C  0838               	movf	main@F1244^(0+128),w
  2295     004D  00DB               	movwf	main@event^(0+128)
  2296     004E  0839               	movf	(main@F1244+1)^(0+128),w
  2297     004F  00DC               	movwf	(main@event+1)^(0+128)
  2298     0050  083A               	movf	(main@F1244+2)^(0+128),w
  2299     0051  00DD               	movwf	(main@event+2)^(0+128)
  2300     0052                     l4939:
  2301                           
  2302                           ;main.c: 54:         }
  2303     0052  01D9               	clrf	main@gr^(0+128)
  2304     0053  01DA               	clrf	(main@gr+1)^(0+128)
  2305     0054                     l4941:
  2306     0054                     l4943:
  2307                           
  2308                           ;main.c: 57:             if(gr < 5)
  2309     0054  3001               	movlw	1
  2310     0055  00DE               	movwf	main@control_flag^(0+128)
  2311     0056                     l4945:
  2312                           
  2313                           ;main.c: 59:                 gr++;
  2314     0056  01D8               	clrf	main@reset_flag^(0+128)
  2315     0057                     l4947:
  2316                           
  2317                           ;main.c: 64:         else if(key == 0x3B)
  2318     0057  30DB               	movlw	(low (main@event| 0))& (0+255)
  2319     0058  1283               	bcf	3,5	;RP0=0, select bank0
  2320     0059  1303               	bcf	3,6	;RP1=0, select bank0
  2321     005A  00AB               	movwf	log_car_event@event
  2322     005B  3000               	movlw	0
  2323     005C  00AC               	movwf	log_car_event@speed
  2324     005D  00AD               	movwf	log_car_event@speed+1
  2325     005E  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  2326     0063                     l4949:
  2327                           
  2328                           ;main.c: 68:                 gr--;;main.c: 70:             strcpy(event, gear[gr]);
  2329     0063  300A               	movlw	10
  2330     0064  1283               	bcf	3,5	;RP0=0, select bank0
  2331     0065  1303               	bcf	3,6	;RP1=0, select bank0
  2332     0066  00A0               	movwf	___lwdiv@divisor
  2333     0067  3000               	movlw	0
  2334     0068  00A1               	movwf	___lwdiv@divisor+1
  2335     0069  3000               	movlw	0
  2336     006A  160A  118A  2366  120A  118A  	fcall	_read_adc
  2337     006F  0873               	movf	?_read_adc+1,w
  2338     0070  1283               	bcf	3,5	;RP0=0, select bank0
  2339     0071  1303               	bcf	3,6	;RP1=0, select bank0
  2340     0072  00A3               	movwf	___lwdiv@dividend+1
  2341     0073  0872               	movf	?_read_adc,w
  2342     0074  00A2               	movwf	___lwdiv@dividend
  2343     0075  160A  118A  25CC  120A  118A  	fcall	___lwdiv
  2344     007A  1283               	bcf	3,5	;RP0=0, select bank0
  2345     007B  1303               	bcf	3,6	;RP1=0, select bank0
  2346     007C  0820               	movf	?___lwdiv,w
  2347     007D  1683               	bsf	3,5	;RP0=1, select bank1
  2348     007E  1303               	bcf	3,6	;RP1=0, select bank1
  2349     007F  00DF               	movwf	main@speed^(0+128)
  2350     0080                     l4951:
  2351                           
  2352                           ;main.c: 71:             log_car_event(event,speed);
  2353     0080  3064               	movlw	100
  2354     0081  025F               	subwf	main@speed^(0+128),w
  2355     0082  1C03               	skipc
  2356     0083  2885               	goto	u4881
  2357     0084  2886               	goto	u4880
  2358     0085                     u4881:
  2359     0085  2888               	goto	l4955
  2360     0086                     u4880:
  2361     0086                     l4953:
  2362                           
  2363                           ;main.c: 72:         }
  2364     0086  3063               	movlw	99
  2365     0087  00DF               	movwf	main@speed^(0+128)
  2366     0088                     l4955:
  2367                           
  2368                           ;main.c: 75:         {
  2369     0088  3001               	movlw	1
  2370     0089  160A  118A  26F7  120A  118A  	fcall	_read_digital_keypad
  2371     008E  1683               	bsf	3,5	;RP0=1, select bank1
  2372     008F  1303               	bcf	3,6	;RP1=0, select bank1
  2373     0090  00E0               	movwf	main@key^(0+128)
  2374     0091                     l4957:
  2375                           
  2376                           ;main.c: 76:             control_flag = 0x02;
  2377     0091  30F4               	movlw	244
  2378     0092  00D4               	movwf	main@wait^(0+128)
  2379     0093  3001               	movlw	1
  2380     0094  00D5               	movwf	(main@wait^(0+128)+1)
  2381     0095                     l4959:
  2382     0095  3001               	movlw	1
  2383     0096  02D4               	subwf	main@wait^(0+128),f
  2384     0097  3000               	movlw	0
  2385     0098  1C03               	skipc
  2386     0099  03D5               	decf	(main@wait+1)^(0+128),f
  2387     009A  02D5               	subwf	(main@wait+1)^(0+128),f
  2388     009B  0A54               	incf	main@wait^(0+128),w
  2389     009C  1D03               	skipz
  2390     009D  28A2               	goto	u4891
  2391     009E  0A55               	incf	(main@wait+1)^(0+128),w
  2392     009F  1D03               	btfss	3,2
  2393     00A0  28A2               	goto	u4891
  2394     00A1  28A3               	goto	u4890
  2395     00A2                     u4891:
  2396     00A2  2895               	goto	l4959
  2397     00A3                     u4890:
  2398     00A3                     l4961:
  2399                           
  2400                           ;main.c: 78:             clear_screen();
  2401     00A3  303E               	movlw	62
  2402     00A4  0660               	xorwf	main@key^(0+128),w
  2403     00A5  1D03               	btfss	3,2
  2404     00A6  28A8               	goto	u4901
  2405     00A7  28A9               	goto	u4900
  2406     00A8                     u4901:
  2407     00A8  28C9               	goto	l4965
  2408     00A9                     u4900:
  2409     00A9                     l4963:
  2410                           
  2411                           ;main.c: 79:             clcd_print("Enter password",(0x80 + 0));;main.c: 80:           
      +                            clcd_write(0x0F,0);
  2412     00A9  30DB               	movlw	(low (main@event| 0))& (0+255)
  2413     00AA  00F2               	movwf	strcpy@dest
  2414     00AB  3086               	movlw	low (STR_8| (0+32768))
  2415     00AC  00F3               	movwf	strcpy@src
  2416     00AD  3089               	movlw	high (STR_8| (0+32768))
  2417     00AE  00F4               	movwf	strcpy@src+1
  2418     00AF  160A  118A  23C6  120A  118A  	fcall	_strcpy
  2419                           
  2420                           ;main.c: 81: 
  2421     00B4  30DB               	movlw	(low (main@event| 0))& (0+255)
  2422     00B5  1283               	bcf	3,5	;RP0=0, select bank0
  2423     00B6  1303               	bcf	3,6	;RP1=0, select bank0
  2424     00B7  00AB               	movwf	log_car_event@event
  2425     00B8  1683               	bsf	3,5	;RP0=1, select bank1
  2426     00B9  1303               	bcf	3,6	;RP1=0, select bank1
  2427     00BA  085F               	movf	main@speed^(0+128),w
  2428     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2429     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  2430     00BD  00C2               	movwf	??_main
  2431     00BE  01C3               	clrf	??_main+1
  2432     00BF  0842               	movf	??_main,w
  2433     00C0  00AC               	movwf	log_car_event@speed
  2434     00C1  0843               	movf	??_main+1,w
  2435     00C2  00AD               	movwf	log_car_event@speed+1
  2436     00C3  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  2437                           
  2438                           ;main.c: 82: 
  2439     00C8  2ADA               	goto	l5083
  2440     00C9                     l4965:
  2441     00C9  303D               	movlw	61
  2442     00CA  0660               	xorwf	main@key^(0+128),w
  2443     00CB  1D03               	btfss	3,2
  2444     00CC  28CE               	goto	u4911
  2445     00CD  28CF               	goto	u4910
  2446     00CE                     u4911:
  2447     00CE  2910               	goto	l4975
  2448     00CF                     u4910:
  2449     00CF                     l4967:
  2450                           
  2451                           ;main.c: 84:         };main.c: 85: 
  2452     00CF  085A               	movf	(main@gr+1)^(0+128),w
  2453     00D0  3A80               	xorlw	128
  2454     00D1  00FF               	movwf	btemp+1
  2455     00D2  3080               	movlw	128
  2456     00D3  027F               	subwf	btemp+1,w
  2457     00D4  1D03               	skipz
  2458     00D5  28D8               	goto	u4925
  2459     00D6  3005               	movlw	5
  2460     00D7  0259               	subwf	main@gr^(0+128),w
  2461     00D8                     u4925:
  2462     00D8  1803               	skipnc
  2463     00D9  28DB               	goto	u4921
  2464     00DA  28DC               	goto	u4920
  2465     00DB                     u4921:
  2466     00DB  28E4               	goto	l4971
  2467     00DC                     u4920:
  2468     00DC                     l4969:
  2469                           
  2470                           ;main.c: 86:         else if(control_flag == 0x04 && key == 0xB7);main.c: 87:         {
  2471     00DC  3001               	movlw	1
  2472     00DD  1683               	bsf	3,5	;RP0=1, select bank1
  2473     00DE  1303               	bcf	3,6	;RP1=0, select bank1
  2474     00DF  07D9               	addwf	main@gr^(0+128),f
  2475     00E0  1803               	skipnc
  2476     00E1  0ADA               	incf	(main@gr+1)^(0+128),f
  2477     00E2  3000               	movlw	0
  2478     00E3  07DA               	addwf	(main@gr+1)^(0+128),f
  2479     00E4                     l4971:
  2480                           
  2481                           ;main.c: 89:             {
  2482     00E4  30DB               	movlw	(low (main@event| 0))& (0+255)
  2483     00E5  00F2               	movwf	strcpy@dest
  2484     00E6  1683               	bsf	3,5	;RP0=1, select bank1
  2485     00E7  1303               	bcf	3,6	;RP1=0, select bank1
  2486     00E8  0859               	movf	main@gr^(0+128),w
  2487     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2488     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2489     00EB  00C2               	movwf	??_main
  2490     00EC  0742               	addwf	??_main,w
  2491     00ED  3EA0               	addlw	(low (_gear| 0))& (0+255)
  2492     00EE  0084               	movwf	4
  2493     00EF  1383               	bcf	3,7	;select IRP bank1
  2494     00F0  0800               	movf	0,w
  2495     00F1  00F3               	movwf	strcpy@src
  2496     00F2  0A84               	incf	4,f
  2497     00F3  0800               	movf	0,w
  2498     00F4  0384               	decf	4,f
  2499     00F5  00F4               	movwf	strcpy@src+1
  2500     00F6  160A  118A  23C6  120A  118A  	fcall	_strcpy
  2501     00FB                     l4973:
  2502                           
  2503                           ;main.c: 90:                 case 0:
  2504     00FB  30DB               	movlw	(low (main@event| 0))& (0+255)
  2505     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  2506     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  2507     00FE  00AB               	movwf	log_car_event@event
  2508     00FF  1683               	bsf	3,5	;RP0=1, select bank1
  2509     0100  1303               	bcf	3,6	;RP1=0, select bank1
  2510     0101  085F               	movf	main@speed^(0+128),w
  2511     0102  1283               	bcf	3,5	;RP0=0, select bank0
  2512     0103  1303               	bcf	3,6	;RP1=0, select bank0
  2513     0104  00C2               	movwf	??_main
  2514     0105  01C3               	clrf	??_main+1
  2515     0106  0842               	movf	??_main,w
  2516     0107  00AC               	movwf	log_car_event@speed
  2517     0108  0843               	movf	??_main+1,w
  2518     0109  00AD               	movwf	log_car_event@speed+1
  2519     010A  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  2520                           
  2521                           ;main.c: 91: 
  2522     010F  2ADA               	goto	l5083
  2523     0110                     l4975:
  2524     0110  303B               	movlw	59
  2525     0111  0660               	xorwf	main@key^(0+128),w
  2526     0112  1D03               	btfss	3,2
  2527     0113  2915               	goto	u4931
  2528     0114  2916               	goto	u4930
  2529     0115                     u4931:
  2530     0115  2943               	goto	l4985
  2531     0116                     u4930:
  2532     0116                     l4977:
  2533                           
  2534                           ;main.c: 93:                     control_flag = 0x08;;main.c: 94:                     re
      +                          set_flag = 0x08;
  2535     0116  085A               	movf	(main@gr+1)^(0+128),w
  2536     0117  3A80               	xorlw	128
  2537     0118  00FF               	movwf	btemp+1
  2538     0119  3080               	movlw	128
  2539     011A  027F               	subwf	btemp+1,w
  2540     011B  1D03               	skipz
  2541     011C  291F               	goto	u4945
  2542     011D  3001               	movlw	1
  2543     011E  0259               	subwf	main@gr^(0+128),w
  2544     011F                     u4945:
  2545     011F  1C03               	skipc
  2546     0120  2922               	goto	u4941
  2547     0121  2923               	goto	u4940
  2548     0122                     u4941:
  2549     0122  292B               	goto	l4981
  2550     0123                     u4940:
  2551     0123                     l4979:
  2552                           
  2553                           ;main.c: 95:                     break;;main.c: 96:                 case 1:
  2554     0123  30FF               	movlw	255
  2555     0124  1683               	bsf	3,5	;RP0=1, select bank1
  2556     0125  1303               	bcf	3,6	;RP1=0, select bank1
  2557     0126  07D9               	addwf	main@gr^(0+128),f
  2558     0127  1803               	skipnc
  2559     0128  0ADA               	incf	(main@gr+1)^(0+128),f
  2560     0129  30FF               	movlw	255
  2561     012A  07DA               	addwf	(main@gr+1)^(0+128),f
  2562     012B                     l4981:
  2563                           
  2564                           ;main.c: 98:                     control_flag = 0x10;
  2565     012B  30DB               	movlw	(low (main@event| 0))& (0+255)
  2566     012C  00F2               	movwf	strcpy@dest
  2567     012D  1683               	bsf	3,5	;RP0=1, select bank1
  2568     012E  1303               	bcf	3,6	;RP1=0, select bank1
  2569     012F  0859               	movf	main@gr^(0+128),w
  2570     0130  1283               	bcf	3,5	;RP0=0, select bank0
  2571     0131  1303               	bcf	3,6	;RP1=0, select bank0
  2572     0132  00C2               	movwf	??_main
  2573     0133  0742               	addwf	??_main,w
  2574     0134  3EA0               	addlw	(low (_gear| 0))& (0+255)
  2575     0135  0084               	movwf	4
  2576     0136  1383               	bcf	3,7	;select IRP bank1
  2577     0137  0800               	movf	0,w
  2578     0138  00F3               	movwf	strcpy@src
  2579     0139  0A84               	incf	4,f
  2580     013A  0800               	movf	0,w
  2581     013B  0384               	decf	4,f
  2582     013C  00F4               	movwf	strcpy@src+1
  2583     013D  160A  118A  23C6  120A  118A  	fcall	_strcpy
  2584     0142  28FB               	goto	l4973
  2585     0143                     l4985:
  2586     0143  302F               	movlw	47
  2587     0144  0660               	xorwf	main@key^(0+128),w
  2588     0145  1903               	btfsc	3,2
  2589     0146  2948               	goto	u4951
  2590     0147  2949               	goto	u4950
  2591     0148                     u4951:
  2592     0148  294F               	goto	l4989
  2593     0149                     u4950:
  2594     0149                     l4987:
  2595     0149  3037               	movlw	55
  2596     014A  0660               	xorwf	main@key^(0+128),w
  2597     014B  1D03               	btfss	3,2
  2598     014C  294E               	goto	u4961
  2599     014D  294F               	goto	u4960
  2600     014E                     u4961:
  2601     014E  2973               	goto	l5001
  2602     014F                     u4960:
  2603     014F                     l4989:
  2604     014F  035E               	decf	main@control_flag^(0+128),w
  2605     0150  1D03               	btfss	3,2
  2606     0151  2953               	goto	u4971
  2607     0152  2954               	goto	u4970
  2608     0153                     u4971:
  2609     0153  2973               	goto	l5001
  2610     0154                     u4970:
  2611     0154                     l4991:
  2612                           
  2613                           ;main.c: 103:                     break;;main.c: 104:                 case 3:
  2614     0154  3002               	movlw	2
  2615     0155  00DE               	movwf	main@control_flag^(0+128)
  2616                           
  2617                           ;main.c: 105: 
  2618     0156  3001               	movlw	1
  2619     0157  00D8               	movwf	main@reset_flag^(0+128)
  2620     0158                     l4993:
  2621                           
  2622                           ;main.c: 106:                     control_flag = 0x40;
  2623     0158  160A  118A  2256  120A  118A  	fcall	_clear_screen
  2624     015D                     l4995:
  2625                           
  2626                           ;main.c: 107:                     break;
  2627     015D  30B1               	movlw	low (STR_9| (0+32768))
  2628     015E  00F6               	movwf	clcd_print@str
  2629     015F  3088               	movlw	high (STR_9| (0+32768))
  2630     0160  00F7               	movwf	clcd_print@str+1
  2631     0161  3080               	movlw	128
  2632     0162  00F8               	movwf	clcd_print@addr
  2633     0163  120A  158A  219C  120A  118A  	fcall	_clcd_print
  2634     0168                     l4997:
  2635                           
  2636                           ;main.c: 108:                 case 4:
  2637     0168  01F2               	clrf	clcd_write@mode
  2638     0169  300F               	movlw	15
  2639     016A  160A  118A  2528  120A  118A  	fcall	_clcd_write
  2640     016F                     l4999:
  2641                           
  2642                           ;main.c: 111:                     break;
  2643     016F  1283               	bcf	3,5	;RP0=0, select bank0
  2644     0170  1303               	bcf	3,6	;RP1=0, select bank0
  2645     0171  1512               	bsf	18,2	;volatile
  2646                           
  2647                           ;main.c: 112:             }
  2648     0172  2ADA               	goto	l5083
  2649     0173                     l5001:
  2650     0173  3004               	movlw	4
  2651     0174  065E               	xorwf	main@control_flag^(0+128),w
  2652     0175  1D03               	btfss	3,2
  2653     0176  2978               	goto	u4981
  2654     0177  2979               	goto	u4980
  2655     0178                     u4981:
  2656     0178  29A9               	goto	l5017
  2657     0179                     u4980:
  2658     0179                     l5003:
  2659     0179  30B7               	movlw	183
  2660     017A  0660               	xorwf	main@key^(0+128),w
  2661     017B  1D03               	btfss	3,2
  2662     017C  297E               	goto	u4991
  2663     017D  297F               	goto	u4990
  2664     017E                     u4991:
  2665     017E  29A9               	goto	l5017
  2666     017F                     u4990:
  2667     017F  2998               	goto	l5015
  2668     0180                     l5007:
  2669                           
  2670                           ;main.c: 120: 
  2671     0180  160A  118A  2256  120A  118A  	fcall	_clear_screen
  2672     0185                     l5009:
  2673                           
  2674                           ;main.c: 121: 
  2675     0185  3008               	movlw	8
  2676     0186  1683               	bsf	3,5	;RP0=1, select bank1
  2677     0187  1303               	bcf	3,6	;RP1=0, select bank1
  2678     0188  00DE               	movwf	main@control_flag^(0+128)
  2679     0189                     l5011:
  2680                           
  2681                           ;main.c: 122: 
  2682     0189  3008               	movlw	8
  2683     018A  00D8               	movwf	main@reset_flag^(0+128)
  2684                           
  2685                           ;main.c: 123:         switch(control_flag)
  2686     018B  2ADA               	goto	l5083
  2687     018C                     l83:	
  2688                           ;main.c: 124:         {
  2689                           
  2690                           
  2691                           ;main.c: 126:                 display_dash_board(event,speed);
  2692     018C  3010               	movlw	16
  2693     018D  00DE               	movwf	main@control_flag^(0+128)
  2694                           
  2695                           ;main.c: 127:                 break;
  2696     018E  2ADA               	goto	l5083
  2697     018F                     l84:	
  2698                           ;main.c: 128:             case 0x02 :
  2699                           
  2700                           
  2701                           ;main.c: 130:                 {
  2702     018F  3020               	movlw	32
  2703     0190  00DE               	movwf	main@control_flag^(0+128)
  2704                           
  2705                           ;main.c: 131:                     case 0x02:
  2706     0191  2ADA               	goto	l5083
  2707     0192                     l85:	
  2708                           ;main.c: 132: 
  2709                           
  2710                           
  2711                           ;main.c: 134: 
  2712     0192  3040               	movlw	64
  2713     0193  00DE               	movwf	main@control_flag^(0+128)
  2714                           
  2715                           ;main.c: 135:                                 clear_screen();
  2716     0194  2ADA               	goto	l5083
  2717     0195                     l86:	
  2718                           ;main.c: 136:                                 clcd_write(0x0C,0);
  2719                           
  2720                           
  2721                           ;main.c: 138:                                 break;
  2722     0195  3080               	movlw	128
  2723     0196  00DE               	movwf	main@control_flag^(0+128)
  2724                           
  2725                           ;main.c: 139: 
  2726     0197  2ADA               	goto	l5083
  2727     0198                     l5015:
  2728     0198  0856               	movf	main@menu_pos^(0+128),w
  2729                           
  2730                           ; Switch size 1, requested type "simple"
  2731                           ; Number of cases is 5, Range of values is 0 to 4
  2732                           ; switch strategies available:
  2733                           ; Name         Instructions Cycles
  2734                           ; simple_byte           16     9 (average)
  2735                           ; direct_byte           23     8 (fixed)
  2736                           ; jumptable            260     6 (fixed)
  2737                           ;	Chosen strategy is simple_byte
  2738     0199  3A00               	xorlw	0	; case 0
  2739     019A  1903               	skipnz
  2740     019B  2980               	goto	l5007
  2741     019C  3A01               	xorlw	1	; case 1
  2742     019D  1903               	skipnz
  2743     019E  298C               	goto	l83
  2744     019F  3A03               	xorlw	3	; case 2
  2745     01A0  1903               	skipnz
  2746     01A1  298F               	goto	l84
  2747     01A2  3A01               	xorlw	1	; case 3
  2748     01A3  1903               	skipnz
  2749     01A4  2992               	goto	l85
  2750     01A5  3A07               	xorlw	7	; case 4
  2751     01A6  1903               	skipnz
  2752     01A7  2995               	goto	l86
  2753     01A8  29B8               	goto	l74
  2754     01A9                     l5017:
  2755     01A9  3004               	movlw	4
  2756     01AA  065E               	xorwf	main@control_flag^(0+128),w
  2757     01AB  1D03               	btfss	3,2
  2758     01AC  29AE               	goto	u5001
  2759     01AD  29AF               	goto	u5000
  2760     01AE                     u5001:
  2761     01AE  29B8               	goto	l74
  2762     01AF                     u5000:
  2763     01AF                     l5019:
  2764     01AF  30AF               	movlw	175
  2765     01B0  0660               	xorwf	main@key^(0+128),w
  2766     01B1  1D03               	btfss	3,2
  2767     01B2  29B4               	goto	u5011
  2768     01B3  29B5               	goto	u5010
  2769     01B4                     u5011:
  2770     01B4  29B8               	goto	l74
  2771     01B5                     u5010:
  2772     01B5                     l5021:
  2773                           
  2774                           ;main.c: 143:                                 clear_screen();;main.c: 144:              
      +                                             clcd_write(0x0C,0);
  2775     01B5  3001               	movlw	1
  2776     01B6  00DE               	movwf	main@control_flag^(0+128)
  2777     01B7  2ADA               	goto	l5083
  2778     01B8                     l74:
  2779     01B8  2ADA               	goto	l5083
  2780     01B9                     l5023:
  2781                           
  2782                           ;main.c: 154:                 break;
  2783     01B9  30DB               	movlw	(low (main@event| 0))& (0+255)
  2784     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2785     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2786     01BC  00AB               	movwf	display_dash_board@event
  2787     01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2788     01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2789     01BF  085F               	movf	main@speed^(0+128),w
  2790     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2791     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2792     01C2  00C2               	movwf	??_main
  2793     01C3  01C3               	clrf	??_main+1
  2794     01C4  0842               	movf	??_main,w
  2795     01C5  00AC               	movwf	display_dash_board@speed
  2796     01C6  0843               	movf	??_main+1,w
  2797     01C7  00AD               	movwf	display_dash_board@speed+1
  2798     01C8  160A  118A  26A3  120A  118A  	fcall	_display_dash_board
  2799                           
  2800                           ;main.c: 155:             case 0x08 :
  2801     01CD  2AF6               	goto	l5085
  2802     01CE                     l94:	
  2803                           ;main.c: 158:                 {;main.c: 159:                     clear_screen();
  2804                           
  2805                           
  2806                           ;main.c: 161:                 }
  2807     01CE  3001               	movlw	1
  2808     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2809     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  2810     01D1  00DE               	movwf	main@control_flag^(0+128)
  2811     01D2                     l5025:
  2812                           
  2813                           ;main.c: 163:             case 0x10 :
  2814     01D2  160A  118A  2256  120A  118A  	fcall	_clear_screen
  2815                           
  2816                           ;main.c: 164:                 clear_log();
  2817     01D7  01F2               	clrf	clcd_write@mode
  2818     01D8  300C               	movlw	12
  2819     01D9  160A  118A  2528  120A  118A  	fcall	_clcd_write
  2820     01DE                     l5027:
  2821                           
  2822                           ;main.c: 165:                 strcpy(event, "CL");
  2823     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2824     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2825     01E0  1112               	bcf	18,2	;volatile
  2826                           
  2827                           ;main.c: 166:                 log_car_event(event,speed);
  2828     01E1  2AF6               	goto	l5085
  2829     01E2                     l96:	
  2830                           ;main.c: 168:                 control_flag = 0x04;
  2831                           
  2832                           
  2833                           ;main.c: 169:                 break;
  2834     01E2  3004               	movlw	4
  2835     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  2836     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  2837     01E5  00DE               	movwf	main@control_flag^(0+128)
  2838     01E6                     l5029:
  2839                           
  2840                           ;main.c: 171:                 strcpy(event, "DL");
  2841     01E6  160A  118A  2256  120A  118A  	fcall	_clear_screen
  2842                           
  2843                           ;main.c: 172:                 log_car_event(event,speed);
  2844     01EB  01F2               	clrf	clcd_write@mode
  2845     01EC  300C               	movlw	12
  2846     01ED  160A  118A  2528  120A  118A  	fcall	_clcd_write
  2847     01F2  29DE               	goto	l5027
  2848     01F3                     l5037:
  2849     01F3  0858               	movf	main@reset_flag^(0+128),w
  2850     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2851     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  2852     01F6  00A9               	movwf	login_screen@reset_flag
  2853     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2854     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2855     01F9  0860               	movf	main@key^(0+128),w
  2856     01FA  120A  118A  2558  120A  118A  	fcall	_login_screen
  2857                           
  2858                           ; Switch size 1, requested type "simple"
  2859                           ; Number of cases is 2, Range of values is 1 to 2
  2860                           ; switch strategies available:
  2861                           ; Name         Instructions Cycles
  2862                           ; simple_byte            7     4 (average)
  2863                           ; direct_byte           17    11 (fixed)
  2864                           ; jumptable            263     9 (fixed)
  2865                           ;	Chosen strategy is simple_byte
  2866     01FF  3A01               	xorlw	1	; case 1
  2867     0200  1903               	skipnz
  2868     0201  29E2               	goto	l96
  2869     0202  3A03               	xorlw	3	; case 2
  2870     0203  1903               	skipnz
  2871     0204  29CE               	goto	l94
  2872     0205  2AF6               	goto	l5085
  2873     0206                     l5039:
  2874                           
  2875                           ;main.c: 181:                 strcpy(event, "ST");
  2876     0206  0858               	movf	main@reset_flag^(0+128),w
  2877     0207  1283               	bcf	3,5	;RP0=0, select bank0
  2878     0208  1303               	bcf	3,6	;RP1=0, select bank0
  2879     0209  00A9               	movwf	menu_screen@reset_flag
  2880     020A  1683               	bsf	3,5	;RP0=1, select bank1
  2881     020B  1303               	bcf	3,6	;RP1=0, select bank1
  2882     020C  0860               	movf	main@key^(0+128),w
  2883     020D  120A  158A  23B0  120A  118A  	fcall	_menu_screen
  2884     0212  1683               	bsf	3,5	;RP0=1, select bank1
  2885     0213  1303               	bcf	3,6	;RP1=0, select bank1
  2886     0214  00D6               	movwf	main@menu_pos^(0+128)
  2887                           
  2888                           ;main.c: 182:                 log_car_event(event,speed);
  2889     0215  2AF6               	goto	l5085
  2890     0216                     l5041:
  2891                           
  2892                           ;main.c: 184:                 clear_screen();
  2893     0216  0858               	movf	main@reset_flag^(0+128),w
  2894     0217  1283               	bcf	3,5	;RP0=0, select bank0
  2895     0218  1303               	bcf	3,6	;RP1=0, select bank0
  2896     0219  00A9               	movwf	view_log@reset_flag
  2897     021A  1683               	bsf	3,5	;RP0=1, select bank1
  2898     021B  1303               	bcf	3,6	;RP1=0, select bank1
  2899     021C  0860               	movf	main@key^(0+128),w
  2900     021D  120A  158A  2478  120A  118A  	fcall	_view_log
  2901     0222                     l5043:
  2902                           
  2903                           ;main.c: 185:                 control_flag = 0x04;
  2904     0222  30AF               	movlw	175
  2905     0223  1683               	bsf	3,5	;RP0=1, select bank1
  2906     0224  1303               	bcf	3,6	;RP1=0, select bank1
  2907     0225  0660               	xorwf	main@key^(0+128),w
  2908     0226  1D03               	btfss	3,2
  2909     0227  2A29               	goto	u5021
  2910     0228  2A2A               	goto	u5020
  2911     0229                     u5021:
  2912     0229  2AF6               	goto	l5085
  2913     022A                     u5020:
  2914     022A                     l5045:
  2915                           
  2916                           ;main.c: 186:                 break;;main.c: 187:             case 0x80:
  2917     022A  160A  118A  2256  120A  118A  	fcall	_clear_screen
  2918     022F                     l5047:
  2919                           
  2920                           ;main.c: 188:                 stat = change_password();
  2921     022F  3004               	movlw	4
  2922     0230  1683               	bsf	3,5	;RP0=1, select bank1
  2923     0231  1303               	bcf	3,6	;RP1=0, select bank1
  2924     0232  00DE               	movwf	main@control_flag^(0+128)
  2925     0233  2AF6               	goto	l5085
  2926     0234                     l5049:
  2927                           
  2928                           ;main.c: 192:                     log_car_event(event,speed);
  2929     0234  160A  118A  2610  120A  118A  	fcall	_clear_log
  2930                           
  2931                           ;main.c: 193:                 }
  2932     0239  30DB               	movlw	(low (main@event| 0))& (0+255)
  2933     023A  00F2               	movwf	strcpy@dest
  2934     023B  3089               	movlw	low (STR_10| (0+32768))
  2935     023C  00F3               	movwf	strcpy@src
  2936     023D  3089               	movlw	high (STR_10| (0+32768))
  2937     023E  00F4               	movwf	strcpy@src+1
  2938     023F  160A  118A  23C6  120A  118A  	fcall	_strcpy
  2939                           
  2940                           ;main.c: 194:                 clear_screen();
  2941     0244  30DB               	movlw	(low (main@event| 0))& (0+255)
  2942     0245  1283               	bcf	3,5	;RP0=0, select bank0
  2943     0246  1303               	bcf	3,6	;RP1=0, select bank0
  2944     0247  00AB               	movwf	log_car_event@event
  2945     0248  1683               	bsf	3,5	;RP0=1, select bank1
  2946     0249  1303               	bcf	3,6	;RP1=0, select bank1
  2947     024A  085F               	movf	main@speed^(0+128),w
  2948     024B  1283               	bcf	3,5	;RP0=0, select bank0
  2949     024C  1303               	bcf	3,6	;RP1=0, select bank0
  2950     024D  00C2               	movwf	??_main
  2951     024E  01C3               	clrf	??_main+1
  2952     024F  0842               	movf	??_main,w
  2953     0250  00AC               	movwf	log_car_event@speed
  2954     0251  0843               	movf	??_main+1,w
  2955     0252  00AD               	movwf	log_car_event@speed+1
  2956     0253  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  2957     0258  2A2A               	goto	l5045
  2958     0259                     l5055:
  2959                           
  2960                           ;main.c: 199: 
  2961     0259  30DB               	movlw	(low (main@event| 0))& (0+255)
  2962     025A  00F2               	movwf	strcpy@dest
  2963     025B  308C               	movlw	low (STR_11| (0+32768))
  2964     025C  00F3               	movwf	strcpy@src
  2965     025D  3089               	movlw	high (STR_11| (0+32768))
  2966     025E  00F4               	movwf	strcpy@src+1
  2967     025F  160A  118A  23C6  120A  118A  	fcall	_strcpy
  2968                           
  2969                           ;main.c: 200:         reset_flag = 0x00;
  2970     0264  30DB               	movlw	(low (main@event| 0))& (0+255)
  2971     0265  1283               	bcf	3,5	;RP0=0, select bank0
  2972     0266  1303               	bcf	3,6	;RP1=0, select bank0
  2973     0267  00AB               	movwf	log_car_event@event
  2974     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2975     0269  1303               	bcf	3,6	;RP1=0, select bank1
  2976     026A  085F               	movf	main@speed^(0+128),w
  2977     026B  1283               	bcf	3,5	;RP0=0, select bank0
  2978     026C  1303               	bcf	3,6	;RP1=0, select bank0
  2979     026D  00C2               	movwf	??_main
  2980     026E  01C3               	clrf	??_main+1
  2981     026F  0842               	movf	??_main,w
  2982     0270  00AC               	movwf	log_car_event@speed
  2983     0271  0843               	movf	??_main+1,w
  2984     0272  00AD               	movwf	log_car_event@speed+1
  2985     0273  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  2986                           
  2987                           ;main.c: 201: }
  2988     0278  120A  118A  2717  120A  118A  	fcall	_download_log
  2989     027D  2A2A               	goto	l5045
  2990     027E                     l5061:
  2991     027E  120A  118A  22FD  120A  118A  	fcall	_set_time
  2992     0283  1683               	bsf	3,5	;RP0=1, select bank1
  2993     0284  1303               	bcf	3,6	;RP1=0, select bank1
  2994     0285  00D7               	movwf	main@stat^(0+128)
  2995     0286                     l5063:
  2996     0286  3011               	movlw	17
  2997     0287  0657               	xorwf	main@stat^(0+128),w
  2998     0288  1D03               	btfss	3,2
  2999     0289  2A8B               	goto	u5031
  3000     028A  2A8C               	goto	u5030
  3001     028B                     u5031:
  3002     028B  2A2A               	goto	l5045
  3003     028C                     u5030:
  3004     028C                     l5065:
  3005     028C  30DB               	movlw	(low (main@event| 0))& (0+255)
  3006     028D  00F2               	movwf	strcpy@dest
  3007     028E  3098               	movlw	low (STR_12| (0+32768))
  3008     028F  00F3               	movwf	strcpy@src
  3009     0290  3089               	movlw	high (STR_12| (0+32768))
  3010     0291  00F4               	movwf	strcpy@src+1
  3011     0292  160A  118A  23C6  120A  118A  	fcall	_strcpy
  3012     0297  30DB               	movlw	(low (main@event| 0))& (0+255)
  3013     0298  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0299  1303               	bcf	3,6	;RP1=0, select bank0
  3015     029A  00AB               	movwf	log_car_event@event
  3016     029B  1683               	bsf	3,5	;RP0=1, select bank1
  3017     029C  1303               	bcf	3,6	;RP1=0, select bank1
  3018     029D  085F               	movf	main@speed^(0+128),w
  3019     029E  1283               	bcf	3,5	;RP0=0, select bank0
  3020     029F  1303               	bcf	3,6	;RP1=0, select bank0
  3021     02A0  00C2               	movwf	??_main
  3022     02A1  01C3               	clrf	??_main+1
  3023     02A2  0842               	movf	??_main,w
  3024     02A3  00AC               	movwf	log_car_event@speed
  3025     02A4  0843               	movf	??_main+1,w
  3026     02A5  00AD               	movwf	log_car_event@speed+1
  3027     02A6  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  3028     02AB  2A2A               	goto	l5045
  3029     02AC                     l5071:
  3030     02AC  120A  158A  2693  120A  118A  	fcall	_change_password
  3031     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  3032     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  3033     02B3  00D7               	movwf	main@stat^(0+128)
  3034     02B4                     l5073:
  3035     02B4  3011               	movlw	17
  3036     02B5  0657               	xorwf	main@stat^(0+128),w
  3037     02B6  1D03               	btfss	3,2
  3038     02B7  2AB9               	goto	u5041
  3039     02B8  2ABA               	goto	u5040
  3040     02B9                     u5041:
  3041     02B9  2A2A               	goto	l5045
  3042     02BA                     u5040:
  3043     02BA                     l5075:
  3044     02BA  30DB               	movlw	(low (main@event| 0))& (0+255)
  3045     02BB  00F2               	movwf	strcpy@dest
  3046     02BC  3092               	movlw	low (STR_13| (0+32768))
  3047     02BD  00F3               	movwf	strcpy@src
  3048     02BE  3089               	movlw	high (STR_13| (0+32768))
  3049     02BF  00F4               	movwf	strcpy@src+1
  3050     02C0  160A  118A  23C6  120A  118A  	fcall	_strcpy
  3051     02C5  30DB               	movlw	(low (main@event| 0))& (0+255)
  3052     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3053     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3054     02C8  00AB               	movwf	log_car_event@event
  3055     02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3056     02CA  1303               	bcf	3,6	;RP1=0, select bank1
  3057     02CB  085F               	movf	main@speed^(0+128),w
  3058     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3059     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3060     02CE  00C2               	movwf	??_main
  3061     02CF  01C3               	clrf	??_main+1
  3062     02D0  0842               	movf	??_main,w
  3063     02D1  00AC               	movwf	log_car_event@speed
  3064     02D2  0843               	movf	??_main+1,w
  3065     02D3  00AD               	movwf	log_car_event@speed+1
  3066     02D4  160A  118A  27A3  120A  118A  	fcall	_log_car_event
  3067     02D9  2A2A               	goto	l5045
  3068     02DA                     l5083:
  3069     02DA  1683               	bsf	3,5	;RP0=1, select bank1
  3070     02DB  1303               	bcf	3,6	;RP1=0, select bank1
  3071     02DC  085E               	movf	main@control_flag^(0+128),w
  3072                           
  3073                           ; Switch size 1, requested type "simple"
  3074                           ; Number of cases is 8, Range of values is 1 to 128
  3075                           ; switch strategies available:
  3076                           ; Name         Instructions Cycles
  3077                           ; simple_byte           25    13 (average)
  3078                           ; jumptable            263     9 (fixed)
  3079                           ;	Chosen strategy is simple_byte
  3080     02DD  3A01               	xorlw	1	; case 1
  3081     02DE  1903               	skipnz
  3082     02DF  29B9               	goto	l5023
  3083     02E0  3A03               	xorlw	3	; case 2
  3084     02E1  1903               	skipnz
  3085     02E2  29F3               	goto	l5037
  3086     02E3  3A06               	xorlw	6	; case 4
  3087     02E4  1903               	skipnz
  3088     02E5  2A06               	goto	l5039
  3089     02E6  3A0C               	xorlw	12	; case 8
  3090     02E7  1903               	skipnz
  3091     02E8  2A16               	goto	l5041
  3092     02E9  3A18               	xorlw	24	; case 16
  3093     02EA  1903               	skipnz
  3094     02EB  2A34               	goto	l5049
  3095     02EC  3A30               	xorlw	48	; case 32
  3096     02ED  1903               	skipnz
  3097     02EE  2A59               	goto	l5055
  3098     02EF  3A60               	xorlw	96	; case 64
  3099     02F0  1903               	skipnz
  3100     02F1  2A7E               	goto	l5061
  3101     02F2  3AC0               	xorlw	192	; case 128
  3102     02F3  1903               	skipnz
  3103     02F4  2AAC               	goto	l5071
  3104     02F5  2AF6               	goto	l5085
  3105     02F6                     l5085:
  3106     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  3107     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  3108     02F8  01D8               	clrf	main@reset_flag^(0+128)
  3109     02F9  2863               	goto	l4949
  3110     02FA  120A  118A  280C   	ljmp	start
  3111     02FD                     __end_of_main:
  3112                           
  3113                           	psect	text1
  3114     0C78                     __ptext1:	
  3115 ;; *************** function _view_log *****************
  3116 ;; Defined at:
  3117 ;;		line 256 in file "cbb.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  key             1    wreg     unsigned char 
  3120 ;;  reset_flag      1    9[BANK0 ] unsigned char 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  key             1   23[BANK0 ] unsigned char 
  3123 ;;  i               1   24[BANK0 ] unsigned char 
  3124 ;;  rlog           12   10[BANK0 ] unsigned char [12]
  3125 ;;  add             1   22[BANK0 ] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       1       0       0       0
  3136 ;;      Locals:         0      15       0       0       0
  3137 ;;      Temps:          0       0       0       0       0
  3138 ;;      Totals:         0      16       0       0       0
  3139 ;;Total ram usage:       16 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 5
  3142 ;; This function calls:
  3143 ;;		___bmul
  3144 ;;		_clcd_print
  3145 ;;		_clcd_putch
  3146 ;;		_ext_eeprom_24C02_read
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152     0C78                     _view_log:	
  3153                           ;psect for function _view_log
  3154                           
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _view_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3158                           ;view_log@key stored from wreg
  3159     0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3160     0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3161     0C7A  00B7               	movwf	view_log@key
  3162     0C7B                     l4579:
  3163                           
  3164                           ;cbb.c: 256: void view_log(unsigned char key,unsigned char reset_flag);cbb.c: 257: {;cbb
      +                          .c: 258:     static unsigned char shift = 0;;cbb.c: 259:     char rlog[12];;cbb.c: 260: 
      +                              unsigned char add;;cbb.c: 262:     if(reset_flag == 0x08)
  3165     0C7B  3008               	movlw	8
  3166     0C7C  0629               	xorwf	view_log@reset_flag,w
  3167     0C7D  1D03               	btfss	3,2
  3168     0C7E  2C80               	goto	u4531
  3169     0C7F  2C81               	goto	u4530
  3170     0C80                     u4531:
  3171     0C80  2C83               	goto	l4583
  3172     0C81                     u4530:
  3173     0C81                     l4581:
  3174                           
  3175                           ;cbb.c: 263:     {;cbb.c: 264:         shift = 0;
  3176     0C81  01CB               	clrf	view_log@shift
  3177                           
  3178                           ;cbb.c: 265:     }
  3179     0C82  2C9F               	goto	l4595
  3180     0C83                     l4583:
  3181     0C83  3037               	movlw	55
  3182     0C84  0637               	xorwf	view_log@key,w
  3183     0C85  1D03               	btfss	3,2
  3184     0C86  2C88               	goto	u4541
  3185     0C87  2C89               	goto	u4540
  3186     0C88                     u4541:
  3187     0C88  2C92               	goto	l4589
  3188     0C89                     u4540:
  3189     0C89                     l4585:
  3190     0C89  300A               	movlw	10
  3191     0C8A  024B               	subwf	view_log@shift,w
  3192     0C8B  1803               	skipnc
  3193     0C8C  2C8E               	goto	u4551
  3194     0C8D  2C8F               	goto	u4550
  3195     0C8E                     u4551:
  3196     0C8E  2C92               	goto	l4589
  3197     0C8F                     u4550:
  3198     0C8F                     l4587:
  3199                           
  3200                           ;cbb.c: 267:         shift++;
  3201     0C8F  3001               	movlw	1
  3202     0C90  07CB               	addwf	view_log@shift,f
  3203     0C91  2C9F               	goto	l4595
  3204     0C92                     l4589:
  3205     0C92  302F               	movlw	47
  3206     0C93  0637               	xorwf	view_log@key,w
  3207     0C94  1D03               	btfss	3,2
  3208     0C95  2C97               	goto	u4561
  3209     0C96  2C98               	goto	u4560
  3210     0C97                     u4561:
  3211     0C97  2C9F               	goto	l4595
  3212     0C98                     u4560:
  3213     0C98                     l4591:
  3214     0C98  084B               	movf	view_log@shift,w
  3215     0C99  1903               	btfsc	3,2
  3216     0C9A  2C9C               	goto	u4571
  3217     0C9B  2C9D               	goto	u4570
  3218     0C9C                     u4571:
  3219     0C9C  2C9F               	goto	l4595
  3220     0C9D                     u4570:
  3221     0C9D                     l4593:
  3222                           
  3223                           ;cbb.c: 269:         shift--;
  3224     0C9D  3001               	movlw	1
  3225     0C9E  02CB               	subwf	view_log@shift,f
  3226     0C9F                     l4595:
  3227                           
  3228                           ;cbb.c: 271:     add = shift * 11 + 5;
  3229     0C9F  300B               	movlw	11
  3230     0CA0  00F2               	movwf	___bmul@multiplicand
  3231     0CA1  084B               	movf	view_log@shift,w
  3232     0CA2  160A  118A  22BB  120A  158A  	fcall	___bmul
  3233     0CA7  3E05               	addlw	5
  3234     0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  3235     0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  3236     0CAA  00B6               	movwf	view_log@add
  3237     0CAB                     l4597:
  3238                           
  3239                           ;cbb.c: 272:     for(unsigned char i = 0; i<11; i++)
  3240     0CAB  01B8               	clrf	view_log@i
  3241     0CAC                     l4603:
  3242                           
  3243                           ;cbb.c: 273:     {;cbb.c: 274:         rlog[i] = ext_eeprom_24C02_read(add+i);
  3244     0CAC  0838               	movf	view_log@i,w
  3245     0CAD  3E2A               	addlw	(low (view_log@rlog| 0))& (0+255)
  3246     0CAE  0084               	movwf	4
  3247     0CAF  0838               	movf	view_log@i,w
  3248     0CB0  0736               	addwf	view_log@add,w
  3249     0CB1  160A  118A  240D  120A  158A  	fcall	_ext_eeprom_24C02_read
  3250     0CB6  1383               	bcf	3,7	;select IRP bank0
  3251     0CB7  0080               	movwf	0
  3252     0CB8                     l4605:
  3253                           
  3254                           ;cbb.c: 275:     }
  3255     0CB8  3001               	movlw	1
  3256     0CB9  1283               	bcf	3,5	;RP0=0, select bank0
  3257     0CBA  1303               	bcf	3,6	;RP1=0, select bank0
  3258     0CBB  07B8               	addwf	view_log@i,f
  3259     0CBC                     l4607:
  3260     0CBC  300B               	movlw	11
  3261     0CBD  0238               	subwf	view_log@i,w
  3262     0CBE  1C03               	skipc
  3263     0CBF  2CC1               	goto	u4581
  3264     0CC0  2CC2               	goto	u4580
  3265     0CC1                     u4581:
  3266     0CC1  2CAC               	goto	l4603
  3267     0CC2                     u4580:
  3268     0CC2                     l4609:
  3269                           
  3270                           ;cbb.c: 276:     rlog[11] = '\0';
  3271     0CC2  01B5               	clrf	view_log@rlog+11
  3272     0CC3                     l4611:
  3273                           
  3274                           ;cbb.c: 278:     if(rlog[0] != 0x00)
  3275     0CC3  082A               	movf	view_log@rlog,w
  3276     0CC4  1903               	btfsc	3,2
  3277     0CC5  2CC7               	goto	u4591
  3278     0CC6  2CC8               	goto	u4590
  3279     0CC7                     u4591:
  3280     0CC7  2D73               	goto	l231
  3281     0CC8                     u4590:
  3282     0CC8                     l4613:
  3283                           
  3284                           ;cbb.c: 279:     {;cbb.c: 280:     clcd_print("# TIME     E  SP", (0x80 + 0));
  3285     0CC8  3024               	movlw	low (STR_27| (0+32768))
  3286     0CC9  00F6               	movwf	clcd_print@str
  3287     0CCA  3088               	movlw	high (STR_27| (0+32768))
  3288     0CCB  00F7               	movwf	clcd_print@str+1
  3289     0CCC  3080               	movlw	128
  3290     0CCD  00F8               	movwf	clcd_print@addr
  3291     0CCE  120A  158A  219C  120A  158A  	fcall	_clcd_print
  3292     0CD3                     l4615:
  3293                           
  3294                           ;cbb.c: 281:     clcd_putch(rlog[0], (0xC0 + 0));
  3295     0CD3  30C0               	movlw	192
  3296     0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  3297     0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  3298     0CD6  00A7               	movwf	clcd_putch@addr
  3299     0CD7  082A               	movf	view_log@rlog,w
  3300     0CD8  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3301     0CDD                     l4617:
  3302                           
  3303                           ;cbb.c: 282:     clcd_putch(' ', (0xC0 + 1));
  3304     0CDD  30C1               	movlw	193
  3305     0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  3306     0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  3307     0CE0  00A7               	movwf	clcd_putch@addr
  3308     0CE1  3020               	movlw	32
  3309     0CE2  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3310     0CE7                     l4619:
  3311                           
  3312                           ;cbb.c: 283:     clcd_putch(rlog[1], (0xC0 + 2));
  3313     0CE7  30C2               	movlw	194
  3314     0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  3315     0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  3316     0CEA  00A7               	movwf	clcd_putch@addr
  3317     0CEB  082B               	movf	view_log@rlog+1,w
  3318     0CEC  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3319     0CF1                     l4621:
  3320                           
  3321                           ;cbb.c: 284:     clcd_putch(rlog[2], (0xC0 + 3));
  3322     0CF1  30C3               	movlw	195
  3323     0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0CF4  00A7               	movwf	clcd_putch@addr
  3326     0CF5  082C               	movf	view_log@rlog+2,w
  3327     0CF6  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3328     0CFB                     l4623:
  3329                           
  3330                           ;cbb.c: 285:     clcd_putch(':', (0xC0 + 4));
  3331     0CFB  30C4               	movlw	196
  3332     0CFC  1283               	bcf	3,5	;RP0=0, select bank0
  3333     0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  3334     0CFE  00A7               	movwf	clcd_putch@addr
  3335     0CFF  303A               	movlw	58
  3336     0D00  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3337     0D05                     l4625:
  3338                           
  3339                           ;cbb.c: 286:     clcd_putch(rlog[3], (0xC0 + 5));
  3340     0D05  30C5               	movlw	197
  3341     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3342     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3343     0D08  00A7               	movwf	clcd_putch@addr
  3344     0D09  082D               	movf	view_log@rlog+3,w
  3345     0D0A  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3346     0D0F                     l4627:
  3347                           
  3348                           ;cbb.c: 287:     clcd_putch(rlog[4], (0xC0 + 6));
  3349     0D0F  30C6               	movlw	198
  3350     0D10  1283               	bcf	3,5	;RP0=0, select bank0
  3351     0D11  1303               	bcf	3,6	;RP1=0, select bank0
  3352     0D12  00A7               	movwf	clcd_putch@addr
  3353     0D13  082E               	movf	view_log@rlog+4,w
  3354     0D14  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3355     0D19                     l4629:
  3356                           
  3357                           ;cbb.c: 288:     clcd_putch(':', (0xC0 + 7));
  3358     0D19  30C7               	movlw	199
  3359     0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  3360     0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  3361     0D1C  00A7               	movwf	clcd_putch@addr
  3362     0D1D  303A               	movlw	58
  3363     0D1E  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3364     0D23                     l4631:
  3365                           
  3366                           ;cbb.c: 289:     clcd_putch(rlog[5], (0xC0 + 8));
  3367     0D23  30C8               	movlw	200
  3368     0D24  1283               	bcf	3,5	;RP0=0, select bank0
  3369     0D25  1303               	bcf	3,6	;RP1=0, select bank0
  3370     0D26  00A7               	movwf	clcd_putch@addr
  3371     0D27  082F               	movf	view_log@rlog+5,w
  3372     0D28  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3373     0D2D                     l4633:
  3374                           
  3375                           ;cbb.c: 290:     clcd_putch(rlog[6], (0xC0 + 9));
  3376     0D2D  30C9               	movlw	201
  3377     0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3378     0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  3379     0D30  00A7               	movwf	clcd_putch@addr
  3380     0D31  0830               	movf	view_log@rlog+6,w
  3381     0D32  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3382     0D37                     l4635:
  3383                           
  3384                           ;cbb.c: 291:     clcd_putch(' ', (0xC0 + 10));
  3385     0D37  30CA               	movlw	202
  3386     0D38  1283               	bcf	3,5	;RP0=0, select bank0
  3387     0D39  1303               	bcf	3,6	;RP1=0, select bank0
  3388     0D3A  00A7               	movwf	clcd_putch@addr
  3389     0D3B  3020               	movlw	32
  3390     0D3C  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3391     0D41                     l4637:
  3392                           
  3393                           ;cbb.c: 292:     clcd_putch(rlog[7], (0xC0 + 11));
  3394     0D41  30CB               	movlw	203
  3395     0D42  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0D43  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0D44  00A7               	movwf	clcd_putch@addr
  3398     0D45  0831               	movf	view_log@rlog+7,w
  3399     0D46  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3400     0D4B                     l4639:
  3401                           
  3402                           ;cbb.c: 293:     clcd_putch(rlog[8], (0xC0 + 12));
  3403     0D4B  30CC               	movlw	204
  3404     0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  3405     0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  3406     0D4E  00A7               	movwf	clcd_putch@addr
  3407     0D4F  0832               	movf	view_log@rlog+8,w
  3408     0D50  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3409     0D55                     l4641:
  3410                           
  3411                           ;cbb.c: 294:     clcd_putch(' ', (0xC0 + 13));
  3412     0D55  30CD               	movlw	205
  3413     0D56  1283               	bcf	3,5	;RP0=0, select bank0
  3414     0D57  1303               	bcf	3,6	;RP1=0, select bank0
  3415     0D58  00A7               	movwf	clcd_putch@addr
  3416     0D59  3020               	movlw	32
  3417     0D5A  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3418     0D5F                     l4643:
  3419                           
  3420                           ;cbb.c: 295:     clcd_putch(rlog[9], (0xC0 + 14));
  3421     0D5F  30CE               	movlw	206
  3422     0D60  1283               	bcf	3,5	;RP0=0, select bank0
  3423     0D61  1303               	bcf	3,6	;RP1=0, select bank0
  3424     0D62  00A7               	movwf	clcd_putch@addr
  3425     0D63  0833               	movf	view_log@rlog+9,w
  3426     0D64  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3427     0D69                     l4645:
  3428                           
  3429                           ;cbb.c: 296:     clcd_putch(rlog[10], (0xC0 + 15));
  3430     0D69  30CF               	movlw	207
  3431     0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  3432     0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  3433     0D6C  00A7               	movwf	clcd_putch@addr
  3434     0D6D  0834               	movf	view_log@rlog+10,w
  3435     0D6E  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  3436     0D73                     l231:
  3437     0D73  0008               	return
  3438     0D74                     __end_of_view_log:
  3439                           
  3440                           	psect	text2
  3441     13C6                     __ptext2:	
  3442 ;; *************** function _strcpy *****************
  3443 ;; Defined at:
  3444 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  dest            1    2[COMMON] PTR unsigned char 
  3447 ;;		 -> main@event(3), 
  3448 ;;  src             2    3[COMMON] PTR const unsigned char 
  3449 ;;		 -> STR_13(3), STR_12(3), STR_11(3), STR_10(3), 
  3450 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  3451 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(3), 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;  d               1    7[COMMON] PTR unsigned char 
  3454 ;;		 -> main@event(3), 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    2[COMMON] PTR unsigned char 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         3       0       0       0       0
  3465 ;;      Locals:         1       0       0       0       0
  3466 ;;      Temps:          2       0       0       0       0
  3467 ;;      Totals:         6       0       0       0       0
  3468 ;;Total ram usage:        6 bytes
  3469 ;; Hardware stack levels used: 2
  3470 ;; Hardware stack levels required when called: 1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     13C6                     _strcpy:	
  3479                           ;psect for function _strcpy
  3480                           
  3481     13C6                     l4391:	
  3482                           ;incstack = 0
  3483                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3484                           
  3485     13C6  0872               	movf	strcpy@dest,w
  3486     13C7  00F7               	movwf	strcpy@d
  3487     13C8                     l4393:
  3488     13C8  0874               	movf	strcpy@src+1,w
  3489     13C9  00F6               	movwf	??_strcpy+1
  3490     13CA  0873               	movf	strcpy@src,w
  3491     13CB  00F5               	movwf	??_strcpy
  3492     13CC  0AF3               	incf	strcpy@src,f
  3493     13CD  1903               	skipnz
  3494     13CE  0AF4               	incf	strcpy@src+1,f
  3495     13CF  0876               	movf	??_strcpy+1,w
  3496     13D0  1283               	bcf	3,5	;RP0=0, select bank0
  3497     13D1  1303               	bcf	3,6	;RP1=0, select bank0
  3498     13D2  00FF               	movwf	btemp+1
  3499     13D3  0875               	movf	??_strcpy,w
  3500     13D4  0084               	movwf	4
  3501     13D5  160A  118A  2000  160A  118A  	fcall	stringtab
  3502     13DA  00FF               	movwf	btemp+1
  3503     13DB  0877               	movf	strcpy@d,w
  3504     13DC  0AF7               	incf	strcpy@d,f
  3505     13DD  0084               	movwf	4
  3506     13DE  087F               	movf	btemp+1,w
  3507     13DF  1383               	bcf	3,7	;select IRP bank0
  3508     13E0  0080               	movwf	0
  3509     13E1  0800               	movf	0,w
  3510     13E2  1D03               	btfss	3,2
  3511     13E3  2BE5               	goto	u4301
  3512     13E4  2BE6               	goto	u4300
  3513     13E5                     u4301:
  3514     13E5  2BC8               	goto	l4393
  3515     13E6                     u4300:
  3516     13E6                     l1130:
  3517     13E6  0008               	return
  3518     13E7                     __end_of_strcpy:
  3519                           
  3520                           	psect	text3
  3521     02FD                     __ptext3:	
  3522 ;; *************** function _set_time *****************
  3523 ;; Defined at:
  3524 ;;		line 354 in file "cbb.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  hr              1   14[BANK0 ] unsigned char 
  3529 ;;  min             1   13[BANK0 ] unsigned char 
  3530 ;;  sec             1   12[BANK0 ] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      unsigned char 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3540 ;;      Params:         0       0       0       0       0
  3541 ;;      Locals:         0       3       0       0       0
  3542 ;;      Temps:          0       3       0       0       0
  3543 ;;      Totals:         0       6       0       0       0
  3544 ;;Total ram usage:        6 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 4
  3547 ;; This function calls:
  3548 ;;		___awdiv
  3549 ;;		___awmod
  3550 ;;		___bmul
  3551 ;;		_clcd_print
  3552 ;;		_clcd_putch
  3553 ;;		_clear_screen
  3554 ;;		_read_digital_keypad
  3555 ;;		_write_ds1307
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561     02FD                     _set_time:	
  3562                           ;psect for function _set_time
  3563                           
  3564     02FD                     l4717:	
  3565                           ;incstack = 0
  3566                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3567                           
  3568                           
  3569                           ;cbb.c: 356:     static unsigned char shift = 0,key;;cbb.c: 357:     unsigned char sec,m
      +                          in,hr;;cbb.c: 358:     clear_screen();
  3570     02FD  160A  118A  2256  120A  118A  	fcall	_clear_screen
  3571     0302                     l251:	
  3572                           ;cbb.c: 359:     while(1)
  3573                           
  3574                           
  3575                           ;cbb.c: 360:     {;cbb.c: 361:         key = read_digital_keypad(1);
  3576     0302  3001               	movlw	1
  3577     0303  160A  118A  26F7  120A  118A  	fcall	_read_digital_keypad
  3578     0308  1283               	bcf	3,5	;RP0=0, select bank0
  3579     0309  1303               	bcf	3,6	;RP1=0, select bank0
  3580     030A  00C9               	movwf	set_time@key
  3581     030B                     l4719:
  3582                           
  3583                           ;cbb.c: 362:         clcd_print("TIME (HH:MM:SS)", (0x80 + 0));
  3584     030B  3046               	movlw	low (STR_33| (0+32768))
  3585     030C  00F6               	movwf	clcd_print@str
  3586     030D  3088               	movlw	high (STR_33| (0+32768))
  3587     030E  00F7               	movwf	clcd_print@str+1
  3588     030F  3080               	movlw	128
  3589     0310  00F8               	movwf	clcd_print@addr
  3590     0311  120A  158A  219C  120A  118A  	fcall	_clcd_print
  3591     0316                     l4721:
  3592                           
  3593                           ;cbb.c: 363:         clcd_putch(time[0], (0xC0 + 0));
  3594     0316  30C0               	movlw	192
  3595     0317  1283               	bcf	3,5	;RP0=0, select bank0
  3596     0318  1303               	bcf	3,6	;RP1=0, select bank0
  3597     0319  00A7               	movwf	clcd_putch@addr
  3598     031A  084F               	movf	_time,w
  3599     031B  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3600     0320                     l4723:
  3601                           
  3602                           ;cbb.c: 364:         clcd_putch(time[1], (0xC0 + 1));
  3603     0320  30C1               	movlw	193
  3604     0321  1283               	bcf	3,5	;RP0=0, select bank0
  3605     0322  1303               	bcf	3,6	;RP1=0, select bank0
  3606     0323  00A7               	movwf	clcd_putch@addr
  3607     0324  0850               	movf	_time+1,w
  3608     0325  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3609     032A                     l4725:
  3610                           
  3611                           ;cbb.c: 365:         clcd_putch(':', (0xC0 + 3));
  3612     032A  30C3               	movlw	195
  3613     032B  1283               	bcf	3,5	;RP0=0, select bank0
  3614     032C  1303               	bcf	3,6	;RP1=0, select bank0
  3615     032D  00A7               	movwf	clcd_putch@addr
  3616     032E  303A               	movlw	58
  3617     032F  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3618     0334                     l4727:
  3619                           
  3620                           ;cbb.c: 366:         clcd_putch(time[2], (0xC0 + 5));
  3621     0334  30C5               	movlw	197
  3622     0335  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0336  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0337  00A7               	movwf	clcd_putch@addr
  3625     0338  0851               	movf	_time+2,w
  3626     0339  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3627     033E                     l4729:
  3628                           
  3629                           ;cbb.c: 367:         clcd_putch(time[3], (0xC0 + 6));
  3630     033E  30C6               	movlw	198
  3631     033F  1283               	bcf	3,5	;RP0=0, select bank0
  3632     0340  1303               	bcf	3,6	;RP1=0, select bank0
  3633     0341  00A7               	movwf	clcd_putch@addr
  3634     0342  0852               	movf	_time+3,w
  3635     0343  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3636     0348                     l4731:
  3637                           
  3638                           ;cbb.c: 368:         clcd_putch(':', (0xC0 + 8));
  3639     0348  30C8               	movlw	200
  3640     0349  1283               	bcf	3,5	;RP0=0, select bank0
  3641     034A  1303               	bcf	3,6	;RP1=0, select bank0
  3642     034B  00A7               	movwf	clcd_putch@addr
  3643     034C  303A               	movlw	58
  3644     034D  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3645     0352                     l4733:
  3646                           
  3647                           ;cbb.c: 369:         clcd_putch(time[4], (0xC0 + 10));
  3648     0352  30CA               	movlw	202
  3649     0353  1283               	bcf	3,5	;RP0=0, select bank0
  3650     0354  1303               	bcf	3,6	;RP1=0, select bank0
  3651     0355  00A7               	movwf	clcd_putch@addr
  3652     0356  0853               	movf	_time+4,w
  3653     0357  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3654     035C                     l4735:
  3655                           
  3656                           ;cbb.c: 370:         clcd_putch(time[5], (0xC0 + 11));
  3657     035C  30CB               	movlw	203
  3658     035D  1283               	bcf	3,5	;RP0=0, select bank0
  3659     035E  1303               	bcf	3,6	;RP1=0, select bank0
  3660     035F  00A7               	movwf	clcd_putch@addr
  3661     0360  0854               	movf	_time+5,w
  3662     0361  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3663     0366                     l4737:
  3664                           
  3665                           ;cbb.c: 371:         if(key == 0x2F)
  3666     0366  302F               	movlw	47
  3667     0367  1283               	bcf	3,5	;RP0=0, select bank0
  3668     0368  1303               	bcf	3,6	;RP1=0, select bank0
  3669     0369  0649               	xorwf	set_time@key,w
  3670     036A  1D03               	btfss	3,2
  3671     036B  2B6D               	goto	u4641
  3672     036C  2B6E               	goto	u4640
  3673     036D                     u4641:
  3674     036D  2C8F               	goto	l4787
  3675     036E                     u4640:
  3676     036E                     l4739:
  3677                           
  3678                           ;cbb.c: 372:         {;cbb.c: 373:             if(++shift == 3)
  3679     036E  3001               	movlw	1
  3680     036F  07CA               	addwf	set_time@shift,f
  3681     0370  3003               	movlw	3
  3682     0371  064A               	xorwf	set_time@shift,w
  3683     0372  1D03               	btfss	3,2
  3684     0373  2B75               	goto	u4651
  3685     0374  2B76               	goto	u4650
  3686     0375                     u4651:
  3687     0375  2C8F               	goto	l4787
  3688     0376                     u4650:
  3689     0376                     l4741:
  3690                           
  3691                           ;cbb.c: 374:                 shift = 0;
  3692     0376  01CA               	clrf	set_time@shift
  3693     0377  2C8F               	goto	l4787
  3694     0378                     l4743:
  3695                           
  3696                           ;cbb.c: 379:                     clcd_putch(' ', (0xC0 + 10));
  3697     0378  30CA               	movlw	202
  3698     0379  00A7               	movwf	clcd_putch@addr
  3699     037A  3020               	movlw	32
  3700     037B  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3701                           
  3702                           ;cbb.c: 380:                     clcd_putch(' ', (0xC0 + 11));
  3703     0380  30CB               	movlw	203
  3704     0381  1283               	bcf	3,5	;RP0=0, select bank0
  3705     0382  1303               	bcf	3,6	;RP1=0, select bank0
  3706     0383  00A7               	movwf	clcd_putch@addr
  3707     0384  3020               	movlw	32
  3708     0385  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3709                           
  3710                           ;cbb.c: 381:                     sec = (time[4] - '0') * 10;
  3711     038A  300A               	movlw	10
  3712     038B  00F2               	movwf	___bmul@multiplicand
  3713     038C  1283               	bcf	3,5	;RP0=0, select bank0
  3714     038D  1303               	bcf	3,6	;RP1=0, select bank0
  3715     038E  0853               	movf	_time+4,w
  3716     038F  3ED0               	addlw	208
  3717     0390  160A  118A  22BB  120A  118A  	fcall	___bmul
  3718     0395  1283               	bcf	3,5	;RP0=0, select bank0
  3719     0396  1303               	bcf	3,6	;RP1=0, select bank0
  3720     0397  00AC               	movwf	set_time@sec
  3721     0398                     l4745:
  3722                           
  3723                           ;cbb.c: 382:                     sec += (time[5]-'0');
  3724     0398  0854               	movf	_time+5,w
  3725     0399  3ED0               	addlw	208
  3726     039A  07AC               	addwf	set_time@sec,f
  3727     039B                     l4747:
  3728                           
  3729                           ;cbb.c: 383:                     if(key == 0x37)
  3730     039B  3037               	movlw	55
  3731     039C  0649               	xorwf	set_time@key,w
  3732     039D  1D03               	btfss	3,2
  3733     039E  2BA0               	goto	u4661
  3734     039F  2BA1               	goto	u4660
  3735     03A0                     u4661:
  3736     03A0  2BAA               	goto	l4753
  3737     03A1                     u4660:
  3738     03A1                     l4749:
  3739                           
  3740                           ;cbb.c: 384:                     {;cbb.c: 385:                         if(++sec > 59)
  3741     03A1  3001               	movlw	1
  3742     03A2  07AC               	addwf	set_time@sec,f
  3743     03A3  303C               	movlw	60
  3744     03A4  022C               	subwf	set_time@sec,w
  3745     03A5  1C03               	skipc
  3746     03A6  2BA8               	goto	u4671
  3747     03A7  2BA9               	goto	u4670
  3748     03A8                     u4671:
  3749     03A8  2BAA               	goto	l4753
  3750     03A9                     u4670:
  3751     03A9                     l4751:
  3752                           
  3753                           ;cbb.c: 386:                             sec = 0;
  3754     03A9  01AC               	clrf	set_time@sec
  3755     03AA                     l4753:
  3756                           
  3757                           ;cbb.c: 388:                     time[4] = (sec /10) + '0';
  3758     03AA  300A               	movlw	10
  3759     03AB  00F2               	movwf	___awdiv@divisor
  3760     03AC  3000               	movlw	0
  3761     03AD  00F3               	movwf	___awdiv@divisor+1
  3762     03AE  082C               	movf	set_time@sec,w
  3763     03AF  00A9               	movwf	??_set_time
  3764     03B0  01AA               	clrf	??_set_time+1
  3765     03B1  0829               	movf	??_set_time,w
  3766     03B2  00F4               	movwf	___awdiv@dividend
  3767     03B3  082A               	movf	??_set_time+1,w
  3768     03B4  00F5               	movwf	___awdiv@dividend+1
  3769     03B5  120A  158A  222E  120A  118A  	fcall	___awdiv
  3770     03BA  0872               	movf	?___awdiv,w
  3771     03BB  3E30               	addlw	48
  3772     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3773     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3774     03BE  00D3               	movwf	_time+4
  3775     03BF                     l4755:
  3776                           
  3777                           ;cbb.c: 389:                     time[5]= (sec % 10) + '0';
  3778     03BF  300A               	movlw	10
  3779     03C0  00F2               	movwf	___awmod@divisor
  3780     03C1  3000               	movlw	0
  3781     03C2  00F3               	movwf	___awmod@divisor+1
  3782     03C3  082C               	movf	set_time@sec,w
  3783     03C4  00A9               	movwf	??_set_time
  3784     03C5  01AA               	clrf	??_set_time+1
  3785     03C6  0829               	movf	??_set_time,w
  3786     03C7  00F4               	movwf	___awmod@dividend
  3787     03C8  082A               	movf	??_set_time+1,w
  3788     03C9  00F5               	movwf	___awmod@dividend+1
  3789     03CA  160A  118A  274C  120A  118A  	fcall	___awmod
  3790     03CF  0872               	movf	?___awmod,w
  3791     03D0  3E30               	addlw	48
  3792     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3793     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3794     03D3  00D4               	movwf	_time+5
  3795                           
  3796                           ;cbb.c: 390:                 break;
  3797     03D4  2C9A               	goto	l4789
  3798     03D5                     l4757:
  3799                           
  3800                           ;cbb.c: 392:                     clcd_putch(' ', (0xC0 + 5));
  3801     03D5  30C5               	movlw	197
  3802     03D6  00A7               	movwf	clcd_putch@addr
  3803     03D7  3020               	movlw	32
  3804     03D8  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3805                           
  3806                           ;cbb.c: 393:                     clcd_putch(' ', (0xC0 + 6));
  3807     03DD  30C6               	movlw	198
  3808     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3809     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3810     03E0  00A7               	movwf	clcd_putch@addr
  3811     03E1  3020               	movlw	32
  3812     03E2  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3813                           
  3814                           ;cbb.c: 394:                     min = (time[2] - '0') * 10;
  3815     03E7  300A               	movlw	10
  3816     03E8  00F2               	movwf	___bmul@multiplicand
  3817     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3818     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3819     03EB  0851               	movf	_time+2,w
  3820     03EC  3ED0               	addlw	208
  3821     03ED  160A  118A  22BB  120A  118A  	fcall	___bmul
  3822     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3823     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3824     03F4  00AD               	movwf	set_time@min
  3825     03F5                     l4759:
  3826                           
  3827                           ;cbb.c: 395:                     min += (time[3]-'0');
  3828     03F5  0852               	movf	_time+3,w
  3829     03F6  3ED0               	addlw	208
  3830     03F7  07AD               	addwf	set_time@min,f
  3831     03F8                     l4761:
  3832                           
  3833                           ;cbb.c: 396:                     if(key == 0x37)
  3834     03F8  3037               	movlw	55
  3835     03F9  0649               	xorwf	set_time@key,w
  3836     03FA  1D03               	btfss	3,2
  3837     03FB  2BFD               	goto	u4681
  3838     03FC  2BFE               	goto	u4680
  3839     03FD                     u4681:
  3840     03FD  2C07               	goto	l4767
  3841     03FE                     u4680:
  3842     03FE                     l4763:
  3843                           
  3844                           ;cbb.c: 397:                     {;cbb.c: 398:                         if(++min > 59)
  3845     03FE  3001               	movlw	1
  3846     03FF  07AD               	addwf	set_time@min,f
  3847     0400  303C               	movlw	60
  3848     0401  022D               	subwf	set_time@min,w
  3849     0402  1C03               	skipc
  3850     0403  2C05               	goto	u4691
  3851     0404  2C06               	goto	u4690
  3852     0405                     u4691:
  3853     0405  2C07               	goto	l4767
  3854     0406                     u4690:
  3855     0406                     l4765:
  3856                           
  3857                           ;cbb.c: 399:                             min = 0;
  3858     0406  01AD               	clrf	set_time@min
  3859     0407                     l4767:
  3860                           
  3861                           ;cbb.c: 401:                     time[2] = (min /10) + '0';
  3862     0407  300A               	movlw	10
  3863     0408  00F2               	movwf	___awdiv@divisor
  3864     0409  3000               	movlw	0
  3865     040A  00F3               	movwf	___awdiv@divisor+1
  3866     040B  082D               	movf	set_time@min,w
  3867     040C  00A9               	movwf	??_set_time
  3868     040D  01AA               	clrf	??_set_time+1
  3869     040E  0829               	movf	??_set_time,w
  3870     040F  00F4               	movwf	___awdiv@dividend
  3871     0410  082A               	movf	??_set_time+1,w
  3872     0411  00F5               	movwf	___awdiv@dividend+1
  3873     0412  120A  158A  222E  120A  118A  	fcall	___awdiv
  3874     0417  0872               	movf	?___awdiv,w
  3875     0418  3E30               	addlw	48
  3876     0419  1283               	bcf	3,5	;RP0=0, select bank0
  3877     041A  1303               	bcf	3,6	;RP1=0, select bank0
  3878     041B  00D1               	movwf	_time+2
  3879     041C                     l4769:
  3880                           
  3881                           ;cbb.c: 402:                     time[3] = (min % 10) + '0';
  3882     041C  300A               	movlw	10
  3883     041D  00F2               	movwf	___awmod@divisor
  3884     041E  3000               	movlw	0
  3885     041F  00F3               	movwf	___awmod@divisor+1
  3886     0420  082D               	movf	set_time@min,w
  3887     0421  00A9               	movwf	??_set_time
  3888     0422  01AA               	clrf	??_set_time+1
  3889     0423  0829               	movf	??_set_time,w
  3890     0424  00F4               	movwf	___awmod@dividend
  3891     0425  082A               	movf	??_set_time+1,w
  3892     0426  00F5               	movwf	___awmod@dividend+1
  3893     0427  160A  118A  274C  120A  118A  	fcall	___awmod
  3894     042C  0872               	movf	?___awmod,w
  3895     042D  3E30               	addlw	48
  3896     042E  1283               	bcf	3,5	;RP0=0, select bank0
  3897     042F  1303               	bcf	3,6	;RP1=0, select bank0
  3898     0430  00D2               	movwf	_time+3
  3899                           
  3900                           ;cbb.c: 403:                 break;
  3901     0431  2C9A               	goto	l4789
  3902     0432                     l4771:
  3903                           
  3904                           ;cbb.c: 405:                     clcd_putch(' ', (0xC0 + 0));
  3905     0432  30C0               	movlw	192
  3906     0433  00A7               	movwf	clcd_putch@addr
  3907     0434  3020               	movlw	32
  3908     0435  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3909                           
  3910                           ;cbb.c: 406:                     clcd_putch(' ', (0xC0 + 1));
  3911     043A  30C1               	movlw	193
  3912     043B  1283               	bcf	3,5	;RP0=0, select bank0
  3913     043C  1303               	bcf	3,6	;RP1=0, select bank0
  3914     043D  00A7               	movwf	clcd_putch@addr
  3915     043E  3020               	movlw	32
  3916     043F  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  3917                           
  3918                           ;cbb.c: 407:                     hr = (time[0] - '0') * 10;
  3919     0444  300A               	movlw	10
  3920     0445  00F2               	movwf	___bmul@multiplicand
  3921     0446  1283               	bcf	3,5	;RP0=0, select bank0
  3922     0447  1303               	bcf	3,6	;RP1=0, select bank0
  3923     0448  084F               	movf	_time,w
  3924     0449  3ED0               	addlw	208
  3925     044A  160A  118A  22BB  120A  118A  	fcall	___bmul
  3926     044F  1283               	bcf	3,5	;RP0=0, select bank0
  3927     0450  1303               	bcf	3,6	;RP1=0, select bank0
  3928     0451  00AE               	movwf	set_time@hr
  3929     0452                     l4773:
  3930                           
  3931                           ;cbb.c: 408:                     hr += (time[1]-'0');
  3932     0452  0850               	movf	_time+1,w
  3933     0453  3ED0               	addlw	208
  3934     0454  07AE               	addwf	set_time@hr,f
  3935     0455                     l4775:
  3936                           
  3937                           ;cbb.c: 409:                     if(key == 0x37)
  3938     0455  3037               	movlw	55
  3939     0456  0649               	xorwf	set_time@key,w
  3940     0457  1D03               	btfss	3,2
  3941     0458  2C5A               	goto	u4701
  3942     0459  2C5B               	goto	u4700
  3943     045A                     u4701:
  3944     045A  2C64               	goto	l4781
  3945     045B                     u4700:
  3946     045B                     l4777:
  3947                           
  3948                           ;cbb.c: 410:                     {;cbb.c: 411:                         if(++hr > 23)
  3949     045B  3001               	movlw	1
  3950     045C  07AE               	addwf	set_time@hr,f
  3951     045D  3018               	movlw	24
  3952     045E  022E               	subwf	set_time@hr,w
  3953     045F  1C03               	skipc
  3954     0460  2C62               	goto	u4711
  3955     0461  2C63               	goto	u4710
  3956     0462                     u4711:
  3957     0462  2C64               	goto	l4781
  3958     0463                     u4710:
  3959     0463                     l4779:
  3960                           
  3961                           ;cbb.c: 412:                             hr = 0;
  3962     0463  01AE               	clrf	set_time@hr
  3963     0464                     l4781:
  3964                           
  3965                           ;cbb.c: 414:                     time[0] = (hr /10) + '0';
  3966     0464  300A               	movlw	10
  3967     0465  00F2               	movwf	___awdiv@divisor
  3968     0466  3000               	movlw	0
  3969     0467  00F3               	movwf	___awdiv@divisor+1
  3970     0468  082E               	movf	set_time@hr,w
  3971     0469  00A9               	movwf	??_set_time
  3972     046A  01AA               	clrf	??_set_time+1
  3973     046B  0829               	movf	??_set_time,w
  3974     046C  00F4               	movwf	___awdiv@dividend
  3975     046D  082A               	movf	??_set_time+1,w
  3976     046E  00F5               	movwf	___awdiv@dividend+1
  3977     046F  120A  158A  222E  120A  118A  	fcall	___awdiv
  3978     0474  0872               	movf	?___awdiv,w
  3979     0475  3E30               	addlw	48
  3980     0476  1283               	bcf	3,5	;RP0=0, select bank0
  3981     0477  1303               	bcf	3,6	;RP1=0, select bank0
  3982     0478  00CF               	movwf	_time
  3983     0479                     l4783:
  3984                           
  3985                           ;cbb.c: 415:                     time[1] = (hr % 10) + '0';
  3986     0479  300A               	movlw	10
  3987     047A  00F2               	movwf	___awmod@divisor
  3988     047B  3000               	movlw	0
  3989     047C  00F3               	movwf	___awmod@divisor+1
  3990     047D  082E               	movf	set_time@hr,w
  3991     047E  00A9               	movwf	??_set_time
  3992     047F  01AA               	clrf	??_set_time+1
  3993     0480  0829               	movf	??_set_time,w
  3994     0481  00F4               	movwf	___awmod@dividend
  3995     0482  082A               	movf	??_set_time+1,w
  3996     0483  00F5               	movwf	___awmod@dividend+1
  3997     0484  160A  118A  274C  120A  118A  	fcall	___awmod
  3998     0489  0872               	movf	?___awmod,w
  3999     048A  3E30               	addlw	48
  4000     048B  1283               	bcf	3,5	;RP0=0, select bank0
  4001     048C  1303               	bcf	3,6	;RP1=0, select bank0
  4002     048D  00D0               	movwf	_time+1
  4003                           
  4004                           ;cbb.c: 416:                 break;
  4005     048E  2C9A               	goto	l4789
  4006     048F                     l4787:
  4007     048F  084A               	movf	set_time@shift,w
  4008                           
  4009                           ; Switch size 1, requested type "simple"
  4010                           ; Number of cases is 3, Range of values is 0 to 2
  4011                           ; switch strategies available:
  4012                           ; Name         Instructions Cycles
  4013                           ; simple_byte           10     6 (average)
  4014                           ; direct_byte           17     8 (fixed)
  4015                           ; jumptable            260     6 (fixed)
  4016                           ;	Chosen strategy is simple_byte
  4017     0490  3A00               	xorlw	0	; case 0
  4018     0491  1903               	skipnz
  4019     0492  2C32               	goto	l4771
  4020     0493  3A01               	xorlw	1	; case 1
  4021     0494  1903               	skipnz
  4022     0495  2BD5               	goto	l4757
  4023     0496  3A03               	xorlw	3	; case 2
  4024     0497  1903               	skipnz
  4025     0498  2B78               	goto	l4743
  4026     0499  2C9A               	goto	l4789
  4027     049A                     l4789:
  4028                           
  4029                           ;cbb.c: 418:         clcd_print("TIME (HH:MM:SS)", (0x80 + 0));
  4030     049A  3046               	movlw	low (STR_33| (0+32768))
  4031     049B  00F6               	movwf	clcd_print@str
  4032     049C  3088               	movlw	high (STR_33| (0+32768))
  4033     049D  00F7               	movwf	clcd_print@str+1
  4034     049E  3080               	movlw	128
  4035     049F  00F8               	movwf	clcd_print@addr
  4036     04A0  120A  158A  219C  120A  118A  	fcall	_clcd_print
  4037     04A5                     l4791:
  4038                           
  4039                           ;cbb.c: 419:         clcd_putch(time[0], (0xC0 + 0));
  4040     04A5  30C0               	movlw	192
  4041     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4042     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  4043     04A8  00A7               	movwf	clcd_putch@addr
  4044     04A9  084F               	movf	_time,w
  4045     04AA  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4046     04AF                     l4793:
  4047                           
  4048                           ;cbb.c: 420:         clcd_putch(time[1], (0xC0 + 1));
  4049     04AF  30C1               	movlw	193
  4050     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  4051     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  4052     04B2  00A7               	movwf	clcd_putch@addr
  4053     04B3  0850               	movf	_time+1,w
  4054     04B4  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4055     04B9                     l4795:
  4056                           
  4057                           ;cbb.c: 421:         clcd_putch(':', (0xC0 + 3));
  4058     04B9  30C3               	movlw	195
  4059     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  4060     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  4061     04BC  00A7               	movwf	clcd_putch@addr
  4062     04BD  303A               	movlw	58
  4063     04BE  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4064     04C3                     l4797:
  4065                           
  4066                           ;cbb.c: 422:         clcd_putch(time[2], (0xC0 + 5));
  4067     04C3  30C5               	movlw	197
  4068     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  4069     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  4070     04C6  00A7               	movwf	clcd_putch@addr
  4071     04C7  0851               	movf	_time+2,w
  4072     04C8  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4073     04CD                     l4799:
  4074                           
  4075                           ;cbb.c: 423:         clcd_putch(time[3], (0xC0 + 6));
  4076     04CD  30C6               	movlw	198
  4077     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  4078     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  4079     04D0  00A7               	movwf	clcd_putch@addr
  4080     04D1  0852               	movf	_time+3,w
  4081     04D2  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4082     04D7                     l4801:
  4083                           
  4084                           ;cbb.c: 424:         clcd_putch(':', (0xC0 + 8));
  4085     04D7  30C8               	movlw	200
  4086     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  4087     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  4088     04DA  00A7               	movwf	clcd_putch@addr
  4089     04DB  303A               	movlw	58
  4090     04DC  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4091     04E1                     l4803:
  4092                           
  4093                           ;cbb.c: 425:         clcd_putch(time[4], (0xC0 + 10));
  4094     04E1  30CA               	movlw	202
  4095     04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4096     04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4097     04E4  00A7               	movwf	clcd_putch@addr
  4098     04E5  0853               	movf	_time+4,w
  4099     04E6  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4100     04EB                     l4805:
  4101                           
  4102                           ;cbb.c: 426:         clcd_putch(time[5], (0xC0 + 11));
  4103     04EB  30CB               	movlw	203
  4104     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  4105     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  4106     04EE  00A7               	movwf	clcd_putch@addr
  4107     04EF  0854               	movf	_time+5,w
  4108     04F0  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4109     04F5                     l4807:
  4110                           
  4111                           ;cbb.c: 427:         if(key == 0xB7)
  4112     04F5  30B7               	movlw	183
  4113     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  4114     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  4115     04F8  0649               	xorwf	set_time@key,w
  4116     04F9  1D03               	btfss	3,2
  4117     04FA  2CFC               	goto	u4721
  4118     04FB  2CFD               	goto	u4720
  4119     04FC                     u4721:
  4120     04FC  2D4C               	goto	l4823
  4121     04FD                     u4720:
  4122     04FD                     l4809:
  4123                           
  4124                           ;cbb.c: 428:         {;cbb.c: 429:             clear_screen();
  4125     04FD  160A  118A  2256  120A  118A  	fcall	_clear_screen
  4126     0502                     l4811:
  4127                           
  4128                           ;cbb.c: 430:             clcd_print("TIME SET", (0x80 + 0));
  4129     0502  3048               	movlw	low (STR_35| (0+32768))
  4130     0503  00F6               	movwf	clcd_print@str
  4131     0504  3089               	movlw	high (STR_35| (0+32768))
  4132     0505  00F7               	movwf	clcd_print@str+1
  4133     0506  3080               	movlw	128
  4134     0507  00F8               	movwf	clcd_print@addr
  4135     0508  120A  158A  219C  120A  118A  	fcall	_clcd_print
  4136     050D                     l4813:
  4137                           
  4138                           ;cbb.c: 431:             clcd_print("SUCCESSFULLY", (0xC0 + 0));
  4139     050D  3004               	movlw	low (STR_32| (0+32768))
  4140     050E  00F6               	movwf	clcd_print@str
  4141     050F  3089               	movlw	high (STR_32| (0+32768))
  4142     0510  00F7               	movwf	clcd_print@str+1
  4143     0511  30C0               	movlw	192
  4144     0512  00F8               	movwf	clcd_print@addr
  4145     0513  120A  158A  219C  120A  118A  	fcall	_clcd_print
  4146                           
  4147                           ;cbb.c: 432:             write_ds1307(0x00,sec);
  4148     0518  1283               	bcf	3,5	;RP0=0, select bank0
  4149     0519  1303               	bcf	3,6	;RP1=0, select bank0
  4150     051A  082C               	movf	set_time@sec,w
  4151     051B  00F3               	movwf	write_ds1307@data
  4152     051C  3000               	movlw	0
  4153     051D  160A  118A  2348  120A  118A  	fcall	_write_ds1307
  4154                           
  4155                           ;cbb.c: 433:             write_ds1307(0x01,min);
  4156     0522  1283               	bcf	3,5	;RP0=0, select bank0
  4157     0523  1303               	bcf	3,6	;RP1=0, select bank0
  4158     0524  082D               	movf	set_time@min,w
  4159     0525  00F3               	movwf	write_ds1307@data
  4160     0526  3001               	movlw	1
  4161     0527  160A  118A  2348  120A  118A  	fcall	_write_ds1307
  4162                           
  4163                           ;cbb.c: 434:             write_ds1307(0x02,hr);
  4164     052C  1283               	bcf	3,5	;RP0=0, select bank0
  4165     052D  1303               	bcf	3,6	;RP1=0, select bank0
  4166     052E  082E               	movf	set_time@hr,w
  4167     052F  00F3               	movwf	write_ds1307@data
  4168     0530  3002               	movlw	2
  4169     0531  160A  118A  2348  120A  118A  	fcall	_write_ds1307
  4170     0536                     l4815:
  4171                           
  4172                           ;cbb.c: 435:             _delay((unsigned long)((1500)*(20000000/4000.0)));
  4173     0536  3027               	movlw	39
  4174     0537  1283               	bcf	3,5	;RP0=0, select bank0
  4175     0538  1303               	bcf	3,6	;RP1=0, select bank0
  4176     0539  00AB               	movwf	??_set_time+2
  4177     053A  300D               	movlw	13
  4178     053B  00AA               	movwf	??_set_time+1
  4179     053C  3025               	movlw	37
  4180     053D  00A9               	movwf	??_set_time
  4181     053E                     u5057:
  4182     053E  0BA9               	decfsz	??_set_time,f
  4183     053F  2D3E               	goto	u5057
  4184     0540  0BAA               	decfsz	??_set_time+1,f
  4185     0541  2D3E               	goto	u5057
  4186     0542  0BAB               	decfsz	??_set_time+2,f
  4187     0543  2D3E               	goto	u5057
  4188     0544  2D45               	nop2
  4189     0545                     l4817:
  4190                           
  4191                           ;cbb.c: 436:             clear_screen();
  4192     0545  160A  118A  2256  120A  118A  	fcall	_clear_screen
  4193                           
  4194                           ;cbb.c: 437:             return 0x11;
  4195     054A  3011               	movlw	17
  4196     054B  2D57               	goto	l266
  4197     054C                     l4823:
  4198     054C  30AF               	movlw	175
  4199     054D  0649               	xorwf	set_time@key,w
  4200     054E  1D03               	btfss	3,2
  4201     054F  2D51               	goto	u4731
  4202     0550  2D52               	goto	u4730
  4203     0551                     u4731:
  4204     0551  2B02               	goto	l251
  4205     0552                     u4730:
  4206     0552                     l4825:
  4207                           
  4208                           ;cbb.c: 440:         {;cbb.c: 441:             clear_screen();
  4209     0552  160A  118A  2256  120A  118A  	fcall	_clear_screen
  4210     0557                     l266:	
  4211                           ;cbb.c: 442:             break;
  4212                           
  4213     0557  0008               	return
  4214     0558                     __end_of_set_time:
  4215                           
  4216                           	psect	text4
  4217     1348                     __ptext4:	
  4218 ;; *************** function _write_ds1307 *****************
  4219 ;; Defined at:
  4220 ;;		line 28 in file "ds1307.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  addr            1    wreg     unsigned char 
  4223 ;;  data            1    3[COMMON] unsigned char 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  addr            1    4[COMMON] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4235 ;;      Params:         1       0       0       0       0
  4236 ;;      Locals:         1       0       0       0       0
  4237 ;;      Temps:          0       0       0       0       0
  4238 ;;      Totals:         2       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 3
  4242 ;; This function calls:
  4243 ;;		_i2c_start
  4244 ;;		_i2c_stop
  4245 ;;		_i2c_write
  4246 ;; This function is called by:
  4247 ;;		_set_time
  4248 ;;		_init_ds1307
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252     1348                     _write_ds1307:	
  4253                           ;psect for function _write_ds1307
  4254                           
  4255                           
  4256                           ;incstack = 0
  4257                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  4258                           ;write_ds1307@addr stored from wreg
  4259     1348  00F4               	movwf	write_ds1307@addr
  4260     1349                     l4115:
  4261                           
  4262                           ;ds1307.c: 28: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 29: {
      +                          ;ds1307.c: 30:     i2c_start();
  4263     1349  160A  118A  2266  160A  118A  	fcall	_i2c_start
  4264                           
  4265                           ;ds1307.c: 31:     i2c_write(0b11010000);
  4266     134E  30D0               	movlw	208
  4267     134F  160A  118A  228D  160A  118A  	fcall	_i2c_write
  4268                           
  4269                           ;ds1307.c: 32:     i2c_write(addr);
  4270     1354  0874               	movf	write_ds1307@addr,w
  4271     1355  160A  118A  228D  160A  118A  	fcall	_i2c_write
  4272                           
  4273                           ;ds1307.c: 33:     i2c_write(data);
  4274     135A  0873               	movf	write_ds1307@data,w
  4275     135B  160A  118A  228D  160A  118A  	fcall	_i2c_write
  4276                           
  4277                           ;ds1307.c: 34:     i2c_stop();
  4278     1360  160A  118A  226F  160A  118A  	fcall	_i2c_stop
  4279     1365                     l400:
  4280     1365  0008               	return
  4281     1366                     __end_of_write_ds1307:
  4282                           
  4283                           	psect	text5
  4284     1366                     __ptext5:	
  4285 ;; *************** function _read_adc *****************
  4286 ;; Defined at:
  4287 ;;		line 12 in file "adc.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  channel         1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  channel         1    5[COMMON] unsigned char 
  4292 ;;  adc_reg_val     2    6[COMMON] unsigned short 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  2    2[COMMON] unsigned short 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         2       0       0       0       0
  4303 ;;      Locals:         3       0       0       0       0
  4304 ;;      Temps:          1       0       0       0       0
  4305 ;;      Totals:         6       0       0       0       0
  4306 ;;Total ram usage:        6 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     1366                     _read_adc:	
  4317                           ;psect for function _read_adc
  4318                           
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _read_adc: [wreg+status,2+status,0]
  4322                           ;read_adc@channel stored from wreg
  4323     1366  00F5               	movwf	read_adc@channel
  4324     1367                     l4383:
  4325                           
  4326                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     u
      +                          nsigned short adc_reg_val;;adc.c: 17:     ADCON0 = (ADCON0 & 0xC7) | (channel << 3);
  4327     1367  0875               	movf	read_adc@channel,w
  4328     1368  00F4               	movwf	??_read_adc
  4329     1369  3003               	movlw	3
  4330     136A                     u4285:
  4331     136A  1003               	clrc
  4332     136B  0DF4               	rlf	??_read_adc,f
  4333     136C  3EFF               	addlw	-1
  4334     136D  1D03               	skipz
  4335     136E  2B6A               	goto	u4285
  4336     136F  1283               	bcf	3,5	;RP0=0, select bank0
  4337     1370  1303               	bcf	3,6	;RP1=0, select bank0
  4338     1371  081F               	movf	31,w	;volatile
  4339     1372  39C7               	andlw	199
  4340     1373  0474               	iorwf	??_read_adc,w
  4341     1374  009F               	movwf	31	;volatile
  4342     1375                     l4385:
  4343                           
  4344                           ;adc.c: 20:     GO = 1;
  4345     1375  151F               	bsf	31,2	;volatile
  4346     1376                     l346:	
  4347                           ;adc.c: 22:     while (nDONE);
  4348                           
  4349     1376  191F               	btfsc	31,2	;volatile
  4350     1377  2B79               	goto	u4291
  4351     1378  2B7A               	goto	u4290
  4352     1379                     u4291:
  4353     1379  2B76               	goto	l346
  4354     137A                     u4290:
  4355     137A                     l4387:
  4356                           
  4357                           ;adc.c: 24:     adc_reg_val = (ADRESH << 8) | ADRESL;
  4358     137A  081E               	movf	30,w	;volatile
  4359     137B  00F7               	movwf	read_adc@adc_reg_val+1
  4360     137C  1683               	bsf	3,5	;RP0=1, select bank1
  4361     137D  1303               	bcf	3,6	;RP1=0, select bank1
  4362     137E  081E               	movf	30,w	;volatile
  4363     137F  00F6               	movwf	read_adc@adc_reg_val
  4364                           
  4365                           ;adc.c: 26:     return adc_reg_val;
  4366     1380  0877               	movf	read_adc@adc_reg_val+1,w
  4367     1381  00F3               	movwf	?_read_adc+1
  4368     1382  0876               	movf	read_adc@adc_reg_val,w
  4369     1383  00F2               	movwf	?_read_adc
  4370     1384                     l349:
  4371     1384  0008               	return
  4372     1385                     __end_of_read_adc:
  4373                           
  4374                           	psect	text6
  4375     0BB0                     __ptext6:	
  4376 ;; *************** function _menu_screen *****************
  4377 ;; Defined at:
  4378 ;;		line 211 in file "cbb.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  key             1    wreg     unsigned char 
  4381 ;;  reset_flag      1    9[BANK0 ] unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  key             1   12[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      unsigned char 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       1       0       0       0
  4394 ;;      Locals:         0       1       0       0       0
  4395 ;;      Temps:          0       2       0       0       0
  4396 ;;      Totals:         0       4       0       0       0
  4397 ;;Total ram usage:        4 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 3
  4400 ;; This function calls:
  4401 ;;		_clcd_print
  4402 ;;		_clcd_putch
  4403 ;;		_clear_screen
  4404 ;; This function is called by:
  4405 ;;		_main
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409     0BB0                     _menu_screen:	
  4410                           ;psect for function _menu_screen
  4411                           
  4412                           
  4413                           ;incstack = 0
  4414                           ; Regs used in _menu_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4415                           ;menu_screen@key stored from wreg
  4416     0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  4417     0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  4418     0BB2  00AC               	movwf	menu_screen@key
  4419     0BB3                     l4531:
  4420                           
  4421                           ;cbb.c: 211: unsigned char menu_screen(unsigned char key,unsigned char reset_flag);cbb.c
      +                          : 212: {;cbb.c: 213:     static unsigned char menu_pos = 0;;cbb.c: 214:     static unsig
      +                          ned char select_pos = 1;;cbb.c: 215:     if(reset_flag == 0x02)
  4422     0BB3  3002               	movlw	2
  4423     0BB4  0629               	xorwf	menu_screen@reset_flag,w
  4424     0BB5  1D03               	btfss	3,2
  4425     0BB6  2BB8               	goto	u4451
  4426     0BB7  2BB9               	goto	u4450
  4427     0BB8                     u4451:
  4428     0BB8  2BBC               	goto	l4537
  4429     0BB9                     u4450:
  4430     0BB9                     l4533:
  4431                           
  4432                           ;cbb.c: 216:     {;cbb.c: 217:         menu_pos = 0;
  4433     0BB9  01CC               	clrf	menu_screen@menu_pos
  4434     0BBA                     l4535:
  4435                           
  4436                           ;cbb.c: 218:         select_pos = 1;
  4437     0BBA  3001               	movlw	1
  4438     0BBB  00E1               	movwf	menu_screen@select_pos
  4439     0BBC                     l4537:
  4440                           
  4441                           ;cbb.c: 221:     if(key == 0x37 && menu_pos < 4)
  4442     0BBC  3037               	movlw	55
  4443     0BBD  062C               	xorwf	menu_screen@key,w
  4444     0BBE  1D03               	btfss	3,2
  4445     0BBF  2BC1               	goto	u4461
  4446     0BC0  2BC2               	goto	u4460
  4447     0BC1                     u4461:
  4448     0BC1  2BDA               	goto	l4549
  4449     0BC2                     u4460:
  4450     0BC2                     l4539:
  4451     0BC2  3004               	movlw	4
  4452     0BC3  024C               	subwf	menu_screen@menu_pos,w
  4453     0BC4  1803               	skipnc
  4454     0BC5  2BC7               	goto	u4471
  4455     0BC6  2BC8               	goto	u4470
  4456     0BC7                     u4471:
  4457     0BC7  2BDA               	goto	l4549
  4458     0BC8                     u4470:
  4459     0BC8                     l4541:
  4460                           
  4461                           ;cbb.c: 222:     {;cbb.c: 223:         menu_pos++;
  4462     0BC8  3001               	movlw	1
  4463     0BC9  07CC               	addwf	menu_screen@menu_pos,f
  4464     0BCA                     l4543:
  4465                           
  4466                           ;cbb.c: 225:         if(select_pos < 2)
  4467     0BCA  3002               	movlw	2
  4468     0BCB  0261               	subwf	menu_screen@select_pos,w
  4469     0BCC  1803               	skipnc
  4470     0BCD  2BCF               	goto	u4481
  4471     0BCE  2BD0               	goto	u4480
  4472     0BCF                     u4481:
  4473     0BCF  2BD5               	goto	l4547
  4474     0BD0                     u4480:
  4475     0BD0                     l4545:
  4476                           
  4477                           ;cbb.c: 226:             clear_screen();
  4478     0BD0  160A  118A  2256  120A  158A  	fcall	_clear_screen
  4479     0BD5                     l4547:
  4480                           
  4481                           ;cbb.c: 227:             select_pos++;
  4482     0BD5  3001               	movlw	1
  4483     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  4484     0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  4485     0BD8  07E1               	addwf	menu_screen@select_pos,f
  4486                           
  4487                           ;cbb.c: 228:     }
  4488     0BD9  2BF6               	goto	l4561
  4489     0BDA                     l4549:
  4490     0BDA  302F               	movlw	47
  4491     0BDB  062C               	xorwf	menu_screen@key,w
  4492     0BDC  1D03               	btfss	3,2
  4493     0BDD  2BDF               	goto	u4491
  4494     0BDE  2BE0               	goto	u4490
  4495     0BDF                     u4491:
  4496     0BDF  2BF6               	goto	l4561
  4497     0BE0                     u4490:
  4498     0BE0                     l4551:
  4499     0BE0  084C               	movf	menu_screen@menu_pos,w
  4500     0BE1  1903               	btfsc	3,2
  4501     0BE2  2BE4               	goto	u4501
  4502     0BE3  2BE5               	goto	u4500
  4503     0BE4                     u4501:
  4504     0BE4  2BF6               	goto	l4561
  4505     0BE5                     u4500:
  4506     0BE5                     l4553:
  4507                           
  4508                           ;cbb.c: 230:     {;cbb.c: 231:         menu_pos--;
  4509     0BE5  3001               	movlw	1
  4510     0BE6  02CC               	subwf	menu_screen@menu_pos,f
  4511     0BE7                     l4555:
  4512                           
  4513                           ;cbb.c: 233:         if(select_pos > 1)
  4514     0BE7  3002               	movlw	2
  4515     0BE8  0261               	subwf	menu_screen@select_pos,w
  4516     0BE9  1C03               	skipc
  4517     0BEA  2BEC               	goto	u4511
  4518     0BEB  2BED               	goto	u4510
  4519     0BEC                     u4511:
  4520     0BEC  2BF2               	goto	l4559
  4521     0BED                     u4510:
  4522     0BED                     l4557:
  4523                           
  4524                           ;cbb.c: 234:             clear_screen();
  4525     0BED  160A  118A  2256  120A  158A  	fcall	_clear_screen
  4526     0BF2                     l4559:
  4527                           
  4528                           ;cbb.c: 235:             select_pos--;
  4529     0BF2  3001               	movlw	1
  4530     0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  4531     0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  4532     0BF5  02E1               	subwf	menu_screen@select_pos,f
  4533     0BF6                     l4561:
  4534                           
  4535                           ;cbb.c: 237:     if(select_pos == 1)
  4536     0BF6  0361               	decf	menu_screen@select_pos,w
  4537     0BF7  1D03               	btfss	3,2
  4538     0BF8  2BFA               	goto	u4521
  4539     0BF9  2BFB               	goto	u4520
  4540     0BFA                     u4521:
  4541     0BFA  2C38               	goto	l4569
  4542     0BFB                     u4520:
  4543     0BFB                     l4563:
  4544                           
  4545                           ;cbb.c: 238:     {;cbb.c: 240:         clcd_putch('*',(0x80 + 0));
  4546     0BFB  3080               	movlw	128
  4547     0BFC  00A7               	movwf	clcd_putch@addr
  4548     0BFD  302A               	movlw	42
  4549     0BFE  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  4550                           
  4551                           ;cbb.c: 241:         clcd_putch(' ',(0xC0 + 0));
  4552     0C03  30C0               	movlw	192
  4553     0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4554     0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4555     0C06  00A7               	movwf	clcd_putch@addr
  4556     0C07  3020               	movlw	32
  4557     0C08  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  4558     0C0D                     l4565:
  4559                           
  4560                           ;cbb.c: 242:         clcd_print(menu[menu_pos],(0x80 + 2));
  4561     0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  4562     0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  4563     0C0F  084C               	movf	menu_screen@menu_pos,w
  4564     0C10  00AA               	movwf	??_menu_screen
  4565     0C11  072A               	addwf	??_menu_screen,w
  4566     0C12  3EAE               	addlw	(low (_menu| 0))& (0+255)
  4567     0C13  0084               	movwf	4
  4568     0C14  1383               	bcf	3,7	;select IRP bank1
  4569     0C15  0800               	movf	0,w
  4570     0C16  00F6               	movwf	clcd_print@str
  4571     0C17  0A84               	incf	4,f
  4572     0C18  0800               	movf	0,w
  4573     0C19  0384               	decf	4,f
  4574     0C1A  00F7               	movwf	clcd_print@str+1
  4575     0C1B  3082               	movlw	130
  4576     0C1C  00F8               	movwf	clcd_print@addr
  4577     0C1D  120A  158A  219C  120A  158A  	fcall	_clcd_print
  4578     0C22                     l4567:
  4579                           
  4580                           ;cbb.c: 243:         clcd_print(menu[menu_pos+1],(0xC0 + 2));
  4581     0C22  1283               	bcf	3,5	;RP0=0, select bank0
  4582     0C23  1303               	bcf	3,6	;RP1=0, select bank0
  4583     0C24  084C               	movf	menu_screen@menu_pos,w
  4584     0C25  00AA               	movwf	??_menu_screen
  4585     0C26  072A               	addwf	??_menu_screen,w
  4586     0C27  3EB0               	addlw	(low ((_menu| 0+2)))& (0+255)
  4587     0C28  0084               	movwf	4
  4588     0C29  1383               	bcf	3,7	;select IRP bank1
  4589     0C2A  0800               	movf	0,w
  4590     0C2B  00F6               	movwf	clcd_print@str
  4591     0C2C  0A84               	incf	4,f
  4592     0C2D  0800               	movf	0,w
  4593     0C2E  0384               	decf	4,f
  4594     0C2F  00F7               	movwf	clcd_print@str+1
  4595     0C30  30C2               	movlw	194
  4596     0C31  00F8               	movwf	clcd_print@addr
  4597     0C32  120A  158A  219C  120A  158A  	fcall	_clcd_print
  4598                           
  4599                           ;cbb.c: 244:     }
  4600     0C37  2C74               	goto	l4575
  4601     0C38                     l4569:
  4602                           
  4603                           ;cbb.c: 246:     {;cbb.c: 248:         clcd_putch(' ',(0x80 + 0));
  4604     0C38  3080               	movlw	128
  4605     0C39  00A7               	movwf	clcd_putch@addr
  4606     0C3A  3020               	movlw	32
  4607     0C3B  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  4608                           
  4609                           ;cbb.c: 249:         clcd_putch('*',(0xC0 + 0));
  4610     0C40  30C0               	movlw	192
  4611     0C41  1283               	bcf	3,5	;RP0=0, select bank0
  4612     0C42  1303               	bcf	3,6	;RP1=0, select bank0
  4613     0C43  00A7               	movwf	clcd_putch@addr
  4614     0C44  302A               	movlw	42
  4615     0C45  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  4616     0C4A                     l4571:
  4617                           
  4618                           ;cbb.c: 250:         clcd_print(menu[menu_pos-1],(0x80 + 2));
  4619     0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  4620     0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  4621     0C4C  084C               	movf	menu_screen@menu_pos,w
  4622     0C4D  00AA               	movwf	??_menu_screen
  4623     0C4E  072A               	addwf	??_menu_screen,w
  4624     0C4F  3EAC               	addlw	(low ((_menu| 0+254)))& (0+255)
  4625     0C50  0084               	movwf	4
  4626     0C51  1383               	bcf	3,7	;select IRP bank1
  4627     0C52  0800               	movf	0,w
  4628     0C53  00F6               	movwf	clcd_print@str
  4629     0C54  0A84               	incf	4,f
  4630     0C55  0800               	movf	0,w
  4631     0C56  0384               	decf	4,f
  4632     0C57  00F7               	movwf	clcd_print@str+1
  4633     0C58  3082               	movlw	130
  4634     0C59  00F8               	movwf	clcd_print@addr
  4635     0C5A  120A  158A  219C  120A  158A  	fcall	_clcd_print
  4636     0C5F                     l4573:
  4637                           
  4638                           ;cbb.c: 251:         clcd_print(menu[menu_pos],(0xC0 + 2));
  4639     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  4640     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  4641     0C61  084C               	movf	menu_screen@menu_pos,w
  4642     0C62  00AA               	movwf	??_menu_screen
  4643     0C63  072A               	addwf	??_menu_screen,w
  4644     0C64  3EAE               	addlw	(low (_menu| 0))& (0+255)
  4645     0C65  0084               	movwf	4
  4646     0C66  1383               	bcf	3,7	;select IRP bank1
  4647     0C67  0800               	movf	0,w
  4648     0C68  00F6               	movwf	clcd_print@str
  4649     0C69  0A84               	incf	4,f
  4650     0C6A  0800               	movf	0,w
  4651     0C6B  0384               	decf	4,f
  4652     0C6C  00F7               	movwf	clcd_print@str+1
  4653     0C6D  30C2               	movlw	194
  4654     0C6E  00F8               	movwf	clcd_print@addr
  4655     0C6F  120A  158A  219C  120A  158A  	fcall	_clcd_print
  4656     0C74                     l4575:
  4657                           
  4658                           ;cbb.c: 253:     return menu_pos;
  4659     0C74  1283               	bcf	3,5	;RP0=0, select bank0
  4660     0C75  1303               	bcf	3,6	;RP1=0, select bank0
  4661     0C76  084C               	movf	menu_screen@menu_pos,w
  4662     0C77                     l218:
  4663     0C77  0008               	return
  4664     0C78                     __end_of_menu_screen:
  4665                           
  4666                           	psect	text7
  4667     0558                     __ptext7:	
  4668 ;; *************** function _login_screen *****************
  4669 ;; Defined at:
  4670 ;;		line 89 in file "cbb.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  key             1    wreg     unsigned char 
  4673 ;;  reset_flag      1    9[BANK0 ] unsigned char 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  key             1   14[BANK0 ] unsigned char 
  4676 ;;  j               1   15[BANK0 ] unsigned char 
  4677 ;;  add             1   13[BANK0 ] unsigned char 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      unsigned char 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4687 ;;      Params:         0       1       0       0       0
  4688 ;;      Locals:         0       3       0       0       0
  4689 ;;      Temps:          0       3       0       0       0
  4690 ;;      Totals:         0       7       0       0       0
  4691 ;;Total ram usage:        7 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 5
  4694 ;; This function calls:
  4695 ;;		___awdiv
  4696 ;;		___awmod
  4697 ;;		_clcd_print
  4698 ;;		_clcd_putch
  4699 ;;		_clcd_write
  4700 ;;		_clear_screen
  4701 ;;		_ext_eeprom_24C02_read
  4702 ;;		_strncmp
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708     0558                     _login_screen:	
  4709                           ;psect for function _login_screen
  4710                           
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _login_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4714                           ;login_screen@key stored from wreg
  4715     0558  1283               	bcf	3,5	;RP0=0, select bank0
  4716     0559  1303               	bcf	3,6	;RP1=0, select bank0
  4717     055A  00AE               	movwf	login_screen@key
  4718     055B                     l4405:
  4719                           
  4720                           ;cbb.c: 89: unsigned char login_screen(unsigned char key,unsigned char reset_flag);cbb.c
      +                          : 90: {;cbb.c: 91:     static unsigned char user_password[4],saved_password[5];;cbb.c: 9
      +                          2:     static unsigned char i, attempt = 3;;cbb.c: 93:     unsigned char add=0;
  4721     055B  01AD               	clrf	login_screen@add
  4722     055C                     l4407:
  4723                           
  4724                           ;cbb.c: 96:     if(pwd_flag)
  4725     055C  0864               	movf	_pwd_flag,w
  4726     055D  1903               	btfsc	3,2
  4727     055E  2D60               	goto	u4311
  4728     055F  2D61               	goto	u4310
  4729     0560                     u4311:
  4730     0560  2D81               	goto	l4429
  4731     0561                     u4310:
  4732     0561                     l4409:
  4733                           
  4734                           ;cbb.c: 97:     {;cbb.c: 98:     if(reset_flag == 0x01)
  4735     0561  0329               	decf	login_screen@reset_flag,w
  4736     0562  1D03               	btfss	3,2
  4737     0563  2D65               	goto	u4321
  4738     0564  2D66               	goto	u4320
  4739     0565                     u4321:
  4740     0565  2D7A               	goto	l4423
  4741     0566                     u4320:
  4742     0566                     l4411:
  4743                           
  4744                           ;cbb.c: 99:     {;cbb.c: 100:         i=0;
  4745     0566  01CD               	clrf	login_screen@i
  4746                           
  4747                           ;cbb.c: 101:         user_password[0] = '\0';
  4748     0567  01DA               	clrf	login_screen@user_password
  4749                           
  4750                           ;cbb.c: 102:         user_password[1] = '\0';
  4751     0568  01DB               	clrf	login_screen@user_password+1
  4752                           
  4753                           ;cbb.c: 103:         user_password[2] = '\0';
  4754     0569  01DC               	clrf	login_screen@user_password+2
  4755                           
  4756                           ;cbb.c: 104:         user_password[3] = '\0';
  4757     056A  01DD               	clrf	login_screen@user_password+3
  4758     056B                     l4413:
  4759                           
  4760                           ;cbb.c: 105:         saved_password[0] = '1';
  4761     056B  3031               	movlw	49
  4762     056C  1683               	bsf	3,5	;RP0=1, select bank1
  4763     056D  1303               	bcf	3,6	;RP1=0, select bank1
  4764     056E  00CF               	movwf	login_screen@saved_password^(0+128)
  4765     056F                     l4415:
  4766                           
  4767                           ;cbb.c: 106:         saved_password[1] = '1';
  4768     056F  3031               	movlw	49
  4769     0570  00D0               	movwf	(login_screen@saved_password^(0+128)+1)
  4770     0571                     l4417:
  4771                           
  4772                           ;cbb.c: 107:         saved_password[2] = '1';
  4773     0571  3031               	movlw	49
  4774     0572  00D1               	movwf	(login_screen@saved_password^(0+128)+2)
  4775     0573                     l4419:
  4776                           
  4777                           ;cbb.c: 108:         saved_password[3] = '1';
  4778     0573  3031               	movlw	49
  4779     0574  00D2               	movwf	(login_screen@saved_password^(0+128)+3)
  4780     0575                     l4421:
  4781                           
  4782                           ;cbb.c: 109:         return_time = 5;
  4783     0575  3005               	movlw	5
  4784     0576  1283               	bcf	3,5	;RP0=0, select bank0
  4785     0577  1303               	bcf	3,6	;RP1=0, select bank0
  4786     0578  00E5               	movwf	_return_time
  4787                           
  4788                           ;cbb.c: 110:         key = 0;
  4789     0579  01AE               	clrf	login_screen@key
  4790     057A                     l4423:
  4791                           
  4792                           ;cbb.c: 112:     if(return_time == 0)
  4793     057A  0865               	movf	_return_time,w
  4794     057B  1D03               	btfss	3,2
  4795     057C  2D7E               	goto	u4331
  4796     057D  2D7F               	goto	u4330
  4797     057E                     u4331:
  4798     057E  2DAB               	goto	l4451
  4799     057F                     u4330:
  4800     057F                     l4425:
  4801                           
  4802                           ;cbb.c: 113:     {;cbb.c: 114:         return 0x02;
  4803     057F  3002               	movlw	2
  4804     0580  2F16               	goto	l187
  4805     0581                     l4429:
  4806                           
  4807                           ;cbb.c: 118:     {;cbb.c: 120:     if(reset_flag == 0x01)
  4808     0581  0329               	decf	login_screen@reset_flag,w
  4809     0582  1D03               	btfss	3,2
  4810     0583  2D85               	goto	u4341
  4811     0584  2D86               	goto	u4340
  4812     0585                     u4341:
  4813     0585  2DA5               	goto	l4445
  4814     0586                     u4340:
  4815     0586                     l4431:
  4816                           
  4817                           ;cbb.c: 121:     {;cbb.c: 122:         i=0;
  4818     0586  01CD               	clrf	login_screen@i
  4819                           
  4820                           ;cbb.c: 123:         user_password[0] = '\0';
  4821     0587  01DA               	clrf	login_screen@user_password
  4822                           
  4823                           ;cbb.c: 124:         user_password[1] = '\0';
  4824     0588  01DB               	clrf	login_screen@user_password+1
  4825                           
  4826                           ;cbb.c: 125:         user_password[2] = '\0';
  4827     0589  01DC               	clrf	login_screen@user_password+2
  4828                           
  4829                           ;cbb.c: 126:         user_password[3] = '\0';
  4830     058A  01DD               	clrf	login_screen@user_password+3
  4831                           
  4832                           ;cbb.c: 127:         for(unsigned char j = 0; j<4; j++)
  4833     058B  01AF               	clrf	login_screen@j
  4834     058C                     l4437:
  4835                           
  4836                           ;cbb.c: 128:         {;cbb.c: 129:         saved_password[j] = ext_eeprom_24C02_read(add
      +                          +j);
  4837     058C  082F               	movf	login_screen@j,w
  4838     058D  3ECF               	addlw	(low (login_screen@saved_password| 0))& (0+255)
  4839     058E  0084               	movwf	4
  4840     058F  082F               	movf	login_screen@j,w
  4841     0590  072D               	addwf	login_screen@add,w
  4842     0591  160A  118A  240D  120A  118A  	fcall	_ext_eeprom_24C02_read
  4843     0596  1383               	bcf	3,7	;select IRP bank1
  4844     0597  0080               	movwf	0
  4845     0598                     l4439:
  4846                           
  4847                           ;cbb.c: 130:         }
  4848     0598  3001               	movlw	1
  4849     0599  1283               	bcf	3,5	;RP0=0, select bank0
  4850     059A  1303               	bcf	3,6	;RP1=0, select bank0
  4851     059B  07AF               	addwf	login_screen@j,f
  4852     059C                     l4441:
  4853     059C  3004               	movlw	4
  4854     059D  022F               	subwf	login_screen@j,w
  4855     059E  1C03               	skipc
  4856     059F  2DA1               	goto	u4351
  4857     05A0  2DA2               	goto	u4350
  4858     05A1                     u4351:
  4859     05A1  2D8C               	goto	l4437
  4860     05A2                     u4350:
  4861     05A2                     l191:
  4862                           
  4863                           ;cbb.c: 131:         return_time = 5;
  4864     05A2  3005               	movlw	5
  4865     05A3  00E5               	movwf	_return_time
  4866     05A4                     l4443:
  4867                           
  4868                           ;cbb.c: 132:         key = 0;
  4869     05A4  01AE               	clrf	login_screen@key
  4870     05A5                     l4445:
  4871                           
  4872                           ;cbb.c: 134:     if(return_time == 0)
  4873     05A5  0865               	movf	_return_time,w
  4874     05A6  1D03               	btfss	3,2
  4875     05A7  2DA9               	goto	u4361
  4876     05A8  2DAA               	goto	u4360
  4877     05A9                     u4361:
  4878     05A9  2DAB               	goto	l4451
  4879     05AA                     u4360:
  4880     05AA  2D7F               	goto	l4425
  4881     05AB                     l4451:
  4882                           
  4883                           ;cbb.c: 140:     if(key == 0x37 && i<4)
  4884     05AB  3037               	movlw	55
  4885     05AC  062E               	xorwf	login_screen@key,w
  4886     05AD  1D03               	btfss	3,2
  4887     05AE  2DB0               	goto	u4371
  4888     05AF  2DB1               	goto	u4370
  4889     05B0                     u4371:
  4890     05B0  2DCD               	goto	l4463
  4891     05B1                     u4370:
  4892     05B1                     l4453:
  4893     05B1  3004               	movlw	4
  4894     05B2  024D               	subwf	login_screen@i,w
  4895     05B3  1803               	skipnc
  4896     05B4  2DB6               	goto	u4381
  4897     05B5  2DB7               	goto	u4380
  4898     05B6                     u4381:
  4899     05B6  2DCD               	goto	l4463
  4900     05B7                     u4380:
  4901     05B7                     l4455:
  4902                           
  4903                           ;cbb.c: 141:     {;cbb.c: 142:         user_password[i++] = '1';
  4904     05B7  084D               	movf	login_screen@i,w
  4905     05B8  3E5A               	addlw	(low (login_screen@user_password| 0))& (0+255)
  4906     05B9  0084               	movwf	4
  4907     05BA  3031               	movlw	49
  4908     05BB  1383               	bcf	3,7	;select IRP bank0
  4909     05BC  0080               	movwf	0
  4910     05BD                     l4457:
  4911     05BD  3001               	movlw	1
  4912     05BE  07CD               	addwf	login_screen@i,f
  4913     05BF                     l4459:
  4914                           
  4915                           ;cbb.c: 143:         clcd_putch('*',(0xC0 + i + 4));
  4916     05BF  084D               	movf	login_screen@i,w
  4917     05C0  3EC4               	addlw	196
  4918     05C1  00A7               	movwf	clcd_putch@addr
  4919     05C2  302A               	movlw	42
  4920     05C3  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4921     05C8                     l4461:
  4922                           
  4923                           ;cbb.c: 144:         return_time = 5;
  4924     05C8  3005               	movlw	5
  4925     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  4926     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  4927     05CB  00E5               	movwf	_return_time
  4928                           
  4929                           ;cbb.c: 145:     }
  4930     05CC  2DEA               	goto	l4473
  4931     05CD                     l4463:
  4932     05CD  302F               	movlw	47
  4933     05CE  062E               	xorwf	login_screen@key,w
  4934     05CF  1D03               	btfss	3,2
  4935     05D0  2DD2               	goto	u4391
  4936     05D1  2DD3               	goto	u4390
  4937     05D2                     u4391:
  4938     05D2  2DEA               	goto	l4473
  4939     05D3                     u4390:
  4940     05D3                     l4465:
  4941     05D3  3004               	movlw	4
  4942     05D4  024D               	subwf	login_screen@i,w
  4943     05D5  1803               	skipnc
  4944     05D6  2DD8               	goto	u4401
  4945     05D7  2DD9               	goto	u4400
  4946     05D8                     u4401:
  4947     05D8  2DEA               	goto	l4473
  4948     05D9                     u4400:
  4949     05D9                     l4467:
  4950                           
  4951                           ;cbb.c: 147:     {;cbb.c: 148:         user_password[i++] = '0';
  4952     05D9  084D               	movf	login_screen@i,w
  4953     05DA  3E5A               	addlw	(low (login_screen@user_password| 0))& (0+255)
  4954     05DB  0084               	movwf	4
  4955     05DC  3030               	movlw	48
  4956     05DD  1383               	bcf	3,7	;select IRP bank0
  4957     05DE  0080               	movwf	0
  4958     05DF                     l4469:
  4959     05DF  3001               	movlw	1
  4960     05E0  07CD               	addwf	login_screen@i,f
  4961     05E1                     l4471:
  4962                           
  4963                           ;cbb.c: 149:         clcd_putch('*',(0xC0 + i + 4));
  4964     05E1  084D               	movf	login_screen@i,w
  4965     05E2  3EC4               	addlw	196
  4966     05E3  00A7               	movwf	clcd_putch@addr
  4967     05E4  302A               	movlw	42
  4968     05E5  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  4969     05EA                     l4473:
  4970                           
  4971                           ;cbb.c: 152:     if(i == 4)
  4972     05EA  3004               	movlw	4
  4973     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  4974     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  4975     05ED  064D               	xorwf	login_screen@i,w
  4976     05EE  1D03               	btfss	3,2
  4977     05EF  2DF1               	goto	u4411
  4978     05F0  2DF2               	goto	u4410
  4979     05F1                     u4411:
  4980     05F1  2F16               	goto	l187
  4981     05F2                     u4410:
  4982     05F2                     l4475:
  4983                           
  4984                           ;cbb.c: 153:     {;cbb.c: 154:         if(strncmp(user_password,saved_password,4) == 0)
  4985     05F2  305A               	movlw	(low (login_screen@user_password| 0))& (0+255)
  4986     05F3  00F2               	movwf	strncmp@l
  4987     05F4  30CF               	movlw	(low (login_screen@saved_password| 0))& (0+255)
  4988     05F5  00F3               	movwf	strncmp@r
  4989     05F6  3004               	movlw	4
  4990     05F7  00F4               	movwf	strncmp@n
  4991     05F8  3000               	movlw	0
  4992     05F9  00F5               	movwf	strncmp@n+1
  4993     05FA  160A  118A  2658  120A  118A  	fcall	_strncmp
  4994     05FF  0872               	movf	?_strncmp,w
  4995     0600  0473               	iorwf	?_strncmp+1,w
  4996     0601  1D03               	btfss	3,2
  4997     0602  2E04               	goto	u4421
  4998     0603  2E05               	goto	u4420
  4999     0604                     u4421:
  5000     0604  2E37               	goto	l4493
  5001     0605                     u4420:
  5002     0605                     l4477:
  5003                           
  5004                           ;cbb.c: 155:         {;cbb.c: 156:            clear_screen();
  5005     0605  160A  118A  2256  120A  118A  	fcall	_clear_screen
  5006                           
  5007                           ;cbb.c: 158:            clcd_write(0x0C,0);
  5008     060A  01F2               	clrf	clcd_write@mode
  5009     060B  300C               	movlw	12
  5010     060C  160A  118A  2528  120A  118A  	fcall	_clcd_write
  5011     0611                     l4479:
  5012                           
  5013                           ;cbb.c: 159:            _delay((unsigned long)((100)*(20000000/4000000.0)));
  5014     0611  30A5               	movlw	165
  5015     0612  1283               	bcf	3,5	;RP0=0, select bank0
  5016     0613  1303               	bcf	3,6	;RP1=0, select bank0
  5017     0614  00AA               	movwf	??_login_screen
  5018     0615                     u5067:
  5019     0615  0BAA               	decfsz	??_login_screen,f
  5020     0616  2E15               	goto	u5067
  5021     0617  2E18               	nop2
  5022     0618                     l4481:
  5023                           
  5024                           ;cbb.c: 160:            clcd_print("Login Success",(0x80 + 0));
  5025     0618  30DC               	movlw	low (STR_20| (0+32768))
  5026     0619  00F6               	movwf	clcd_print@str
  5027     061A  3088               	movlw	high (STR_20| (0+32768))
  5028     061B  00F7               	movwf	clcd_print@str+1
  5029     061C  3080               	movlw	128
  5030     061D  00F8               	movwf	clcd_print@addr
  5031     061E  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5032     0623                     l4483:
  5033                           
  5034                           ;cbb.c: 161:            _delay((unsigned long)((1500)*(20000000/4000.0)));
  5035     0623  3027               	movlw	39
  5036     0624  1283               	bcf	3,5	;RP0=0, select bank0
  5037     0625  1303               	bcf	3,6	;RP1=0, select bank0
  5038     0626  00AC               	movwf	??_login_screen+2
  5039     0627  300D               	movlw	13
  5040     0628  00AB               	movwf	??_login_screen+1
  5041     0629  3025               	movlw	37
  5042     062A  00AA               	movwf	??_login_screen
  5043     062B                     u5077:
  5044     062B  0BAA               	decfsz	??_login_screen,f
  5045     062C  2E2B               	goto	u5077
  5046     062D  0BAB               	decfsz	??_login_screen+1,f
  5047     062E  2E2B               	goto	u5077
  5048     062F  0BAC               	decfsz	??_login_screen+2,f
  5049     0630  2E2B               	goto	u5077
  5050     0631  2E32               	nop2
  5051     0632                     l4485:
  5052                           
  5053                           ;cbb.c: 163:            TMR2ON = 0;
  5054     0632  1283               	bcf	3,5	;RP0=0, select bank0
  5055     0633  1303               	bcf	3,6	;RP1=0, select bank0
  5056     0634  1112               	bcf	18,2	;volatile
  5057     0635                     l4487:
  5058                           
  5059                           ;cbb.c: 164:            return 0x01;
  5060     0635  3001               	movlw	1
  5061     0636  2F16               	goto	l187
  5062     0637                     l4493:
  5063                           
  5064                           ;cbb.c: 167:         {;cbb.c: 169:             attempt--;
  5065     0637  3001               	movlw	1
  5066     0638  1283               	bcf	3,5	;RP0=0, select bank0
  5067     0639  1303               	bcf	3,6	;RP1=0, select bank0
  5068     063A  02E2               	subwf	login_screen@attempt,f
  5069                           
  5070                           ;cbb.c: 170:             if(attempt == 0)
  5071     063B  0862               	movf	login_screen@attempt,w
  5072     063C  1D03               	btfss	3,2
  5073     063D  2E3F               	goto	u4431
  5074     063E  2E40               	goto	u4430
  5075     063F                     u4431:
  5076     063F  2EB7               	goto	l4511
  5077     0640                     u4430:
  5078     0640                     l4495:
  5079                           
  5080                           ;cbb.c: 171:             {;cbb.c: 173:                   clear_screen();
  5081     0640  160A  118A  2256  120A  118A  	fcall	_clear_screen
  5082                           
  5083                           ;cbb.c: 174:                   clcd_write(0x0C,0);
  5084     0645  01F2               	clrf	clcd_write@mode
  5085     0646  300C               	movlw	12
  5086     0647  160A  118A  2528  120A  118A  	fcall	_clcd_write
  5087     064C                     l4497:
  5088                           
  5089                           ;cbb.c: 175:                   _delay((unsigned long)((100)*(20000000/4000000.0)));
  5090     064C  30A5               	movlw	165
  5091     064D  1283               	bcf	3,5	;RP0=0, select bank0
  5092     064E  1303               	bcf	3,6	;RP1=0, select bank0
  5093     064F  00AA               	movwf	??_login_screen
  5094     0650                     u5087:
  5095     0650  0BAA               	decfsz	??_login_screen,f
  5096     0651  2E50               	goto	u5087
  5097     0652  2E53               	nop2
  5098     0653                     l4499:
  5099                           
  5100                           ;cbb.c: 176:                   clcd_print("You are blocked",(0x80 + 0));
  5101     0653  3056               	movlw	low (STR_21| (0+32768))
  5102     0654  00F6               	movwf	clcd_print@str
  5103     0655  3088               	movlw	high (STR_21| (0+32768))
  5104     0656  00F7               	movwf	clcd_print@str+1
  5105     0657  3080               	movlw	128
  5106     0658  00F8               	movwf	clcd_print@addr
  5107     0659  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5108     065E                     l4501:
  5109                           
  5110                           ;cbb.c: 177:                   clcd_print("Wait for",(0xC0 + 0));
  5111     065E  305A               	movlw	low (STR_22| (0+32768))
  5112     065F  00F6               	movwf	clcd_print@str
  5113     0660  3089               	movlw	high (STR_22| (0+32768))
  5114     0661  00F7               	movwf	clcd_print@str+1
  5115     0662  30C0               	movlw	192
  5116     0663  00F8               	movwf	clcd_print@addr
  5117     0664  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5118     0669                     l4503:
  5119                           
  5120                           ;cbb.c: 178:                   sec = 60;
  5121     0669  303C               	movlw	60
  5122     066A  1283               	bcf	3,5	;RP0=0, select bank0
  5123     066B  1303               	bcf	3,6	;RP1=0, select bank0
  5124     066C  00E3               	movwf	_sec
  5125                           
  5126                           ;cbb.c: 179:                   while(sec != 0)
  5127     066D  2EAD               	goto	l4509
  5128     066E                     l4505:
  5129                           
  5130                           ;cbb.c: 180:                   {;cbb.c: 181:                        clcd_putch((sec / 10
      +                          ) + '0',(0xC0 + 9));
  5131     066E  30C9               	movlw	201
  5132     066F  00A7               	movwf	clcd_putch@addr
  5133     0670  300A               	movlw	10
  5134     0671  00F2               	movwf	___awdiv@divisor
  5135     0672  3000               	movlw	0
  5136     0673  00F3               	movwf	___awdiv@divisor+1
  5137     0674  0863               	movf	_sec,w
  5138     0675  00AA               	movwf	??_login_screen
  5139     0676  01AB               	clrf	??_login_screen+1
  5140     0677  082A               	movf	??_login_screen,w
  5141     0678  00F4               	movwf	___awdiv@dividend
  5142     0679  082B               	movf	??_login_screen+1,w
  5143     067A  00F5               	movwf	___awdiv@dividend+1
  5144     067B  120A  158A  222E  120A  118A  	fcall	___awdiv
  5145     0680  0872               	movf	?___awdiv,w
  5146     0681  3E30               	addlw	48
  5147     0682  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  5148                           
  5149                           ;cbb.c: 182:                        clcd_putch((sec % 10) + '0',(0xC0 + 10));
  5150     0687  30CA               	movlw	202
  5151     0688  1283               	bcf	3,5	;RP0=0, select bank0
  5152     0689  1303               	bcf	3,6	;RP1=0, select bank0
  5153     068A  00A7               	movwf	clcd_putch@addr
  5154     068B  300A               	movlw	10
  5155     068C  00F2               	movwf	___awmod@divisor
  5156     068D  3000               	movlw	0
  5157     068E  00F3               	movwf	___awmod@divisor+1
  5158     068F  0863               	movf	_sec,w
  5159     0690  00AA               	movwf	??_login_screen
  5160     0691  01AB               	clrf	??_login_screen+1
  5161     0692  082A               	movf	??_login_screen,w
  5162     0693  00F4               	movwf	___awmod@dividend
  5163     0694  082B               	movf	??_login_screen+1,w
  5164     0695  00F5               	movwf	___awmod@dividend+1
  5165     0696  160A  118A  274C  120A  118A  	fcall	___awmod
  5166     069B  0872               	movf	?___awmod,w
  5167     069C  3E30               	addlw	48
  5168     069D  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  5169     06A2                     l4507:
  5170                           
  5171                           ;cbb.c: 183:                        clcd_print("sec", (0xC0 + 12));
  5172     06A2  3073               	movlw	low (STR_23| (0+32768))
  5173     06A3  00F6               	movwf	clcd_print@str
  5174     06A4  3089               	movlw	high (STR_23| (0+32768))
  5175     06A5  00F7               	movwf	clcd_print@str+1
  5176     06A6  30CC               	movlw	204
  5177     06A7  00F8               	movwf	clcd_print@addr
  5178     06A8  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5179     06AD                     l4509:
  5180                           
  5181                           ;cbb.c: 179:                   while(sec != 0)
  5182     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  5183     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  5184     06AF  0863               	movf	_sec,w
  5185     06B0  1D03               	btfss	3,2
  5186     06B1  2EB3               	goto	u4441
  5187     06B2  2EB4               	goto	u4440
  5188     06B3                     u4441:
  5189     06B3  2E6E               	goto	l4505
  5190     06B4                     u4440:
  5191     06B4                     l202:
  5192                           
  5193                           ;cbb.c: 186:                   attempt = 3;
  5194     06B4  3003               	movlw	3
  5195     06B5  00E2               	movwf	login_screen@attempt
  5196                           
  5197                           ;cbb.c: 188:             }
  5198     06B6  2EFA               	goto	l4521
  5199     06B7                     l4511:
  5200                           
  5201                           ;cbb.c: 190:             {;cbb.c: 192:                   clear_screen();
  5202     06B7  160A  118A  2256  120A  118A  	fcall	_clear_screen
  5203                           
  5204                           ;cbb.c: 193:                   clcd_write(0x0C,0);
  5205     06BC  01F2               	clrf	clcd_write@mode
  5206     06BD  300C               	movlw	12
  5207     06BE  160A  118A  2528  120A  118A  	fcall	_clcd_write
  5208     06C3                     l4513:
  5209                           
  5210                           ;cbb.c: 194:                   _delay((unsigned long)((100)*(20000000/4000000.0)));
  5211     06C3  30A5               	movlw	165
  5212     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5213     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  5214     06C6  00AA               	movwf	??_login_screen
  5215     06C7                     u5097:
  5216     06C7  0BAA               	decfsz	??_login_screen,f
  5217     06C8  2EC7               	goto	u5097
  5218     06C9  2ECA               	nop2
  5219     06CA                     l4515:
  5220                           
  5221                           ;cbb.c: 195:                   clcd_print("Wrong password",(0x80 + 0));
  5222     06CA  30A2               	movlw	low (STR_24| (0+32768))
  5223     06CB  00F6               	movwf	clcd_print@str
  5224     06CC  3088               	movlw	high (STR_24| (0+32768))
  5225     06CD  00F7               	movwf	clcd_print@str+1
  5226     06CE  3080               	movlw	128
  5227     06CF  00F8               	movwf	clcd_print@addr
  5228     06D0  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5229     06D5                     l4517:
  5230                           
  5231                           ;cbb.c: 196:                   clcd_print("Attempts left:",(0xC0 + 0));
  5232     06D5  3075               	movlw	low (STR_25| (0+32768))
  5233     06D6  00F6               	movwf	clcd_print@str
  5234     06D7  3088               	movlw	high (STR_25| (0+32768))
  5235     06D8  00F7               	movwf	clcd_print@str+1
  5236     06D9  30C0               	movlw	192
  5237     06DA  00F8               	movwf	clcd_print@addr
  5238     06DB  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5239     06E0                     l4519:
  5240                           
  5241                           ;cbb.c: 197:                   clcd_putch(attempt + '0',(0xC0 + 14));
  5242     06E0  30CE               	movlw	206
  5243     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  5244     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  5245     06E3  00A7               	movwf	clcd_putch@addr
  5246     06E4  0862               	movf	login_screen@attempt,w
  5247     06E5  3E30               	addlw	48
  5248     06E6  160A  118A  22E1  120A  118A  	fcall	_clcd_putch
  5249                           
  5250                           ;cbb.c: 198:                   _delay((unsigned long)((1500)*(20000000/4000.0)));
  5251     06EB  3027               	movlw	39
  5252     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  5253     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  5254     06EE  00AC               	movwf	??_login_screen+2
  5255     06EF  300D               	movlw	13
  5256     06F0  00AB               	movwf	??_login_screen+1
  5257     06F1  3025               	movlw	37
  5258     06F2  00AA               	movwf	??_login_screen
  5259     06F3                     u5107:
  5260     06F3  0BAA               	decfsz	??_login_screen,f
  5261     06F4  2EF3               	goto	u5107
  5262     06F5  0BAB               	decfsz	??_login_screen+1,f
  5263     06F6  2EF3               	goto	u5107
  5264     06F7  0BAC               	decfsz	??_login_screen+2,f
  5265     06F8  2EF3               	goto	u5107
  5266     06F9  2EFA               	nop2
  5267     06FA                     l4521:
  5268                           
  5269                           ;cbb.c: 201:             clear_screen();
  5270     06FA  160A  118A  2256  120A  118A  	fcall	_clear_screen
  5271     06FF                     l4523:
  5272                           
  5273                           ;cbb.c: 202:             clcd_print("Enter password",(0x80 + 0));
  5274     06FF  30B1               	movlw	low (STR_9| (0+32768))
  5275     0700  00F6               	movwf	clcd_print@str
  5276     0701  3088               	movlw	high (STR_9| (0+32768))
  5277     0702  00F7               	movwf	clcd_print@str+1
  5278     0703  3080               	movlw	128
  5279     0704  00F8               	movwf	clcd_print@addr
  5280     0705  120A  158A  219C  120A  118A  	fcall	_clcd_print
  5281     070A                     l4525:
  5282                           
  5283                           ;cbb.c: 203:             clcd_write(0x0F,0);
  5284     070A  01F2               	clrf	clcd_write@mode
  5285     070B  300F               	movlw	15
  5286     070C  160A  118A  2528  120A  118A  	fcall	_clcd_write
  5287     0711                     l4527:
  5288                           
  5289                           ;cbb.c: 204:             i = 0;
  5290     0711  1283               	bcf	3,5	;RP0=0, select bank0
  5291     0712  1303               	bcf	3,6	;RP1=0, select bank0
  5292     0713  01CD               	clrf	login_screen@i
  5293     0714                     l4529:
  5294                           
  5295                           ;cbb.c: 205:             return_time = 5;
  5296     0714  3005               	movlw	5
  5297     0715  00E5               	movwf	_return_time
  5298     0716                     l187:
  5299     0716  0008               	return
  5300     0717                     __end_of_login_screen:
  5301                           
  5302                           	psect	text8
  5303     174C                     __ptext8:	
  5304 ;; *************** function ___awmod *****************
  5305 ;; Defined at:
  5306 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  divisor         2    2[COMMON] int 
  5309 ;;  dividend        2    4[COMMON] int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  sign            1    7[COMMON] unsigned char 
  5312 ;;  counter         1    6[COMMON] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    2[COMMON] int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5322 ;;      Params:         4       0       0       0       0
  5323 ;;      Locals:         2       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0
  5325 ;;      Totals:         6       0       0       0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_login_screen
  5333 ;;		_set_time
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337     174C                     ___awmod:	
  5338                           ;psect for function ___awmod
  5339                           
  5340     174C                     l4269:	
  5341                           ;incstack = 0
  5342                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5343                           
  5344     174C  01F7               	clrf	___awmod@sign
  5345     174D                     l4271:
  5346     174D  1FF5               	btfss	___awmod@dividend+1,7
  5347     174E  2F50               	goto	u4061
  5348     174F  2F51               	goto	u4060
  5349     1750                     u4061:
  5350     1750  2F58               	goto	l4277
  5351     1751                     u4060:
  5352     1751                     l4273:
  5353     1751  09F4               	comf	___awmod@dividend,f
  5354     1752  09F5               	comf	___awmod@dividend+1,f
  5355     1753  0AF4               	incf	___awmod@dividend,f
  5356     1754  1903               	skipnz
  5357     1755  0AF5               	incf	___awmod@dividend+1,f
  5358     1756                     l4275:
  5359     1756  3001               	movlw	1
  5360     1757  00F7               	movwf	___awmod@sign
  5361     1758                     l4277:
  5362     1758  1FF3               	btfss	___awmod@divisor+1,7
  5363     1759  2F5B               	goto	u4071
  5364     175A  2F5C               	goto	u4070
  5365     175B                     u4071:
  5366     175B  2F61               	goto	l4281
  5367     175C                     u4070:
  5368     175C                     l4279:
  5369     175C  09F2               	comf	___awmod@divisor,f
  5370     175D  09F3               	comf	___awmod@divisor+1,f
  5371     175E  0AF2               	incf	___awmod@divisor,f
  5372     175F  1903               	skipnz
  5373     1760  0AF3               	incf	___awmod@divisor+1,f
  5374     1761                     l4281:
  5375     1761  0872               	movf	___awmod@divisor,w
  5376     1762  0473               	iorwf	___awmod@divisor+1,w
  5377     1763  1903               	btfsc	3,2
  5378     1764  2F66               	goto	u4081
  5379     1765  2F67               	goto	u4080
  5380     1766                     u4081:
  5381     1766  2F94               	goto	l4299
  5382     1767                     u4080:
  5383     1767                     l4283:
  5384     1767  3001               	movlw	1
  5385     1768  00F6               	movwf	___awmod@counter
  5386     1769  2F73               	goto	l4289
  5387     176A                     l4285:
  5388     176A  3001               	movlw	1
  5389     176B                     u4095:
  5390     176B  1003               	clrc
  5391     176C  0DF2               	rlf	___awmod@divisor,f
  5392     176D  0DF3               	rlf	___awmod@divisor+1,f
  5393     176E  3EFF               	addlw	-1
  5394     176F  1D03               	skipz
  5395     1770  2F6B               	goto	u4095
  5396     1771                     l4287:
  5397     1771  3001               	movlw	1
  5398     1772  07F6               	addwf	___awmod@counter,f
  5399     1773                     l4289:
  5400     1773  1FF3               	btfss	___awmod@divisor+1,7
  5401     1774  2F76               	goto	u4101
  5402     1775  2F77               	goto	u4100
  5403     1776                     u4101:
  5404     1776  2F6A               	goto	l4285
  5405     1777                     u4100:
  5406     1777                     l4291:
  5407     1777  0873               	movf	___awmod@divisor+1,w
  5408     1778  0275               	subwf	___awmod@dividend+1,w
  5409     1779  1D03               	skipz
  5410     177A  2F7D               	goto	u4115
  5411     177B  0872               	movf	___awmod@divisor,w
  5412     177C  0274               	subwf	___awmod@dividend,w
  5413     177D                     u4115:
  5414     177D  1C03               	skipc
  5415     177E  2F80               	goto	u4111
  5416     177F  2F81               	goto	u4110
  5417     1780                     u4111:
  5418     1780  2F87               	goto	l4295
  5419     1781                     u4110:
  5420     1781                     l4293:
  5421     1781  0872               	movf	___awmod@divisor,w
  5422     1782  02F4               	subwf	___awmod@dividend,f
  5423     1783  0873               	movf	___awmod@divisor+1,w
  5424     1784  1C03               	skipc
  5425     1785  03F5               	decf	___awmod@dividend+1,f
  5426     1786  02F5               	subwf	___awmod@dividend+1,f
  5427     1787                     l4295:
  5428     1787  3001               	movlw	1
  5429     1788                     u4125:
  5430     1788  1003               	clrc
  5431     1789  0CF3               	rrf	___awmod@divisor+1,f
  5432     178A  0CF2               	rrf	___awmod@divisor,f
  5433     178B  3EFF               	addlw	-1
  5434     178C  1D03               	skipz
  5435     178D  2F88               	goto	u4125
  5436     178E                     l4297:
  5437     178E  3001               	movlw	1
  5438     178F  02F6               	subwf	___awmod@counter,f
  5439     1790  1D03               	btfss	3,2
  5440     1791  2F93               	goto	u4131
  5441     1792  2F94               	goto	u4130
  5442     1793                     u4131:
  5443     1793  2F77               	goto	l4291
  5444     1794                     u4130:
  5445     1794                     l4299:
  5446     1794  0877               	movf	___awmod@sign,w
  5447     1795  1903               	btfsc	3,2
  5448     1796  2F98               	goto	u4141
  5449     1797  2F99               	goto	u4140
  5450     1798                     u4141:
  5451     1798  2F9E               	goto	l4303
  5452     1799                     u4140:
  5453     1799                     l4301:
  5454     1799  09F4               	comf	___awmod@dividend,f
  5455     179A  09F5               	comf	___awmod@dividend+1,f
  5456     179B  0AF4               	incf	___awmod@dividend,f
  5457     179C  1903               	skipnz
  5458     179D  0AF5               	incf	___awmod@dividend+1,f
  5459     179E                     l4303:
  5460     179E  0875               	movf	___awmod@dividend+1,w
  5461     179F  00F3               	movwf	?___awmod+1
  5462     17A0  0874               	movf	___awmod@dividend,w
  5463     17A1  00F2               	movwf	?___awmod
  5464     17A2                     l834:
  5465     17A2  0008               	return
  5466     17A3                     __end_of___awmod:
  5467                           
  5468                           	psect	text9
  5469     0A2E                     __ptext9:	
  5470 ;; *************** function ___awdiv *****************
  5471 ;; Defined at:
  5472 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  divisor         2    2[COMMON] int 
  5475 ;;  dividend        2    4[COMMON] int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  quotient        2    8[COMMON] int 
  5478 ;;  sign            1    7[COMMON] unsigned char 
  5479 ;;  counter         1    6[COMMON] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  2    2[COMMON] int 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2, status,0
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5489 ;;      Params:         4       0       0       0       0
  5490 ;;      Locals:         4       0       0       0       0
  5491 ;;      Temps:          0       0       0       0       0
  5492 ;;      Totals:         8       0       0       0       0
  5493 ;;Total ram usage:        8 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_login_screen
  5500 ;;		_set_time
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504     0A2E                     ___awdiv:	
  5505                           ;psect for function ___awdiv
  5506                           
  5507     0A2E                     l4225:	
  5508                           ;incstack = 0
  5509                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5510                           
  5511     0A2E  01F7               	clrf	___awdiv@sign
  5512     0A2F                     l4227:
  5513     0A2F  1FF3               	btfss	___awdiv@divisor+1,7
  5514     0A30  2A32               	goto	u3961
  5515     0A31  2A33               	goto	u3960
  5516     0A32                     u3961:
  5517     0A32  2A3A               	goto	l4233
  5518     0A33                     u3960:
  5519     0A33                     l4229:
  5520     0A33  09F2               	comf	___awdiv@divisor,f
  5521     0A34  09F3               	comf	___awdiv@divisor+1,f
  5522     0A35  0AF2               	incf	___awdiv@divisor,f
  5523     0A36  1903               	skipnz
  5524     0A37  0AF3               	incf	___awdiv@divisor+1,f
  5525     0A38                     l4231:
  5526     0A38  3001               	movlw	1
  5527     0A39  00F7               	movwf	___awdiv@sign
  5528     0A3A                     l4233:
  5529     0A3A  1FF5               	btfss	___awdiv@dividend+1,7
  5530     0A3B  2A3D               	goto	u3971
  5531     0A3C  2A3E               	goto	u3970
  5532     0A3D                     u3971:
  5533     0A3D  2A45               	goto	l4239
  5534     0A3E                     u3970:
  5535     0A3E                     l4235:
  5536     0A3E  09F4               	comf	___awdiv@dividend,f
  5537     0A3F  09F5               	comf	___awdiv@dividend+1,f
  5538     0A40  0AF4               	incf	___awdiv@dividend,f
  5539     0A41  1903               	skipnz
  5540     0A42  0AF5               	incf	___awdiv@dividend+1,f
  5541     0A43                     l4237:
  5542     0A43  3001               	movlw	1
  5543     0A44  06F7               	xorwf	___awdiv@sign,f
  5544     0A45                     l4239:
  5545     0A45  01F8               	clrf	___awdiv@quotient
  5546     0A46  01F9               	clrf	___awdiv@quotient+1
  5547     0A47                     l4241:
  5548     0A47  0872               	movf	___awdiv@divisor,w
  5549     0A48  0473               	iorwf	___awdiv@divisor+1,w
  5550     0A49  1903               	btfsc	3,2
  5551     0A4A  2A4C               	goto	u3981
  5552     0A4B  2A4D               	goto	u3980
  5553     0A4C                     u3981:
  5554     0A4C  2A82               	goto	l4261
  5555     0A4D                     u3980:
  5556     0A4D                     l4243:
  5557     0A4D  3001               	movlw	1
  5558     0A4E  00F6               	movwf	___awdiv@counter
  5559     0A4F  2A59               	goto	l4249
  5560     0A50                     l4245:
  5561     0A50  3001               	movlw	1
  5562     0A51                     u3995:
  5563     0A51  1003               	clrc
  5564     0A52  0DF2               	rlf	___awdiv@divisor,f
  5565     0A53  0DF3               	rlf	___awdiv@divisor+1,f
  5566     0A54  3EFF               	addlw	-1
  5567     0A55  1D03               	skipz
  5568     0A56  2A51               	goto	u3995
  5569     0A57                     l4247:
  5570     0A57  3001               	movlw	1
  5571     0A58  07F6               	addwf	___awdiv@counter,f
  5572     0A59                     l4249:
  5573     0A59  1FF3               	btfss	___awdiv@divisor+1,7
  5574     0A5A  2A5C               	goto	u4001
  5575     0A5B  2A5D               	goto	u4000
  5576     0A5C                     u4001:
  5577     0A5C  2A50               	goto	l4245
  5578     0A5D                     u4000:
  5579     0A5D                     l4251:
  5580     0A5D  3001               	movlw	1
  5581     0A5E                     u4015:
  5582     0A5E  1003               	clrc
  5583     0A5F  0DF8               	rlf	___awdiv@quotient,f
  5584     0A60  0DF9               	rlf	___awdiv@quotient+1,f
  5585     0A61  3EFF               	addlw	-1
  5586     0A62  1D03               	skipz
  5587     0A63  2A5E               	goto	u4015
  5588     0A64  0873               	movf	___awdiv@divisor+1,w
  5589     0A65  0275               	subwf	___awdiv@dividend+1,w
  5590     0A66  1D03               	skipz
  5591     0A67  2A6A               	goto	u4025
  5592     0A68  0872               	movf	___awdiv@divisor,w
  5593     0A69  0274               	subwf	___awdiv@dividend,w
  5594     0A6A                     u4025:
  5595     0A6A  1C03               	skipc
  5596     0A6B  2A6D               	goto	u4021
  5597     0A6C  2A6E               	goto	u4020
  5598     0A6D                     u4021:
  5599     0A6D  2A75               	goto	l4257
  5600     0A6E                     u4020:
  5601     0A6E                     l4253:
  5602     0A6E  0872               	movf	___awdiv@divisor,w
  5603     0A6F  02F4               	subwf	___awdiv@dividend,f
  5604     0A70  0873               	movf	___awdiv@divisor+1,w
  5605     0A71  1C03               	skipc
  5606     0A72  03F5               	decf	___awdiv@dividend+1,f
  5607     0A73  02F5               	subwf	___awdiv@dividend+1,f
  5608     0A74                     l4255:
  5609     0A74  1478               	bsf	___awdiv@quotient,0
  5610     0A75                     l4257:
  5611     0A75  3001               	movlw	1
  5612     0A76                     u4035:
  5613     0A76  1003               	clrc
  5614     0A77  0CF3               	rrf	___awdiv@divisor+1,f
  5615     0A78  0CF2               	rrf	___awdiv@divisor,f
  5616     0A79  3EFF               	addlw	-1
  5617     0A7A  1D03               	skipz
  5618     0A7B  2A76               	goto	u4035
  5619     0A7C                     l4259:
  5620     0A7C  3001               	movlw	1
  5621     0A7D  02F6               	subwf	___awdiv@counter,f
  5622     0A7E  1D03               	btfss	3,2
  5623     0A7F  2A81               	goto	u4041
  5624     0A80  2A82               	goto	u4040
  5625     0A81                     u4041:
  5626     0A81  2A5D               	goto	l4251
  5627     0A82                     u4040:
  5628     0A82                     l4261:
  5629     0A82  0877               	movf	___awdiv@sign,w
  5630     0A83  1903               	btfsc	3,2
  5631     0A84  2A86               	goto	u4051
  5632     0A85  2A87               	goto	u4050
  5633     0A86                     u4051:
  5634     0A86  2A8C               	goto	l4265
  5635     0A87                     u4050:
  5636     0A87                     l4263:
  5637     0A87  09F8               	comf	___awdiv@quotient,f
  5638     0A88  09F9               	comf	___awdiv@quotient+1,f
  5639     0A89  0AF8               	incf	___awdiv@quotient,f
  5640     0A8A  1903               	skipnz
  5641     0A8B  0AF9               	incf	___awdiv@quotient+1,f
  5642     0A8C                     l4265:
  5643     0A8C  0879               	movf	___awdiv@quotient+1,w
  5644     0A8D  00F3               	movwf	?___awdiv+1
  5645     0A8E  0878               	movf	___awdiv@quotient,w
  5646     0A8F  00F2               	movwf	?___awdiv
  5647     0A90                     l821:
  5648     0A90  0008               	return
  5649     0A91                     __end_of___awdiv:
  5650                           
  5651                           	psect	text10
  5652     17A3                     __ptext10:	
  5653 ;; *************** function _log_car_event *****************
  5654 ;; Defined at:
  5655 ;;		line 75 in file "cbb.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  event           1   11[BANK0 ] PTR unsigned char 
  5658 ;;		 -> main@event(3), 
  5659 ;;  speed           2   12[BANK0 ] unsigned short 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5671 ;;      Params:         0       3       0       0       0
  5672 ;;      Locals:         0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0
  5674 ;;      Totals:         0       3       0       0       0
  5675 ;;Total ram usage:        3 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 6
  5678 ;; This function calls:
  5679 ;;		___lwdiv
  5680 ;;		___lwmod
  5681 ;;		_get_time
  5682 ;;		_log_event
  5683 ;;		_strncpy
  5684 ;; This function is called by:
  5685 ;;		_main
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689     17A3                     _log_car_event:	
  5690                           ;psect for function _log_car_event
  5691                           
  5692     17A3                     l4367:	
  5693                           ;incstack = 0
  5694                           ; Regs used in _log_car_event: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5695                           
  5696                           
  5697                           ;cbb.c: 75: void log_car_event (char *event ,unsigned short speed);cbb.c: 76: {;cbb.c: 7
      +                          8:     get_time(clock_reg);
  5698     17A3  305E               	movlw	(low (_clock_reg| 0))& (0+255)
  5699     17A4  1283               	bcf	3,5	;RP0=0, select bank0
  5700     17A5  1303               	bcf	3,6	;RP1=0, select bank0
  5701     17A6  00A9               	movwf	get_time@clock_reg
  5702     17A7  120A  158A  22F7  160A  118A  	fcall	_get_time
  5703     17AC                     l4369:
  5704                           
  5705                           ;cbb.c: 79:     log[0] = pos + '0';
  5706     17AC  1283               	bcf	3,5	;RP0=0, select bank0
  5707     17AD  1303               	bcf	3,6	;RP1=0, select bank0
  5708     17AE  084E               	movf	_pos,w
  5709     17AF  3E30               	addlw	48
  5710     17B0  1683               	bsf	3,5	;RP0=1, select bank1
  5711     17B1  1303               	bcf	3,6	;RP1=0, select bank1
  5712     17B2  00BE               	movwf	_log^(0+128)
  5713     17B3                     l4371:
  5714                           
  5715                           ;cbb.c: 80:     strncpy(&log[1],time,6);
  5716     17B3  30BF               	movlw	(low ((_log| 0+1)))& (0+255)
  5717     17B4  00F2               	movwf	strncpy@d
  5718     17B5  304F               	movlw	(low (_time| 0))& (0+255)
  5719     17B6  00F3               	movwf	strncpy@s
  5720     17B7  3006               	movlw	6
  5721     17B8  00F4               	movwf	strncpy@n
  5722     17B9  3000               	movlw	0
  5723     17BA  00F5               	movwf	strncpy@n+1
  5724     17BB  160A  118A  255E  160A  118A  	fcall	_strncpy
  5725     17C0                     l4373:
  5726                           
  5727                           ;cbb.c: 81:     strncpy(&log[7],event,2);
  5728     17C0  30C5               	movlw	(low ((_log| 0+7)))& (0+255)
  5729     17C1  00F2               	movwf	strncpy@d
  5730     17C2  1283               	bcf	3,5	;RP0=0, select bank0
  5731     17C3  1303               	bcf	3,6	;RP1=0, select bank0
  5732     17C4  082B               	movf	log_car_event@event,w
  5733     17C5  00F3               	movwf	strncpy@s
  5734     17C6  3002               	movlw	2
  5735     17C7  00F4               	movwf	strncpy@n
  5736     17C8  3000               	movlw	0
  5737     17C9  00F5               	movwf	strncpy@n+1
  5738     17CA  160A  118A  255E  160A  118A  	fcall	_strncpy
  5739     17CF                     l4375:
  5740                           
  5741                           ;cbb.c: 83:     log[9] = speed/10 + '0';
  5742     17CF  300A               	movlw	10
  5743     17D0  1283               	bcf	3,5	;RP0=0, select bank0
  5744     17D1  1303               	bcf	3,6	;RP1=0, select bank0
  5745     17D2  00A0               	movwf	___lwdiv@divisor
  5746     17D3  3000               	movlw	0
  5747     17D4  00A1               	movwf	___lwdiv@divisor+1
  5748     17D5  082D               	movf	log_car_event@speed+1,w
  5749     17D6  00A3               	movwf	___lwdiv@dividend+1
  5750     17D7  082C               	movf	log_car_event@speed,w
  5751     17D8  00A2               	movwf	___lwdiv@dividend
  5752     17D9  160A  118A  25CC  160A  118A  	fcall	___lwdiv
  5753     17DE  1283               	bcf	3,5	;RP0=0, select bank0
  5754     17DF  1303               	bcf	3,6	;RP1=0, select bank0
  5755     17E0  0820               	movf	?___lwdiv,w
  5756     17E1  3E30               	addlw	48
  5757     17E2  1683               	bsf	3,5	;RP0=1, select bank1
  5758     17E3  1303               	bcf	3,6	;RP1=0, select bank1
  5759     17E4  00C7               	movwf	(_log^(0+128)+9)
  5760     17E5                     l4377:
  5761                           
  5762                           ;cbb.c: 84:     log[10] = speed %10 + '0';
  5763     17E5  300A               	movlw	10
  5764     17E6  00F2               	movwf	___lwmod@divisor
  5765     17E7  3000               	movlw	0
  5766     17E8  00F3               	movwf	___lwmod@divisor+1
  5767     17E9  1283               	bcf	3,5	;RP0=0, select bank0
  5768     17EA  1303               	bcf	3,6	;RP1=0, select bank0
  5769     17EB  082D               	movf	log_car_event@speed+1,w
  5770     17EC  00F5               	movwf	___lwmod@dividend+1
  5771     17ED  082C               	movf	log_car_event@speed,w
  5772     17EE  00F4               	movwf	___lwmod@dividend
  5773     17EF  160A  118A  2594  160A  118A  	fcall	___lwmod
  5774     17F4  0872               	movf	?___lwmod,w
  5775     17F5  3E30               	addlw	48
  5776     17F6  1683               	bsf	3,5	;RP0=1, select bank1
  5777     17F7  1303               	bcf	3,6	;RP1=0, select bank1
  5778     17F8  00C8               	movwf	(_log^(0+128)+10)
  5779     17F9                     l4379:
  5780                           
  5781                           ;cbb.c: 85:     log[11] = '\0';
  5782     17F9  01C9               	clrf	(_log^(0+128)+11)
  5783     17FA                     l4381:
  5784                           
  5785                           ;cbb.c: 87:     log_event();
  5786     17FA  160A  118A  2385  160A  118A  	fcall	_log_event
  5787     17FF                     l173:
  5788     17FF  0008               	return
  5789     1800                     __end_of_log_car_event:
  5790                           
  5791                           	psect	text11
  5792     155E                     __ptext11:	
  5793 ;; *************** function _strncpy *****************
  5794 ;; Defined at:
  5795 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncpy.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  d               1    2[COMMON] PTR unsigned char 
  5798 ;;		 -> log(12), 
  5799 ;;  s               1    3[COMMON] PTR const unsigned char 
  5800 ;;		 -> time(7), main@event(3), 
  5801 ;;  n               2    4[COMMON] unsigned int 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  cp              1    6[COMMON] PTR unsigned char 
  5804 ;;		 -> log(12), 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1    2[COMMON] PTR unsigned char 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5814 ;;      Params:         4       0       0       0       0
  5815 ;;      Locals:         1       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0
  5817 ;;      Totals:         5       0       0       0       0
  5818 ;;Total ram usage:        5 bytes
  5819 ;; Hardware stack levels used: 1
  5820 ;; Hardware stack levels required when called: 1
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_log_car_event
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828     155E                     _strncpy:	
  5829                           ;psect for function _strncpy
  5830                           
  5831     155E                     l4091:	
  5832                           ;incstack = 0
  5833                           ; Regs used in _strncpy: [wreg-fsr0h+status,2+status,0+btemp+1]
  5834                           
  5835     155E  0872               	movf	strncpy@d,w
  5836     155F  00F6               	movwf	strncpy@cp
  5837     1560  2D78               	goto	l4099
  5838     1561                     l4093:
  5839     1561  3001               	movlw	1
  5840     1562  02F4               	subwf	strncpy@n,f
  5841     1563  3000               	movlw	0
  5842     1564  1C03               	skipc
  5843     1565  03F5               	decf	strncpy@n+1,f
  5844     1566  02F5               	subwf	strncpy@n+1,f
  5845     1567                     l4095:
  5846     1567  0873               	movf	strncpy@s,w
  5847     1568  0AF3               	incf	strncpy@s,f
  5848     1569  0084               	movwf	4
  5849     156A  1383               	bcf	3,7	;select IRP bank0
  5850     156B  0800               	movf	0,w
  5851     156C  00FF               	movwf	btemp+1
  5852     156D  0876               	movf	strncpy@cp,w
  5853     156E  0AF6               	incf	strncpy@cp,f
  5854     156F  0084               	movwf	4
  5855     1570  087F               	movf	btemp+1,w
  5856     1571  0080               	movwf	0
  5857     1572  0800               	movf	0,w
  5858     1573  1D03               	btfss	3,2
  5859     1574  2D76               	goto	u3781
  5860     1575  2D77               	goto	u3780
  5861     1576                     u3781:
  5862     1576  2D78               	goto	l4099
  5863     1577                     u3780:
  5864     1577  2D85               	goto	l4105
  5865     1578                     l4099:
  5866     1578  0874               	movf	strncpy@n,w
  5867     1579  0475               	iorwf	strncpy@n+1,w
  5868     157A  1D03               	btfss	3,2
  5869     157B  2D7D               	goto	u3791
  5870     157C  2D7E               	goto	u3790
  5871     157D                     u3791:
  5872     157D  2D61               	goto	l4093
  5873     157E                     u3790:
  5874     157E  2D85               	goto	l4105
  5875     157F                     l4101:
  5876     157F  0876               	movf	strncpy@cp,w
  5877     1580  0084               	movwf	4
  5878     1581  1383               	bcf	3,7	;select IRP bank0
  5879     1582  0180               	clrf	0
  5880     1583                     l4103:
  5881     1583  3001               	movlw	1
  5882     1584  07F6               	addwf	strncpy@cp,f
  5883     1585                     l4105:
  5884     1585  3001               	movlw	1
  5885     1586  02F4               	subwf	strncpy@n,f
  5886     1587  3000               	movlw	0
  5887     1588  1C03               	skipc
  5888     1589  03F5               	decf	strncpy@n+1,f
  5889     158A  02F5               	subwf	strncpy@n+1,f
  5890     158B  0A74               	incf	strncpy@n,w
  5891     158C  1D03               	skipz
  5892     158D  2D92               	goto	u3801
  5893     158E  0A75               	incf	strncpy@n+1,w
  5894     158F  1D03               	btfss	3,2
  5895     1590  2D92               	goto	u3801
  5896     1591  2D93               	goto	u3800
  5897     1592                     u3801:
  5898     1592  2D7F               	goto	l4101
  5899     1593                     u3800:
  5900     1593                     l1149:
  5901     1593  0008               	return
  5902     1594                     __end_of_strncpy:
  5903                           
  5904                           	psect	text12
  5905     1385                     __ptext12:	
  5906 ;; *************** function _log_event *****************
  5907 ;; Defined at:
  5908 ;;		line 67 in file "cbb.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  addr            1    7[COMMON] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       0       0       0       0
  5923 ;;      Locals:         1       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0
  5925 ;;      Totals:         1       0       0       0       0
  5926 ;;Total ram usage:        1 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 5
  5929 ;; This function calls:
  5930 ;;		___bmul
  5931 ;;		_ext_eeprom_24C02_str_write
  5932 ;; This function is called by:
  5933 ;;		_log_car_event
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937     1385                     _log_event:	
  5938                           ;psect for function _log_event
  5939                           
  5940     1385                     l4083:	
  5941                           ;incstack = 0
  5942                           ; Regs used in _log_event: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5943                           
  5944                           
  5945                           ;cbb.c: 69:     unsigned char addr;;cbb.c: 70:     addr = pos * 11 + 5;
  5946     1385  300B               	movlw	11
  5947     1386  00F2               	movwf	___bmul@multiplicand
  5948     1387  1283               	bcf	3,5	;RP0=0, select bank0
  5949     1388  1303               	bcf	3,6	;RP1=0, select bank0
  5950     1389  084E               	movf	_pos,w
  5951     138A  160A  118A  22BB  160A  118A  	fcall	___bmul
  5952     138F  3E05               	addlw	5
  5953     1390  00F7               	movwf	log_event@addr
  5954     1391                     l4085:
  5955                           
  5956                           ;cbb.c: 71:     if(++pos == 10)
  5957     1391  3001               	movlw	1
  5958     1392  1283               	bcf	3,5	;RP0=0, select bank0
  5959     1393  1303               	bcf	3,6	;RP1=0, select bank0
  5960     1394  07CE               	addwf	_pos,f
  5961     1395  300A               	movlw	10
  5962     1396  064E               	xorwf	_pos,w
  5963     1397  1D03               	btfss	3,2
  5964     1398  2B9A               	goto	u3771
  5965     1399  2B9B               	goto	u3770
  5966     139A                     u3771:
  5967     139A  2B9C               	goto	l4089
  5968     139B                     u3770:
  5969     139B                     l4087:
  5970                           
  5971                           ;cbb.c: 72:         pos = 0;
  5972     139B  01CE               	clrf	_pos
  5973     139C                     l4089:
  5974                           
  5975                           ;cbb.c: 73:     ext_eeprom_24C02_str_write(addr, &log);
  5976     139C  30BE               	movlw	(low (_log| 0))& (0+255)
  5977     139D  00F5               	movwf	ext_eeprom_24C02_str_write@str
  5978     139E  0877               	movf	log_event@addr,w
  5979     139F  160A  118A  22F6  160A  118A  	fcall	_ext_eeprom_24C02_str_write
  5980     13A4                     l170:
  5981     13A4  0008               	return
  5982     13A5                     __end_of_log_event:
  5983                           
  5984                           	psect	text13
  5985     12BB                     __ptext13:	
  5986 ;; *************** function ___bmul *****************
  5987 ;; Defined at:
  5988 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  multiplier      1    wreg     unsigned char 
  5991 ;;  multiplicand    1    2[COMMON] unsigned char 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  multiplier      1    4[COMMON] unsigned char 
  5994 ;;  product         1    3[COMMON] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      unsigned char 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6004 ;;      Params:         1       0       0       0       0
  6005 ;;      Locals:         2       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0
  6007 ;;      Totals:         3       0       0       0       0
  6008 ;;Total ram usage:        3 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_log_event
  6015 ;;		_view_log
  6016 ;;		_set_time
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020     12BB                     ___bmul:	
  6021                           ;psect for function ___bmul
  6022                           
  6023                           
  6024                           ;incstack = 0
  6025                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6026                           ;___bmul@multiplier stored from wreg
  6027     12BB  00F4               	movwf	___bmul@multiplier
  6028     12BC                     l3987:
  6029     12BC  01F3               	clrf	___bmul@product
  6030     12BD                     l3989:
  6031     12BD  1C74               	btfss	___bmul@multiplier,0
  6032     12BE  2AC0               	goto	u3631
  6033     12BF  2AC1               	goto	u3630
  6034     12C0                     u3631:
  6035     12C0  2AC3               	goto	l3993
  6036     12C1                     u3630:
  6037     12C1                     l3991:
  6038     12C1  0872               	movf	___bmul@multiplicand,w
  6039     12C2  07F3               	addwf	___bmul@product,f
  6040     12C3                     l3993:
  6041     12C3  1003               	clrc
  6042     12C4  0DF2               	rlf	___bmul@multiplicand,f
  6043     12C5                     l3995:
  6044     12C5  1003               	clrc
  6045     12C6  0CF4               	rrf	___bmul@multiplier,f
  6046     12C7  0874               	movf	___bmul@multiplier,w
  6047     12C8  1D03               	btfss	3,2
  6048     12C9  2ACB               	goto	u3641
  6049     12CA  2ACC               	goto	u3640
  6050     12CB                     u3641:
  6051     12CB  2ABD               	goto	l3989
  6052     12CC                     u3640:
  6053     12CC                     l3997:
  6054     12CC  0873               	movf	___bmul@product,w
  6055     12CD                     l694:
  6056     12CD  0008               	return
  6057     12CE                     __end_of___bmul:
  6058                           
  6059                           	psect	text14
  6060     14F3                     __ptext14:	
  6061 ;; *************** function _init_config *****************
  6062 ;; Defined at:
  6063 ;;		line 29 in file "main.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0, pclath, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 4
  6084 ;; This function calls:
  6085 ;;		_init_adc
  6086 ;;		_init_clcd
  6087 ;;		_init_digital_keypad
  6088 ;;		_init_i2c
  6089 ;;		_init_timer2
  6090 ;;		_init_uart
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096     14F3                     _init_config:	
  6097                           ;psect for function _init_config
  6098                           
  6099     14F3                     l4355:	
  6100                           ;incstack = 0
  6101                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  6102                           
  6103                           
  6104                           ;main.c: 32: 
  6105     14F3  160A  118A  22A3  160A  118A  	fcall	_init_clcd
  6106                           
  6107                           ;main.c: 33: 
  6108     14F8  120A  118A  27FA  160A  118A  	fcall	_init_digital_keypad
  6109     14FD                     l4357:
  6110                           
  6111                           ;main.c: 35: 
  6112     14FD  160A  118A  224F  160A  118A  	fcall	_init_adc
  6113     1502                     l4359:
  6114                           
  6115                           ;main.c: 36: log_car_event(event,speed);
  6116     1502  3000               	movlw	0
  6117     1503  1283               	bcf	3,5	;RP0=0, select bank0
  6118     1504  1303               	bcf	3,6	;RP1=0, select bank0
  6119     1505  00A9               	movwf	init_i2c@baud+3
  6120     1506  3001               	movlw	1
  6121     1507  00A8               	movwf	init_i2c@baud+2
  6122     1508  3086               	movlw	134
  6123     1509  00A7               	movwf	init_i2c@baud+1
  6124     150A  30A0               	movlw	160
  6125     150B  00A6               	movwf	init_i2c@baud
  6126     150C  160A  118A  24C1  160A  118A  	fcall	_init_i2c
  6127                           
  6128                           ;main.c: 37: 
  6129     1511  160A  118A  2278  160A  118A  	fcall	_init_timer2
  6130     1516                     l4361:
  6131                           
  6132                           ;main.c: 39: while (1)
  6133     1516  3000               	movlw	0
  6134     1517  1283               	bcf	3,5	;RP0=0, select bank0
  6135     1518  1303               	bcf	3,6	;RP1=0, select bank0
  6136     1519  00A9               	movwf	init_uart@baud+3
  6137     151A  3000               	movlw	0
  6138     151B  00A8               	movwf	init_uart@baud+2
  6139     151C  3025               	movlw	37
  6140     151D  00A7               	movwf	init_uart@baud+1
  6141     151E  3080               	movlw	128
  6142     151F  00A6               	movwf	init_uart@baud
  6143     1520  160A  118A  2490  160A  118A  	fcall	_init_uart
  6144     1525                     l4363:
  6145                           
  6146                           ;main.c: 41: 
  6147     1525  170B               	bsf	11,6	;volatile
  6148     1526                     l4365:
  6149                           
  6150                           ;main.c: 42:         speed = (unsigned char)(read_adc(0x00) / 10);
  6151     1526  178B               	bsf	11,7	;volatile
  6152     1527                     l55:
  6153     1527  0008               	return
  6154     1528                     __end_of_init_config:
  6155                           
  6156                           	psect	text15
  6157     1490                     __ptext15:	
  6158 ;; *************** function _init_uart *****************
  6159 ;; Defined at:
  6160 ;;		line 4 in file "uart.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  baud            4    6[BANK0 ] unsigned long 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6174 ;;      Params:         0       4       0       0       0
  6175 ;;      Locals:         0       0       0       0       0
  6176 ;;      Temps:          0       4       0       0       0
  6177 ;;      Totals:         0       8       0       0       0
  6178 ;;Total ram usage:        8 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 2
  6181 ;; This function calls:
  6182 ;;		___lldiv
  6183 ;; This function is called by:
  6184 ;;		_init_config
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188     1490                     _init_uart:	
  6189                           ;psect for function _init_uart
  6190                           
  6191     1490                     l4045:	
  6192                           ;incstack = 0
  6193                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
  6194                           
  6195                           
  6196                           ;uart.c: 4: void init_uart(unsigned long baud);uart.c: 5: {;uart.c: 7:     SPEN = 1;
  6197     1490  1283               	bcf	3,5	;RP0=0, select bank0
  6198     1491  1303               	bcf	3,6	;RP1=0, select bank0
  6199     1492  1798               	bsf	24,7	;volatile
  6200                           
  6201                           ;uart.c: 10:     CREN = 1;
  6202     1493  1618               	bsf	24,4	;volatile
  6203     1494                     l4047:
  6204                           
  6205                           ;uart.c: 13:     SPBRG = (20000000 / (16 * baud)) - 1;
  6206     1494  0826               	movf	init_uart@baud,w
  6207     1495  00AA               	movwf	??_init_uart
  6208     1496  0827               	movf	init_uart@baud+1,w
  6209     1497  00AB               	movwf	??_init_uart+1
  6210     1498  0828               	movf	init_uart@baud+2,w
  6211     1499  00AC               	movwf	??_init_uart+2
  6212     149A  0829               	movf	init_uart@baud+3,w
  6213     149B  00AD               	movwf	??_init_uart+3
  6214     149C  3004               	movlw	4
  6215     149D                     u3735:
  6216     149D  1003               	clrc
  6217     149E  0DAA               	rlf	??_init_uart,f
  6218     149F  0DAB               	rlf	??_init_uart+1,f
  6219     14A0  0DAC               	rlf	??_init_uart+2,f
  6220     14A1  0DAD               	rlf	??_init_uart+3,f
  6221     14A2                     u3730:
  6222     14A2  3EFF               	addlw	-1
  6223     14A3  1D03               	skipz
  6224     14A4  2C9D               	goto	u3735
  6225     14A5  082D               	movf	??_init_uart+3,w
  6226     14A6  00F5               	movwf	___lldiv@divisor+3
  6227     14A7  082C               	movf	??_init_uart+2,w
  6228     14A8  00F4               	movwf	___lldiv@divisor+2
  6229     14A9  082B               	movf	??_init_uart+1,w
  6230     14AA  00F3               	movwf	___lldiv@divisor+1
  6231     14AB  082A               	movf	??_init_uart,w
  6232     14AC  00F2               	movwf	___lldiv@divisor
  6233     14AD  3001               	movlw	1
  6234     14AE  00F9               	movwf	___lldiv@dividend+3
  6235     14AF  3031               	movlw	49
  6236     14B0  00F8               	movwf	___lldiv@dividend+2
  6237     14B1  302D               	movlw	45
  6238     14B2  00F7               	movwf	___lldiv@dividend+1
  6239     14B3  3000               	movlw	0
  6240     14B4  00F6               	movwf	___lldiv@dividend
  6241     14B5  120A  158A  2291  160A  118A  	fcall	___lldiv
  6242     14BA  0872               	movf	?___lldiv,w
  6243     14BB  3EFF               	addlw	255
  6244     14BC  1683               	bsf	3,5	;RP0=1, select bank1
  6245     14BD  1303               	bcf	3,6	;RP1=0, select bank1
  6246     14BE  0099               	movwf	25	;volatile
  6247     14BF                     l4049:
  6248                           
  6249                           ;uart.c: 16:     RCIE = 1;
  6250     14BF  168C               	bsf	12,5	;volatile
  6251     14C0                     l564:
  6252     14C0  0008               	return
  6253     14C1                     __end_of_init_uart:
  6254                           
  6255                           	psect	text16
  6256     1278                     __ptext16:	
  6257 ;; *************** function _init_timer2 *****************
  6258 ;; Defined at:
  6259 ;;		line 17 in file "timers.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		None
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6273 ;;      Params:         0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_init_config
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287     1278                     _init_timer2:	
  6288                           ;psect for function _init_timer2
  6289                           
  6290     1278                     l4043:	
  6291                           ;incstack = 0
  6292                           ; Regs used in _init_timer2: []
  6293                           
  6294                           
  6295                           ;timers.c: 20:     T2CKPS0 = 0;
  6296     1278  1283               	bcf	3,5	;RP0=0, select bank0
  6297     1279  1303               	bcf	3,6	;RP1=0, select bank0
  6298     127A  1012               	bcf	18,0	;volatile
  6299                           
  6300                           ;timers.c: 21:     T2CKPS1 = 0;
  6301     127B  1092               	bcf	18,1	;volatile
  6302                           
  6303                           ;timers.c: 24:     PR2 = 250;
  6304     127C  30FA               	movlw	250
  6305     127D  1683               	bsf	3,5	;RP0=1, select bank1
  6306     127E  1303               	bcf	3,6	;RP1=0, select bank1
  6307     127F  0092               	movwf	18	;volatile
  6308                           
  6309                           ;timers.c: 27:     TMR2IE = 1;
  6310     1280  148C               	bsf	12,1	;volatile
  6311     1281                     l545:
  6312     1281  0008               	return
  6313     1282                     __end_of_init_timer2:
  6314                           
  6315                           	psect	text17
  6316     14C1                     __ptext17:	
  6317 ;; *************** function _init_i2c *****************
  6318 ;; Defined at:
  6319 ;;		line 4 in file "i2c.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;  baud            4    6[BANK0 ] unsigned long 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, pclath, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6333 ;;      Params:         0       4       0       0       0
  6334 ;;      Locals:         0       0       0       0       0
  6335 ;;      Temps:          0       4       0       0       0
  6336 ;;      Totals:         0       8       0       0       0
  6337 ;;Total ram usage:        8 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 2
  6340 ;; This function calls:
  6341 ;;		___lldiv
  6342 ;; This function is called by:
  6343 ;;		_init_config
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347     14C1                     _init_i2c:	
  6348                           ;psect for function _init_i2c
  6349                           
  6350     14C1                     l4037:	
  6351                           ;incstack = 0
  6352                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
  6353                           
  6354                           
  6355                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
  6356     14C1  1283               	bcf	3,5	;RP0=0, select bank0
  6357     14C2  1303               	bcf	3,6	;RP1=0, select bank0
  6358     14C3  1594               	bsf	20,3	;volatile
  6359     14C4                     l4039:
  6360                           
  6361                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
  6362     14C4  0826               	movf	init_i2c@baud,w
  6363     14C5  00AA               	movwf	??_init_i2c
  6364     14C6  0827               	movf	init_i2c@baud+1,w
  6365     14C7  00AB               	movwf	??_init_i2c+1
  6366     14C8  0828               	movf	init_i2c@baud+2,w
  6367     14C9  00AC               	movwf	??_init_i2c+2
  6368     14CA  0829               	movf	init_i2c@baud+3,w
  6369     14CB  00AD               	movwf	??_init_i2c+3
  6370     14CC  3002               	movlw	2
  6371     14CD                     u3725:
  6372     14CD  1003               	clrc
  6373     14CE  0DAA               	rlf	??_init_i2c,f
  6374     14CF  0DAB               	rlf	??_init_i2c+1,f
  6375     14D0  0DAC               	rlf	??_init_i2c+2,f
  6376     14D1  0DAD               	rlf	??_init_i2c+3,f
  6377     14D2                     u3720:
  6378     14D2  3EFF               	addlw	-1
  6379     14D3  1D03               	skipz
  6380     14D4  2CCD               	goto	u3725
  6381     14D5  082D               	movf	??_init_i2c+3,w
  6382     14D6  00F5               	movwf	___lldiv@divisor+3
  6383     14D7  082C               	movf	??_init_i2c+2,w
  6384     14D8  00F4               	movwf	___lldiv@divisor+2
  6385     14D9  082B               	movf	??_init_i2c+1,w
  6386     14DA  00F3               	movwf	___lldiv@divisor+1
  6387     14DB  082A               	movf	??_init_i2c,w
  6388     14DC  00F2               	movwf	___lldiv@divisor
  6389     14DD  3001               	movlw	1
  6390     14DE  00F9               	movwf	___lldiv@dividend+3
  6391     14DF  3031               	movlw	49
  6392     14E0  00F8               	movwf	___lldiv@dividend+2
  6393     14E1  302D               	movlw	45
  6394     14E2  00F7               	movwf	___lldiv@dividend+1
  6395     14E3  3000               	movlw	0
  6396     14E4  00F6               	movwf	___lldiv@dividend
  6397     14E5  120A  158A  2291  160A  118A  	fcall	___lldiv
  6398     14EA  0872               	movf	?___lldiv,w
  6399     14EB  3EFF               	addlw	255
  6400     14EC  1683               	bsf	3,5	;RP0=1, select bank1
  6401     14ED  1303               	bcf	3,6	;RP1=0, select bank1
  6402     14EE  0093               	movwf	19	;volatile
  6403     14EF                     l4041:
  6404                           
  6405                           ;i2c.c: 13:     SSPEN = 1;
  6406     14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6407     14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6408     14F1  1694               	bsf	20,5	;volatile
  6409     14F2                     l429:
  6410     14F2  0008               	return
  6411     14F3                     __end_of_init_i2c:
  6412                           
  6413                           	psect	text18
  6414     0A91                     __ptext18:	
  6415 ;; *************** function ___lldiv *****************
  6416 ;; Defined at:
  6417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  divisor         4    2[COMMON] unsigned long 
  6420 ;;  dividend        4    6[COMMON] unsigned long 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  quotient        4    1[BANK0 ] unsigned long 
  6423 ;;  counter         1    5[BANK0 ] unsigned char 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  4    2[COMMON] unsigned long 
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6433 ;;      Params:         8       0       0       0       0
  6434 ;;      Locals:         0       5       0       0       0
  6435 ;;      Temps:          0       1       0       0       0
  6436 ;;      Totals:         8       6       0       0       0
  6437 ;;Total ram usage:       14 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 1
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_init_i2c
  6444 ;;		_init_uart
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448     0A91                     ___lldiv:	
  6449                           ;psect for function ___lldiv
  6450                           
  6451     0A91                     l4001:	
  6452                           ;incstack = 0
  6453                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6454                           
  6455     0A91  3000               	movlw	0
  6456     0A92  1283               	bcf	3,5	;RP0=0, select bank0
  6457     0A93  1303               	bcf	3,6	;RP1=0, select bank0
  6458     0A94  00A4               	movwf	___lldiv@quotient+3
  6459     0A95  3000               	movlw	0
  6460     0A96  00A3               	movwf	___lldiv@quotient+2
  6461     0A97  3000               	movlw	0
  6462     0A98  00A2               	movwf	___lldiv@quotient+1
  6463     0A99  3000               	movlw	0
  6464     0A9A  00A1               	movwf	___lldiv@quotient
  6465     0A9B  0875               	movf	___lldiv@divisor+3,w
  6466     0A9C  0474               	iorwf	___lldiv@divisor+2,w
  6467     0A9D  0473               	iorwf	___lldiv@divisor+1,w
  6468     0A9E  0472               	iorwf	___lldiv@divisor,w
  6469     0A9F  1903               	skipnz
  6470     0AA0  2AA2               	goto	u3651
  6471     0AA1  2AA3               	goto	u3650
  6472     0AA2                     u3651:
  6473     0AA2  2AEE               	goto	l4021
  6474     0AA3                     u3650:
  6475     0AA3                     l4003:
  6476     0AA3  3001               	movlw	1
  6477     0AA4  00A5               	movwf	___lldiv@counter
  6478     0AA5  2AB1               	goto	l4007
  6479     0AA6                     l4005:
  6480     0AA6  3001               	movlw	1
  6481     0AA7  00A0               	movwf	??___lldiv
  6482     0AA8                     u3665:
  6483     0AA8  1003               	clrc
  6484     0AA9  0DF2               	rlf	___lldiv@divisor,f
  6485     0AAA  0DF3               	rlf	___lldiv@divisor+1,f
  6486     0AAB  0DF4               	rlf	___lldiv@divisor+2,f
  6487     0AAC  0DF5               	rlf	___lldiv@divisor+3,f
  6488     0AAD  0BA0               	decfsz	??___lldiv,f
  6489     0AAE  2AA8               	goto	u3665
  6490     0AAF  3001               	movlw	1
  6491     0AB0  07A5               	addwf	___lldiv@counter,f
  6492     0AB1                     l4007:
  6493     0AB1  1FF5               	btfss	___lldiv@divisor+3,7
  6494     0AB2  2AB4               	goto	u3671
  6495     0AB3  2AB5               	goto	u3670
  6496     0AB4                     u3671:
  6497     0AB4  2AA6               	goto	l4005
  6498     0AB5                     u3670:
  6499     0AB5                     l4009:
  6500     0AB5  3001               	movlw	1
  6501     0AB6  00A0               	movwf	??___lldiv
  6502     0AB7                     u3685:
  6503     0AB7  1003               	clrc
  6504     0AB8  0DA1               	rlf	___lldiv@quotient,f
  6505     0AB9  0DA2               	rlf	___lldiv@quotient+1,f
  6506     0ABA  0DA3               	rlf	___lldiv@quotient+2,f
  6507     0ABB  0DA4               	rlf	___lldiv@quotient+3,f
  6508     0ABC  0BA0               	decfsz	??___lldiv,f
  6509     0ABD  2AB7               	goto	u3685
  6510     0ABE                     l4011:
  6511     0ABE  0875               	movf	___lldiv@divisor+3,w
  6512     0ABF  0279               	subwf	___lldiv@dividend+3,w
  6513     0AC0  1D03               	skipz
  6514     0AC1  2ACC               	goto	u3695
  6515     0AC2  0874               	movf	___lldiv@divisor+2,w
  6516     0AC3  0278               	subwf	___lldiv@dividend+2,w
  6517     0AC4  1D03               	skipz
  6518     0AC5  2ACC               	goto	u3695
  6519     0AC6  0873               	movf	___lldiv@divisor+1,w
  6520     0AC7  0277               	subwf	___lldiv@dividend+1,w
  6521     0AC8  1D03               	skipz
  6522     0AC9  2ACC               	goto	u3695
  6523     0ACA  0872               	movf	___lldiv@divisor,w
  6524     0ACB  0276               	subwf	___lldiv@dividend,w
  6525     0ACC                     u3695:
  6526     0ACC  1C03               	skipc
  6527     0ACD  2ACF               	goto	u3691
  6528     0ACE  2AD0               	goto	u3690
  6529     0ACF                     u3691:
  6530     0ACF  2ADF               	goto	l4017
  6531     0AD0                     u3690:
  6532     0AD0                     l4013:
  6533     0AD0  0872               	movf	___lldiv@divisor,w
  6534     0AD1  02F6               	subwf	___lldiv@dividend,f
  6535     0AD2  0873               	movf	___lldiv@divisor+1,w
  6536     0AD3  1C03               	skipc
  6537     0AD4  0F73               	incfsz	___lldiv@divisor+1,w
  6538     0AD5  02F7               	subwf	___lldiv@dividend+1,f
  6539     0AD6  0874               	movf	___lldiv@divisor+2,w
  6540     0AD7  1C03               	skipc
  6541     0AD8  0F74               	incfsz	___lldiv@divisor+2,w
  6542     0AD9  02F8               	subwf	___lldiv@dividend+2,f
  6543     0ADA  0875               	movf	___lldiv@divisor+3,w
  6544     0ADB  1C03               	skipc
  6545     0ADC  0F75               	incfsz	___lldiv@divisor+3,w
  6546     0ADD  02F9               	subwf	___lldiv@dividend+3,f
  6547     0ADE                     l4015:
  6548     0ADE  1421               	bsf	___lldiv@quotient,0
  6549     0ADF                     l4017:
  6550     0ADF  3001               	movlw	1
  6551     0AE0                     u3705:
  6552     0AE0  1003               	clrc
  6553     0AE1  0CF5               	rrf	___lldiv@divisor+3,f
  6554     0AE2  0CF4               	rrf	___lldiv@divisor+2,f
  6555     0AE3  0CF3               	rrf	___lldiv@divisor+1,f
  6556     0AE4  0CF2               	rrf	___lldiv@divisor,f
  6557     0AE5  3EFF               	addlw	-1
  6558     0AE6  1D03               	skipz
  6559     0AE7  2AE0               	goto	u3705
  6560     0AE8                     l4019:
  6561     0AE8  3001               	movlw	1
  6562     0AE9  02A5               	subwf	___lldiv@counter,f
  6563     0AEA  1D03               	btfss	3,2
  6564     0AEB  2AED               	goto	u3711
  6565     0AEC  2AEE               	goto	u3710
  6566     0AED                     u3711:
  6567     0AED  2AB5               	goto	l4009
  6568     0AEE                     u3710:
  6569     0AEE                     l4021:
  6570     0AEE  0824               	movf	___lldiv@quotient+3,w
  6571     0AEF  00F5               	movwf	?___lldiv+3
  6572     0AF0  0823               	movf	___lldiv@quotient+2,w
  6573     0AF1  00F4               	movwf	?___lldiv+2
  6574     0AF2  0822               	movf	___lldiv@quotient+1,w
  6575     0AF3  00F3               	movwf	?___lldiv+1
  6576     0AF4  0821               	movf	___lldiv@quotient,w
  6577     0AF5  00F2               	movwf	?___lldiv
  6578     0AF6                     l704:
  6579     0AF6  0008               	return
  6580     0AF7                     __end_of___lldiv:
  6581                           
  6582                           	psect	text19
  6583     07FA                     __ptext19:	
  6584 ;; *************** function _init_digital_keypad *****************
  6585 ;; Defined at:
  6586 ;;		line 4 in file "digital_keypad.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  1    wreg      void 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6600 ;;      Params:         0       0       0       0       0
  6601 ;;      Locals:         0       0       0       0       0
  6602 ;;      Temps:          0       0       0       0       0
  6603 ;;      Totals:         0       0       0       0       0
  6604 ;;Total ram usage:        0 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 1
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_init_config
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614     07FA                     _init_digital_keypad:	
  6615                           ;psect for function _init_digital_keypad
  6616                           
  6617     07FA                     l4033:	
  6618                           ;incstack = 0
  6619                           ; Regs used in _init_digital_keypad: [wreg+status,2]
  6620                           
  6621                           
  6622                           ;digital_keypad.c: 7:     TRISB = TRISB | 0x3F;
  6623     07FA  1683               	bsf	3,5	;RP0=1, select bank1
  6624     07FB  1303               	bcf	3,6	;RP1=0, select bank1
  6625     07FC  0806               	movf	6,w	;volatile
  6626     07FD  383F               	iorlw	63
  6627     07FE  0086               	movwf	6	;volatile
  6628     07FF                     l356:
  6629     07FF  0008               	return
  6630     0800                     __end_of_init_digital_keypad:
  6631                           
  6632                           	psect	text20
  6633     12A3                     __ptext20:	
  6634 ;; *************** function _init_clcd *****************
  6635 ;; Defined at:
  6636 ;;		line 44 in file "clcd.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      void 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, pclath, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6650 ;;      Params:         0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 3
  6657 ;; This function calls:
  6658 ;;		_init_display_controller
  6659 ;; This function is called by:
  6660 ;;		_init_config
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664     12A3                     _init_clcd:	
  6665                           ;psect for function _init_clcd
  6666                           
  6667     12A3                     l4025:	
  6668                           ;incstack = 0
  6669                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  6670                           
  6671                           
  6672                           ;clcd.c: 47:     TRISD = 0x00;
  6673     12A3  1683               	bsf	3,5	;RP0=1, select bank1
  6674     12A4  1303               	bcf	3,6	;RP1=0, select bank1
  6675     12A5  0188               	clrf	8	;volatile
  6676     12A6                     l4027:
  6677                           
  6678                           ;clcd.c: 50:     TRISE2 = 0;
  6679     12A6  1109               	bcf	9,2	;volatile
  6680     12A7                     l4029:
  6681                           
  6682                           ;clcd.c: 51:     TRISE1 = 0;
  6683     12A7  1089               	bcf	9,1	;volatile
  6684     12A8                     l4031:
  6685                           
  6686                           ;clcd.c: 53:     init_display_controller();
  6687     12A8  120A  158A  21CB  160A  118A  	fcall	_init_display_controller
  6688     12AD                     l475:
  6689     12AD  0008               	return
  6690     12AE                     __end_of_init_clcd:
  6691                           
  6692                           	psect	text21
  6693     09CB                     __ptext21:	
  6694 ;; *************** function _init_display_controller *****************
  6695 ;; Defined at:
  6696 ;;		line 21 in file "clcd.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      void 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6710 ;;      Params:         0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0
  6712 ;;      Temps:          2       0       0       0       0
  6713 ;;      Totals:         2       0       0       0       0
  6714 ;;Total ram usage:        2 bytes
  6715 ;; Hardware stack levels used: 1
  6716 ;; Hardware stack levels required when called: 2
  6717 ;; This function calls:
  6718 ;;		_clcd_write
  6719 ;; This function is called by:
  6720 ;;		_init_clcd
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724     09CB                     _init_display_controller:	
  6725                           ;psect for function _init_display_controller
  6726                           
  6727     09CB                     l3963:	
  6728                           ;incstack = 0
  6729                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  6730                           
  6731                           
  6732                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  6733     09CB  30C3               	movlw	195
  6734     09CC  00F7               	movwf	??_init_display_controller+1
  6735     09CD  30CD               	movlw	205
  6736     09CE  00F6               	movwf	??_init_display_controller
  6737     09CF                     u5117:
  6738     09CF  0BF6               	decfsz	??_init_display_controller,f
  6739     09D0  29CF               	goto	u5117
  6740     09D1  0BF7               	decfsz	??_init_display_controller+1,f
  6741     09D2  29CF               	goto	u5117
  6742     09D3                     l3965:
  6743                           
  6744                           ;clcd.c: 27:     clcd_write(0x33, 0);
  6745     09D3  01F2               	clrf	clcd_write@mode
  6746     09D4  3033               	movlw	51
  6747     09D5  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6748     09DA                     l3967:
  6749                           
  6750                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  6751     09DA  301B               	movlw	27
  6752     09DB  00F7               	movwf	??_init_display_controller+1
  6753     09DC  309E               	movlw	158
  6754     09DD  00F6               	movwf	??_init_display_controller
  6755     09DE                     u5127:
  6756     09DE  0BF6               	decfsz	??_init_display_controller,f
  6757     09DF  29DE               	goto	u5127
  6758     09E0  0BF7               	decfsz	??_init_display_controller+1,f
  6759     09E1  29DE               	goto	u5127
  6760     09E2  0000               	nop
  6761                           
  6762                           ;clcd.c: 29:     clcd_write(0x33, 0);
  6763     09E3  01F2               	clrf	clcd_write@mode
  6764     09E4  3033               	movlw	51
  6765     09E5  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6766     09EA                     l3969:
  6767                           
  6768                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6769     09EA  30A6               	movlw	166
  6770     09EB  00F6               	movwf	??_init_display_controller
  6771     09EC                     u5137:
  6772     09EC  0BF6               	decfsz	??_init_display_controller,f
  6773     09ED  29EC               	goto	u5137
  6774     09EE  0000               	nop
  6775     09EF                     l3971:
  6776                           
  6777                           ;clcd.c: 31:     clcd_write(0x33, 0);
  6778     09EF  01F2               	clrf	clcd_write@mode
  6779     09F0  3033               	movlw	51
  6780     09F1  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6781     09F6                     l3973:
  6782                           
  6783                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  6784     09F6  29F7               	nop2	;2 cycle nop
  6785     09F7  29F8               	nop2	;2 cycle nop
  6786     09F8  0000               	nop
  6787     09F9                     l3975:
  6788                           
  6789                           ;clcd.c: 34:     clcd_write(0x02, 0);
  6790     09F9  01F2               	clrf	clcd_write@mode
  6791     09FA  3002               	movlw	2
  6792     09FB  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6793     0A00                     l3977:
  6794                           
  6795                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6796     0A00  30A6               	movlw	166
  6797     0A01  00F6               	movwf	??_init_display_controller
  6798     0A02                     u5147:
  6799     0A02  0BF6               	decfsz	??_init_display_controller,f
  6800     0A03  2A02               	goto	u5147
  6801     0A04  0000               	nop
  6802                           
  6803                           ;clcd.c: 36:     clcd_write(0x28, 0);
  6804     0A05  01F2               	clrf	clcd_write@mode
  6805     0A06  3028               	movlw	40
  6806     0A07  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6807     0A0C                     l3979:
  6808                           
  6809                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6810     0A0C  30A6               	movlw	166
  6811     0A0D  00F6               	movwf	??_init_display_controller
  6812     0A0E                     u5157:
  6813     0A0E  0BF6               	decfsz	??_init_display_controller,f
  6814     0A0F  2A0E               	goto	u5157
  6815     0A10  0000               	nop
  6816     0A11                     l3981:
  6817                           
  6818                           ;clcd.c: 38:     clcd_write(0x01, 0);
  6819     0A11  01F2               	clrf	clcd_write@mode
  6820     0A12  3001               	movlw	1
  6821     0A13  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6822                           
  6823                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  6824     0A18  3004               	movlw	4
  6825     0A19  00F7               	movwf	??_init_display_controller+1
  6826     0A1A  303D               	movlw	61
  6827     0A1B  00F6               	movwf	??_init_display_controller
  6828     0A1C                     u5167:
  6829     0A1C  0BF6               	decfsz	??_init_display_controller,f
  6830     0A1D  2A1C               	goto	u5167
  6831     0A1E  0BF7               	decfsz	??_init_display_controller+1,f
  6832     0A1F  2A1C               	goto	u5167
  6833     0A20  2A21               	nop2
  6834     0A21                     l3983:
  6835                           
  6836                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  6837     0A21  01F2               	clrf	clcd_write@mode
  6838     0A22  300C               	movlw	12
  6839     0A23  160A  118A  2528  120A  158A  	fcall	_clcd_write
  6840     0A28                     l3985:
  6841                           
  6842                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  6843     0A28  30A6               	movlw	166
  6844     0A29  00F6               	movwf	??_init_display_controller
  6845     0A2A                     u5177:
  6846     0A2A  0BF6               	decfsz	??_init_display_controller,f
  6847     0A2B  2A2A               	goto	u5177
  6848     0A2C  0000               	nop
  6849     0A2D                     l472:
  6850     0A2D  0008               	return
  6851     0A2E                     __end_of_init_display_controller:
  6852                           
  6853                           	psect	text22
  6854     124F                     __ptext22:	
  6855 ;; *************** function _init_adc *****************
  6856 ;; Defined at:
  6857 ;;		line 3 in file "adc.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		None
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6871 ;;      Params:         0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0
  6874 ;;      Totals:         0       0       0       0       0
  6875 ;;Total ram usage:        0 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 1
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_init_config
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885     124F                     _init_adc:	
  6886                           ;psect for function _init_adc
  6887                           
  6888     124F                     l4035:	
  6889                           ;incstack = 0
  6890                           ; Regs used in _init_adc: []
  6891                           
  6892                           
  6893                           ;adc.c: 6:     ADFM = 1;
  6894     124F  1683               	bsf	3,5	;RP0=1, select bank1
  6895     1250  1303               	bcf	3,6	;RP1=0, select bank1
  6896     1251  179F               	bsf	31,7	;volatile
  6897                           
  6898                           ;adc.c: 9:     ADON = 1;
  6899     1252  1283               	bcf	3,5	;RP0=0, select bank0
  6900     1253  1303               	bcf	3,6	;RP1=0, select bank0
  6901     1254  141F               	bsf	31,0	;volatile
  6902     1255                     l343:
  6903     1255  0008               	return
  6904     1256                     __end_of_init_adc:
  6905                           
  6906                           	psect	text23
  6907     0717                     __ptext23:	
  6908 ;; *************** function _download_log *****************
  6909 ;; Defined at:
  6910 ;;		line 314 in file "cbb.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  i               1   17[BANK0 ] unsigned char 
  6915 ;;  j               1   16[BANK0 ] unsigned char 
  6916 ;;  rlog           12    3[BANK0 ] unsigned char [12]
  6917 ;;  add             1   15[BANK0 ] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6927 ;;      Params:         0       0       0       0       0
  6928 ;;      Locals:         0      15       0       0       0
  6929 ;;      Temps:          0       3       0       0       0
  6930 ;;      Totals:         0      18       0       0       0
  6931 ;;Total ram usage:       18 bytes
  6932 ;; Hardware stack levels used: 1
  6933 ;; Hardware stack levels required when called: 5
  6934 ;; This function calls:
  6935 ;;		_clcd_print
  6936 ;;		_clear_screen
  6937 ;;		_ext_eeprom_24C02_read
  6938 ;;		_putchar
  6939 ;;		_puts
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945     0717                     _download_log:	
  6946                           ;psect for function _download_log
  6947                           
  6948     0717                     l4673:	
  6949                           ;incstack = 0
  6950                           ; Regs used in _download_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6951                           
  6952                           
  6953                           ;cbb.c: 316:     puts("# TIME     E  SP\n\r");
  6954     0717  3000               	movlw	low (STR_30| (0+32768))
  6955     0718  00F3               	movwf	puts@s
  6956     0719  3088               	movlw	high (STR_30| (0+32768))
  6957     071A  00F4               	movwf	puts@s+1
  6958     071B  160A  118A  23E7  120A  118A  	fcall	_puts
  6959     0720                     l4675:
  6960                           
  6961                           ;cbb.c: 317:     char rlog[12];;cbb.c: 318:     unsigned char add = 5;
  6962     0720  3005               	movlw	5
  6963     0721  1283               	bcf	3,5	;RP0=0, select bank0
  6964     0722  1303               	bcf	3,6	;RP1=0, select bank0
  6965     0723  00AF               	movwf	download_log@add
  6966     0724                     l4677:
  6967                           
  6968                           ;cbb.c: 319:     for(unsigned char j=0;j<10;j++)
  6969     0724  01B0               	clrf	download_log@j
  6970     0725                     l4683:
  6971                           
  6972                           ;cbb.c: 320:     {;cbb.c: 321:     for(unsigned char i = 0; i<11; i++)
  6973     0725  01B1               	clrf	download_log@i
  6974     0726                     l4689:
  6975                           
  6976                           ;cbb.c: 322:     {;cbb.c: 323:         rlog[i] = ext_eeprom_24C02_read(add+i);
  6977     0726  0831               	movf	download_log@i,w
  6978     0727  3E23               	addlw	(low (download_log@rlog| 0))& (0+255)
  6979     0728  0084               	movwf	4
  6980     0729  0831               	movf	download_log@i,w
  6981     072A  072F               	addwf	download_log@add,w
  6982     072B  160A  118A  240D  120A  118A  	fcall	_ext_eeprom_24C02_read
  6983     0730  1383               	bcf	3,7	;select IRP bank0
  6984     0731  0080               	movwf	0
  6985     0732                     l4691:
  6986                           
  6987                           ;cbb.c: 324:     }
  6988     0732  3001               	movlw	1
  6989     0733  1283               	bcf	3,5	;RP0=0, select bank0
  6990     0734  1303               	bcf	3,6	;RP1=0, select bank0
  6991     0735  07B1               	addwf	download_log@i,f
  6992     0736                     l4693:
  6993     0736  300B               	movlw	11
  6994     0737  0231               	subwf	download_log@i,w
  6995     0738  1C03               	skipc
  6996     0739  2F3B               	goto	u4611
  6997     073A  2F3C               	goto	u4610
  6998     073B                     u4611:
  6999     073B  2F26               	goto	l4689
  7000     073C                     u4610:
  7001     073C                     l4695:
  7002                           
  7003                           ;cbb.c: 325:     add += 11;
  7004     073C  300B               	movlw	11
  7005     073D  07AF               	addwf	download_log@add,f
  7006     073E                     l4697:
  7007                           
  7008                           ;cbb.c: 326:     rlog[11] = '\0';
  7009     073E  01AE               	clrf	download_log@rlog+11
  7010     073F                     l4699:
  7011                           
  7012                           ;cbb.c: 327:     if(rlog[0] == 0x00)
  7013     073F  0823               	movf	download_log@rlog,w
  7014     0740  1D03               	btfss	3,2
  7015     0741  2F43               	goto	u4621
  7016     0742  2F44               	goto	u4620
  7017     0743                     u4621:
  7018     0743  2F45               	goto	l4703
  7019     0744                     u4620:
  7020     0744  2FCF               	goto	l4709
  7021     0745                     l4703:
  7022                           
  7023                           ;cbb.c: 329:     putchar(rlog[0]);
  7024     0745  0823               	movf	download_log@rlog,w
  7025     0746  160A  118A  2298  120A  118A  	fcall	_putchar
  7026                           
  7027                           ;cbb.c: 330:     putchar(' ');
  7028     074B  3020               	movlw	32
  7029     074C  160A  118A  2298  120A  118A  	fcall	_putchar
  7030                           
  7031                           ;cbb.c: 331:     putchar(rlog[1]);
  7032     0751  1283               	bcf	3,5	;RP0=0, select bank0
  7033     0752  1303               	bcf	3,6	;RP1=0, select bank0
  7034     0753  0824               	movf	download_log@rlog+1,w
  7035     0754  160A  118A  2298  120A  118A  	fcall	_putchar
  7036                           
  7037                           ;cbb.c: 332:     putchar(rlog[2]);
  7038     0759  1283               	bcf	3,5	;RP0=0, select bank0
  7039     075A  1303               	bcf	3,6	;RP1=0, select bank0
  7040     075B  0825               	movf	download_log@rlog+2,w
  7041     075C  160A  118A  2298  120A  118A  	fcall	_putchar
  7042                           
  7043                           ;cbb.c: 333:     putchar(':');
  7044     0761  303A               	movlw	58
  7045     0762  160A  118A  2298  120A  118A  	fcall	_putchar
  7046                           
  7047                           ;cbb.c: 334:     putchar(rlog[3]);
  7048     0767  1283               	bcf	3,5	;RP0=0, select bank0
  7049     0768  1303               	bcf	3,6	;RP1=0, select bank0
  7050     0769  0826               	movf	download_log@rlog+3,w
  7051     076A  160A  118A  2298  120A  118A  	fcall	_putchar
  7052                           
  7053                           ;cbb.c: 335:     putchar(rlog[4]);
  7054     076F  1283               	bcf	3,5	;RP0=0, select bank0
  7055     0770  1303               	bcf	3,6	;RP1=0, select bank0
  7056     0771  0827               	movf	download_log@rlog+4,w
  7057     0772  160A  118A  2298  120A  118A  	fcall	_putchar
  7058                           
  7059                           ;cbb.c: 336:     putchar(':');
  7060     0777  303A               	movlw	58
  7061     0778  160A  118A  2298  120A  118A  	fcall	_putchar
  7062                           
  7063                           ;cbb.c: 337:     putchar(rlog[5]);
  7064     077D  1283               	bcf	3,5	;RP0=0, select bank0
  7065     077E  1303               	bcf	3,6	;RP1=0, select bank0
  7066     077F  0828               	movf	download_log@rlog+5,w
  7067     0780  160A  118A  2298  120A  118A  	fcall	_putchar
  7068                           
  7069                           ;cbb.c: 338:     putchar(rlog[6]);
  7070     0785  1283               	bcf	3,5	;RP0=0, select bank0
  7071     0786  1303               	bcf	3,6	;RP1=0, select bank0
  7072     0787  0829               	movf	download_log@rlog+6,w
  7073     0788  160A  118A  2298  120A  118A  	fcall	_putchar
  7074                           
  7075                           ;cbb.c: 339:     putchar(' ');
  7076     078D  3020               	movlw	32
  7077     078E  160A  118A  2298  120A  118A  	fcall	_putchar
  7078                           
  7079                           ;cbb.c: 340:     putchar(rlog[7]);
  7080     0793  1283               	bcf	3,5	;RP0=0, select bank0
  7081     0794  1303               	bcf	3,6	;RP1=0, select bank0
  7082     0795  082A               	movf	download_log@rlog+7,w
  7083     0796  160A  118A  2298  120A  118A  	fcall	_putchar
  7084                           
  7085                           ;cbb.c: 341:     putchar(rlog[8]);
  7086     079B  1283               	bcf	3,5	;RP0=0, select bank0
  7087     079C  1303               	bcf	3,6	;RP1=0, select bank0
  7088     079D  082B               	movf	download_log@rlog+8,w
  7089     079E  160A  118A  2298  120A  118A  	fcall	_putchar
  7090                           
  7091                           ;cbb.c: 342:     putchar(' ');
  7092     07A3  3020               	movlw	32
  7093     07A4  160A  118A  2298  120A  118A  	fcall	_putchar
  7094                           
  7095                           ;cbb.c: 343:     putchar(rlog[9]);
  7096     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  7097     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  7098     07AB  082C               	movf	download_log@rlog+9,w
  7099     07AC  160A  118A  2298  120A  118A  	fcall	_putchar
  7100                           
  7101                           ;cbb.c: 344:     putchar(rlog[10]);
  7102     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7103     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7104     07B3  082D               	movf	download_log@rlog+10,w
  7105     07B4  160A  118A  2298  120A  118A  	fcall	_putchar
  7106                           
  7107                           ;cbb.c: 345:     putchar('\n');
  7108     07B9  300A               	movlw	10
  7109     07BA  160A  118A  2298  120A  118A  	fcall	_putchar
  7110                           
  7111                           ;cbb.c: 346:     putchar('\r');
  7112     07BF  300D               	movlw	13
  7113     07C0  160A  118A  2298  120A  118A  	fcall	_putchar
  7114     07C5                     l4705:
  7115                           
  7116                           ;cbb.c: 348:     }
  7117     07C5  3001               	movlw	1
  7118     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  7119     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  7120     07C8  07B0               	addwf	download_log@j,f
  7121     07C9                     l4707:
  7122     07C9  300A               	movlw	10
  7123     07CA  0230               	subwf	download_log@j,w
  7124     07CB  1C03               	skipc
  7125     07CC  2FCE               	goto	u4631
  7126     07CD  2FCF               	goto	u4630
  7127     07CE                     u4631:
  7128     07CE  2F25               	goto	l4683
  7129     07CF                     u4630:
  7130     07CF                     l4709:
  7131                           
  7132                           ;cbb.c: 349:     clear_screen();
  7133     07CF  160A  118A  2256  120A  118A  	fcall	_clear_screen
  7134     07D4                     l4711:
  7135                           
  7136                           ;cbb.c: 350:     clcd_print("DOWNLOAD LOG", (0x80 + 0));
  7137     07D4  30F7               	movlw	low (STR_31| (0+32768))
  7138     07D5  00F6               	movwf	clcd_print@str
  7139     07D6  3088               	movlw	high (STR_31| (0+32768))
  7140     07D7  00F7               	movwf	clcd_print@str+1
  7141     07D8  3080               	movlw	128
  7142     07D9  00F8               	movwf	clcd_print@addr
  7143     07DA  120A  158A  219C  120A  118A  	fcall	_clcd_print
  7144     07DF                     l4713:
  7145                           
  7146                           ;cbb.c: 351:     clcd_print("SUCCESSFULLY", (0xC0 + 0));
  7147     07DF  3004               	movlw	low (STR_32| (0+32768))
  7148     07E0  00F6               	movwf	clcd_print@str
  7149     07E1  3089               	movlw	high (STR_32| (0+32768))
  7150     07E2  00F7               	movwf	clcd_print@str+1
  7151     07E3  30C0               	movlw	192
  7152     07E4  00F8               	movwf	clcd_print@addr
  7153     07E5  120A  158A  219C  120A  118A  	fcall	_clcd_print
  7154     07EA                     l4715:
  7155                           
  7156                           ;cbb.c: 352:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  7157     07EA  3027               	movlw	39
  7158     07EB  1283               	bcf	3,5	;RP0=0, select bank0
  7159     07EC  1303               	bcf	3,6	;RP1=0, select bank0
  7160     07ED  00A2               	movwf	??_download_log+2
  7161     07EE  300D               	movlw	13
  7162     07EF  00A1               	movwf	??_download_log+1
  7163     07F0  3025               	movlw	37
  7164     07F1  00A0               	movwf	??_download_log
  7165     07F2                     u5187:
  7166     07F2  0BA0               	decfsz	??_download_log,f
  7167     07F3  2FF2               	goto	u5187
  7168     07F4  0BA1               	decfsz	??_download_log+1,f
  7169     07F5  2FF2               	goto	u5187
  7170     07F6  0BA2               	decfsz	??_download_log+2,f
  7171     07F7  2FF2               	goto	u5187
  7172     07F8  2FF9               	nop2
  7173     07F9                     l244:
  7174     07F9  0008               	return
  7175     07FA                     __end_of_download_log:
  7176                           
  7177                           	psect	text24
  7178     13E7                     __ptext24:	
  7179 ;; *************** function _puts *****************
  7180 ;; Defined at:
  7181 ;;		line 49 in file "uart.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  s               2    3[COMMON] PTR const unsigned char 
  7184 ;;		 -> STR_30(19), 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;		None
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7196 ;;      Params:         2       0       0       0       0
  7197 ;;      Locals:         0       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0
  7199 ;;      Totals:         2       0       0       0       0
  7200 ;;Total ram usage:        2 bytes
  7201 ;; Hardware stack levels used: 1
  7202 ;; Hardware stack levels required when called: 2
  7203 ;; This function calls:
  7204 ;;		_putchar
  7205 ;; This function is called by:
  7206 ;;		_download_log
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210     13E7                     _puts:	
  7211                           ;psect for function _puts
  7212                           
  7213     13E7                     l4107:	
  7214                           ;incstack = 0
  7215                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7216                           
  7217                           
  7218                           ;uart.c: 49: void puts(const char *s);uart.c: 50: {;uart.c: 51:     while (*s)
  7219     13E7  2BFC               	goto	l4113
  7220     13E8                     l4109:
  7221                           
  7222                           ;uart.c: 52:     {;uart.c: 53:         putchar(*s++);
  7223     13E8  0874               	movf	puts@s+1,w
  7224     13E9  00FF               	movwf	btemp+1
  7225     13EA  0873               	movf	puts@s,w
  7226     13EB  0084               	movwf	4
  7227     13EC  160A  118A  2000  160A  118A  	fcall	stringtab
  7228     13F1  160A  118A  2298  160A  118A  	fcall	_putchar
  7229     13F6                     l4111:
  7230     13F6  3001               	movlw	1
  7231     13F7  07F3               	addwf	puts@s,f
  7232     13F8  1803               	skipnc
  7233     13F9  0AF4               	incf	puts@s+1,f
  7234     13FA  3000               	movlw	0
  7235     13FB  07F4               	addwf	puts@s+1,f
  7236     13FC                     l4113:
  7237                           
  7238                           ;uart.c: 51:     while (*s)
  7239     13FC  0874               	movf	puts@s+1,w
  7240     13FD  1283               	bcf	3,5	;RP0=0, select bank0
  7241     13FE  1303               	bcf	3,6	;RP1=0, select bank0
  7242     13FF  00FF               	movwf	btemp+1
  7243     1400  0873               	movf	puts@s,w
  7244     1401  0084               	movwf	4
  7245     1402  160A  118A  2000  160A  118A  	fcall	stringtab
  7246     1407  3A00               	xorlw	0
  7247     1408  1D03               	skipz
  7248     1409  2C0B               	goto	u3811
  7249     140A  2C0C               	goto	u3810
  7250     140B                     u3811:
  7251     140B  2BE8               	goto	l4109
  7252     140C                     u3810:
  7253     140C                     l582:
  7254     140C  0008               	return
  7255     140D                     __end_of_puts:
  7256                           
  7257                           	psect	text25
  7258     1298                     __ptext25:	
  7259 ;; *************** function _putchar *****************
  7260 ;; Defined at:
  7261 ;;		line 34 in file "uart.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  data            1    wreg     unsigned char 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  data            1    2[COMMON] unsigned char 
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7275 ;;      Params:         0       0       0       0       0
  7276 ;;      Locals:         1       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0
  7278 ;;      Totals:         1       0       0       0       0
  7279 ;;Total ram usage:        1 bytes
  7280 ;; Hardware stack levels used: 1
  7281 ;; Hardware stack levels required when called: 1
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_download_log
  7286 ;;		_puts
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290     1298                     _putchar:	
  7291                           ;psect for function _putchar
  7292                           
  7293                           
  7294                           ;incstack = 0
  7295                           ; Regs used in _putchar: [wreg]
  7296                           ;putchar@data stored from wreg
  7297     1298  00F2               	movwf	putchar@data
  7298     1299                     l3961:
  7299                           
  7300                           ;uart.c: 34: void putchar(unsigned char data);uart.c: 35: {;uart.c: 37:     TXREG = data
      +                          ;
  7301     1299  0872               	movf	putchar@data,w
  7302     129A  1283               	bcf	3,5	;RP0=0, select bank0
  7303     129B  1303               	bcf	3,6	;RP1=0, select bank0
  7304     129C  0099               	movwf	25	;volatile
  7305     129D                     l574:	
  7306                           ;uart.c: 43:     } while (TXIF != 1);
  7307                           
  7308     129D  1E0C               	btfss	12,4	;volatile
  7309     129E  2AA0               	goto	u3621
  7310     129F  2AA1               	goto	u3620
  7311     12A0                     u3621:
  7312     12A0  2A9D               	goto	l574
  7313     12A1                     u3620:
  7314     12A1                     l575:
  7315                           
  7316                           ;uart.c: 46:     TXIF = 0;
  7317     12A1  120C               	bcf	12,4	;volatile
  7318     12A2                     l576:
  7319     12A2  0008               	return
  7320     12A3                     __end_of_putchar:
  7321                           
  7322                           	psect	text26
  7323     16A3                     __ptext26:	
  7324 ;; *************** function _display_dash_board *****************
  7325 ;; Defined at:
  7326 ;;		line 58 in file "cbb.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  event           1   11[BANK0 ] PTR unsigned char 
  7329 ;;		 -> main@event(3), 
  7330 ;;  speed           2   12[BANK0 ] unsigned short 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7342 ;;      Params:         0       3       0       0       0
  7343 ;;      Locals:         0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0
  7345 ;;      Totals:         0       3       0       0       0
  7346 ;;Total ram usage:        3 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; Hardware stack levels required when called: 6
  7349 ;; This function calls:
  7350 ;;		___lwdiv
  7351 ;;		___lwmod
  7352 ;;		_clcd_print
  7353 ;;		_clcd_putch
  7354 ;;		_get_time
  7355 ;; This function is called by:
  7356 ;;		_main
  7357 ;; This function uses a non-reentrant model
  7358 ;;
  7359                           
  7360     16A3                     _display_dash_board:	
  7361                           ;psect for function _display_dash_board
  7362                           
  7363     16A3                     l4395:	
  7364                           ;incstack = 0
  7365                           ; Regs used in _display_dash_board: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7366                           
  7367                           
  7368                           ;cbb.c: 58: void display_dash_board(char event[], unsigned short speed);cbb.c: 59: {;cbb
      +                          .c: 60:     clcd_print(" TIME     EV  SP",(0x80 + 0));
  7369     16A3  3035               	movlw	low (STR_19| (0+32768))
  7370     16A4  00F6               	movwf	clcd_print@str
  7371     16A5  3088               	movlw	high (STR_19| (0+32768))
  7372     16A6  00F7               	movwf	clcd_print@str+1
  7373     16A7  3080               	movlw	128
  7374     16A8  00F8               	movwf	clcd_print@addr
  7375     16A9  120A  158A  219C  160A  118A  	fcall	_clcd_print
  7376     16AE                     l4397:
  7377                           
  7378                           ;cbb.c: 61:     get_time(clock_reg);
  7379     16AE  305E               	movlw	(low (_clock_reg| 0))& (0+255)
  7380     16AF  1283               	bcf	3,5	;RP0=0, select bank0
  7381     16B0  1303               	bcf	3,6	;RP1=0, select bank0
  7382     16B1  00A9               	movwf	get_time@clock_reg
  7383     16B2  120A  158A  22F7  160A  118A  	fcall	_get_time
  7384     16B7                     l4399:
  7385                           
  7386                           ;cbb.c: 62:     clcd_print(event,(0xC0 + 10));
  7387     16B7  1283               	bcf	3,5	;RP0=0, select bank0
  7388     16B8  1303               	bcf	3,6	;RP1=0, select bank0
  7389     16B9  082B               	movf	display_dash_board@event,w
  7390     16BA  00F6               	movwf	clcd_print@str
  7391     16BB  3000               	movlw	0
  7392     16BC  00F7               	movwf	clcd_print@str+1
  7393     16BD  30CA               	movlw	202
  7394     16BE  00F8               	movwf	clcd_print@addr
  7395     16BF  120A  158A  219C  160A  118A  	fcall	_clcd_print
  7396     16C4                     l4401:
  7397                           
  7398                           ;cbb.c: 63:     clcd_putch((speed / 10) + '0',(0xC0 + 14));
  7399     16C4  30CE               	movlw	206
  7400     16C5  1283               	bcf	3,5	;RP0=0, select bank0
  7401     16C6  1303               	bcf	3,6	;RP1=0, select bank0
  7402     16C7  00A7               	movwf	clcd_putch@addr
  7403     16C8  300A               	movlw	10
  7404     16C9  00A0               	movwf	___lwdiv@divisor
  7405     16CA  3000               	movlw	0
  7406     16CB  00A1               	movwf	___lwdiv@divisor+1
  7407     16CC  082D               	movf	display_dash_board@speed+1,w
  7408     16CD  00A3               	movwf	___lwdiv@dividend+1
  7409     16CE  082C               	movf	display_dash_board@speed,w
  7410     16CF  00A2               	movwf	___lwdiv@dividend
  7411     16D0  160A  118A  25CC  160A  118A  	fcall	___lwdiv
  7412     16D5  1283               	bcf	3,5	;RP0=0, select bank0
  7413     16D6  1303               	bcf	3,6	;RP1=0, select bank0
  7414     16D7  0820               	movf	?___lwdiv,w
  7415     16D8  3E30               	addlw	48
  7416     16D9  160A  118A  22E1  160A  118A  	fcall	_clcd_putch
  7417     16DE                     l4403:
  7418                           
  7419                           ;cbb.c: 64:     clcd_putch((speed % 10) + '0',(0xC0 + 15));
  7420     16DE  30CF               	movlw	207
  7421     16DF  1283               	bcf	3,5	;RP0=0, select bank0
  7422     16E0  1303               	bcf	3,6	;RP1=0, select bank0
  7423     16E1  00A7               	movwf	clcd_putch@addr
  7424     16E2  300A               	movlw	10
  7425     16E3  00F2               	movwf	___lwmod@divisor
  7426     16E4  3000               	movlw	0
  7427     16E5  00F3               	movwf	___lwmod@divisor+1
  7428     16E6  082D               	movf	display_dash_board@speed+1,w
  7429     16E7  00F5               	movwf	___lwmod@dividend+1
  7430     16E8  082C               	movf	display_dash_board@speed,w
  7431     16E9  00F4               	movwf	___lwmod@dividend
  7432     16EA  160A  118A  2594  160A  118A  	fcall	___lwmod
  7433     16EF  0872               	movf	?___lwmod,w
  7434     16F0  3E30               	addlw	48
  7435     16F1  160A  118A  22E1  160A  118A  	fcall	_clcd_putch
  7436     16F6                     l166:
  7437     16F6  0008               	return
  7438     16F7                     __end_of_display_dash_board:
  7439                           
  7440                           	psect	text27
  7441     0AF7                     __ptext27:	
  7442 ;; *************** function _get_time *****************
  7443 ;; Defined at:
  7444 ;;		line 32 in file "cbb.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  clock_reg       1    9[BANK0 ] PTR unsigned char 
  7447 ;;		 -> clock_reg(3), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7459 ;;      Params:         0       1       0       0       0
  7460 ;;      Locals:         0       0       0       0       0
  7461 ;;      Temps:          0       1       0       0       0
  7462 ;;      Totals:         0       2       0       0       0
  7463 ;;Total ram usage:        2 bytes
  7464 ;; Hardware stack levels used: 1
  7465 ;; Hardware stack levels required when called: 5
  7466 ;; This function calls:
  7467 ;;		_clcd_putch
  7468 ;;		_read_ds1307
  7469 ;; This function is called by:
  7470 ;;		_display_dash_board
  7471 ;;		_log_car_event
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475     0AF7                     _get_time:	
  7476                           ;psect for function _get_time
  7477                           
  7478     0AF7                     l4051:	
  7479                           ;incstack = 0
  7480                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7481                           
  7482                           
  7483                           ;cbb.c: 32: static void get_time(unsigned char *clock_reg);cbb.c: 33: {;cbb.c: 34:     c
      +                          lock_reg[0] = read_ds1307(0x02);
  7484     0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  7485     0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  7486     0AF9  0829               	movf	get_time@clock_reg,w
  7487     0AFA  0084               	movwf	4
  7488     0AFB  3002               	movlw	2
  7489     0AFC  160A  118A  2438  120A  158A  	fcall	_read_ds1307
  7490     0B01  1383               	bcf	3,7	;select IRP bank0
  7491     0B02  0080               	movwf	0
  7492                           
  7493                           ;cbb.c: 35:     clock_reg[1] = read_ds1307(0x01);
  7494     0B03  1283               	bcf	3,5	;RP0=0, select bank0
  7495     0B04  1303               	bcf	3,6	;RP1=0, select bank0
  7496     0B05  0A29               	incf	get_time@clock_reg,w
  7497     0B06  0084               	movwf	4
  7498     0B07  3001               	movlw	1
  7499     0B08  160A  118A  2438  120A  158A  	fcall	_read_ds1307
  7500     0B0D  1383               	bcf	3,7	;select IRP bank0
  7501     0B0E  0080               	movwf	0
  7502                           
  7503                           ;cbb.c: 36:     clock_reg[2] = read_ds1307(0x00);
  7504     0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  7505     0B10  1303               	bcf	3,6	;RP1=0, select bank0
  7506     0B11  0829               	movf	get_time@clock_reg,w
  7507     0B12  3E02               	addlw	2
  7508     0B13  0084               	movwf	4
  7509     0B14  3000               	movlw	0
  7510     0B15  160A  118A  2438  120A  158A  	fcall	_read_ds1307
  7511     0B1A  1383               	bcf	3,7	;select IRP bank0
  7512     0B1B  0080               	movwf	0
  7513     0B1C                     l4053:
  7514                           
  7515                           ;cbb.c: 37:     time[0] = ((clock_reg[0] >> 4) & 0x03) + '0';
  7516     0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  7517     0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  7518     0B1E  0829               	movf	get_time@clock_reg,w
  7519     0B1F  0084               	movwf	4
  7520     0B20  0800               	movf	0,w
  7521     0B21  00AA               	movwf	??_get_time
  7522     0B22  3004               	movlw	4
  7523     0B23                     u3745:
  7524     0B23  1003               	clrc
  7525     0B24  0CAA               	rrf	??_get_time,f
  7526     0B25  3EFF               	addlw	-1
  7527     0B26  1D03               	skipz
  7528     0B27  2B23               	goto	u3745
  7529     0B28  082A               	movf	??_get_time,w
  7530     0B29  3903               	andlw	3
  7531     0B2A  3E30               	addlw	48
  7532     0B2B  00CF               	movwf	_time
  7533     0B2C                     l4055:
  7534                           
  7535                           ;cbb.c: 38:     time[1] = (clock_reg[0] & 0x0F) + '0';
  7536     0B2C  0829               	movf	get_time@clock_reg,w
  7537     0B2D  0084               	movwf	4
  7538     0B2E  0800               	movf	0,w
  7539     0B2F  390F               	andlw	15
  7540     0B30  3E30               	addlw	48
  7541     0B31  00D0               	movwf	_time+1
  7542     0B32                     l4057:
  7543                           
  7544                           ;cbb.c: 39:     clcd_putch(time[0],(0xC0 + 0));
  7545     0B32  30C0               	movlw	192
  7546     0B33  00A7               	movwf	clcd_putch@addr
  7547     0B34  084F               	movf	_time,w
  7548     0B35  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7549     0B3A                     l4059:
  7550                           
  7551                           ;cbb.c: 40:     clcd_putch(time[1],(0xC0 + 1));
  7552     0B3A  30C1               	movlw	193
  7553     0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  7554     0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  7555     0B3D  00A7               	movwf	clcd_putch@addr
  7556     0B3E  0850               	movf	_time+1,w
  7557     0B3F  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7558     0B44                     l4061:
  7559                           
  7560                           ;cbb.c: 41:     clcd_putch(':',(0xC0 + 2));
  7561     0B44  30C2               	movlw	194
  7562     0B45  1283               	bcf	3,5	;RP0=0, select bank0
  7563     0B46  1303               	bcf	3,6	;RP1=0, select bank0
  7564     0B47  00A7               	movwf	clcd_putch@addr
  7565     0B48  303A               	movlw	58
  7566     0B49  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7567     0B4E                     l4063:
  7568                           
  7569                           ;cbb.c: 43:     time[2] = ((clock_reg[1] >> 4) & 0x07) + '0';
  7570     0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  7571     0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  7572     0B50  0A29               	incf	get_time@clock_reg,w
  7573     0B51  0084               	movwf	4
  7574     0B52  1383               	bcf	3,7	;select IRP bank0
  7575     0B53  0800               	movf	0,w
  7576     0B54  00AA               	movwf	??_get_time
  7577     0B55  3004               	movlw	4
  7578     0B56                     u3755:
  7579     0B56  1003               	clrc
  7580     0B57  0CAA               	rrf	??_get_time,f
  7581     0B58  3EFF               	addlw	-1
  7582     0B59  1D03               	skipz
  7583     0B5A  2B56               	goto	u3755
  7584     0B5B  082A               	movf	??_get_time,w
  7585     0B5C  3907               	andlw	7
  7586     0B5D  3E30               	addlw	48
  7587     0B5E  00D1               	movwf	_time+2
  7588     0B5F                     l4065:
  7589                           
  7590                           ;cbb.c: 44:     time[3] = (clock_reg[1] & 0x0F) + '0';
  7591     0B5F  0A29               	incf	get_time@clock_reg,w
  7592     0B60  0084               	movwf	4
  7593     0B61  0800               	movf	0,w
  7594     0B62  390F               	andlw	15
  7595     0B63  3E30               	addlw	48
  7596     0B64  00D2               	movwf	_time+3
  7597     0B65                     l4067:
  7598                           
  7599                           ;cbb.c: 45:     clcd_putch(time[2],(0xC0 + 3));
  7600     0B65  30C3               	movlw	195
  7601     0B66  00A7               	movwf	clcd_putch@addr
  7602     0B67  0851               	movf	_time+2,w
  7603     0B68  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7604     0B6D                     l4069:
  7605                           
  7606                           ;cbb.c: 46:     clcd_putch(time[3],(0xC0 + 4));
  7607     0B6D  30C4               	movlw	196
  7608     0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  7609     0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  7610     0B70  00A7               	movwf	clcd_putch@addr
  7611     0B71  0852               	movf	_time+3,w
  7612     0B72  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7613     0B77                     l4071:
  7614                           
  7615                           ;cbb.c: 48:     clcd_putch(':',(0xC0 + 5));
  7616     0B77  30C5               	movlw	197
  7617     0B78  1283               	bcf	3,5	;RP0=0, select bank0
  7618     0B79  1303               	bcf	3,6	;RP1=0, select bank0
  7619     0B7A  00A7               	movwf	clcd_putch@addr
  7620     0B7B  303A               	movlw	58
  7621     0B7C  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7622     0B81                     l4073:
  7623                           
  7624                           ;cbb.c: 51:     time[4] = ((clock_reg[2] >> 4) & 0x07) + '0';
  7625     0B81  1283               	bcf	3,5	;RP0=0, select bank0
  7626     0B82  1303               	bcf	3,6	;RP1=0, select bank0
  7627     0B83  0829               	movf	get_time@clock_reg,w
  7628     0B84  3E02               	addlw	2
  7629     0B85  0084               	movwf	4
  7630     0B86  1383               	bcf	3,7	;select IRP bank0
  7631     0B87  0800               	movf	0,w
  7632     0B88  00AA               	movwf	??_get_time
  7633     0B89  3004               	movlw	4
  7634     0B8A                     u3765:
  7635     0B8A  1003               	clrc
  7636     0B8B  0CAA               	rrf	??_get_time,f
  7637     0B8C  3EFF               	addlw	-1
  7638     0B8D  1D03               	skipz
  7639     0B8E  2B8A               	goto	u3765
  7640     0B8F  082A               	movf	??_get_time,w
  7641     0B90  3907               	andlw	7
  7642     0B91  3E30               	addlw	48
  7643     0B92  00D3               	movwf	_time+4
  7644     0B93                     l4075:
  7645                           
  7646                           ;cbb.c: 52:     time[5] = (clock_reg[2] & 0x0F) + '0';
  7647     0B93  0829               	movf	get_time@clock_reg,w
  7648     0B94  3E02               	addlw	2
  7649     0B95  0084               	movwf	4
  7650     0B96  0800               	movf	0,w
  7651     0B97  390F               	andlw	15
  7652     0B98  3E30               	addlw	48
  7653     0B99  00D4               	movwf	_time+5
  7654     0B9A                     l4077:
  7655                           
  7656                           ;cbb.c: 53:     clcd_putch(time[4],(0xC0 + 6));
  7657     0B9A  30C6               	movlw	198
  7658     0B9B  00A7               	movwf	clcd_putch@addr
  7659     0B9C  0853               	movf	_time+4,w
  7660     0B9D  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7661     0BA2                     l4079:
  7662                           
  7663                           ;cbb.c: 54:     clcd_putch(time[5],(0xC0 + 7));
  7664     0BA2  30C7               	movlw	199
  7665     0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  7666     0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  7667     0BA5  00A7               	movwf	clcd_putch@addr
  7668     0BA6  0854               	movf	_time+5,w
  7669     0BA7  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  7670     0BAC                     l4081:
  7671                           
  7672                           ;cbb.c: 55:     time[6] = '\0';
  7673     0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  7674     0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  7675     0BAE  01D5               	clrf	_time+6
  7676     0BAF                     l163:
  7677     0BAF  0008               	return
  7678     0BB0                     __end_of_get_time:
  7679                           
  7680                           	psect	text28
  7681     1438                     __ptext28:	
  7682 ;; *************** function _read_ds1307 *****************
  7683 ;; Defined at:
  7684 ;;		line 13 in file "ds1307.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  addr            1    wreg     unsigned char 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  addr            1    4[COMMON] unsigned char 
  7689 ;;  data            1    5[COMMON] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      unsigned char 
  7692 ;; Registers used:
  7693 ;;		wreg, status,2, status,0, pclath, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7699 ;;      Params:         0       0       0       0       0
  7700 ;;      Locals:         2       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0
  7702 ;;      Totals:         2       0       0       0       0
  7703 ;;Total ram usage:        2 bytes
  7704 ;; Hardware stack levels used: 1
  7705 ;; Hardware stack levels required when called: 4
  7706 ;; This function calls:
  7707 ;;		_i2c_read
  7708 ;;		_i2c_rep_start
  7709 ;;		_i2c_start
  7710 ;;		_i2c_stop
  7711 ;;		_i2c_write
  7712 ;; This function is called by:
  7713 ;;		_get_time
  7714 ;;		_init_ds1307
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718     1438                     _read_ds1307:	
  7719                           ;psect for function _read_ds1307
  7720                           
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  7724                           ;read_ds1307@addr stored from wreg
  7725     1438  00F4               	movwf	read_ds1307@addr
  7726     1439                     l3915:
  7727                           
  7728                           ;ds1307.c: 13: unsigned char read_ds1307(unsigned char addr);ds1307.c: 14: {;ds1307.c: 1
      +                          5:     unsigned char data;;ds1307.c: 17:     i2c_start();
  7729     1439  160A  118A  2266  160A  118A  	fcall	_i2c_start
  7730                           
  7731                           ;ds1307.c: 18:     i2c_write(0b11010000);
  7732     143E  30D0               	movlw	208
  7733     143F  160A  118A  228D  160A  118A  	fcall	_i2c_write
  7734                           
  7735                           ;ds1307.c: 19:     i2c_write(addr);
  7736     1444  0874               	movf	read_ds1307@addr,w
  7737     1445  160A  118A  228D  160A  118A  	fcall	_i2c_write
  7738                           
  7739                           ;ds1307.c: 20:     i2c_rep_start();
  7740     144A  160A  118A  2282  160A  118A  	fcall	_i2c_rep_start
  7741                           
  7742                           ;ds1307.c: 21:     i2c_write(0b11010001);
  7743     144F  30D1               	movlw	209
  7744     1450  160A  118A  228D  160A  118A  	fcall	_i2c_write
  7745                           
  7746                           ;ds1307.c: 22:     data = i2c_read(0);
  7747     1455  3000               	movlw	0
  7748     1456  160A  118A  23A5  160A  118A  	fcall	_i2c_read
  7749     145B  00F5               	movwf	read_ds1307@data
  7750                           
  7751                           ;ds1307.c: 23:     i2c_stop();
  7752     145C  160A  118A  226F  160A  118A  	fcall	_i2c_stop
  7753     1461                     l3917:
  7754                           
  7755                           ;ds1307.c: 25:     return data;
  7756     1461  0875               	movf	read_ds1307@data,w
  7757     1462                     l397:
  7758     1462  0008               	return
  7759     1463                     __end_of_read_ds1307:
  7760                           
  7761                           	psect	text29
  7762     1594                     __ptext29:	
  7763 ;; *************** function ___lwmod *****************
  7764 ;; Defined at:
  7765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  divisor         2    2[COMMON] unsigned int 
  7768 ;;  dividend        2    4[COMMON] unsigned int 
  7769 ;; Auto vars:     Size  Location     Type
  7770 ;;  counter         1    6[COMMON] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2    2[COMMON] unsigned int 
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7780 ;;      Params:         4       0       0       0       0
  7781 ;;      Locals:         1       0       0       0       0
  7782 ;;      Temps:          0       0       0       0       0
  7783 ;;      Totals:         5       0       0       0       0
  7784 ;;Total ram usage:        5 bytes
  7785 ;; Hardware stack levels used: 1
  7786 ;; Hardware stack levels required when called: 1
  7787 ;; This function calls:
  7788 ;;		Nothing
  7789 ;; This function is called by:
  7790 ;;		_display_dash_board
  7791 ;;		_log_car_event
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795     1594                     ___lwmod:	
  7796                           ;psect for function ___lwmod
  7797                           
  7798     1594                     l4333:	
  7799                           ;incstack = 0
  7800                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7801                           
  7802     1594  0872               	movf	___lwmod@divisor,w
  7803     1595  0473               	iorwf	___lwmod@divisor+1,w
  7804     1596  1903               	btfsc	3,2
  7805     1597  2D99               	goto	u4221
  7806     1598  2D9A               	goto	u4220
  7807     1599                     u4221:
  7808     1599  2DC7               	goto	l4351
  7809     159A                     u4220:
  7810     159A                     l4335:
  7811     159A  3001               	movlw	1
  7812     159B  00F6               	movwf	___lwmod@counter
  7813     159C  2DA6               	goto	l4341
  7814     159D                     l4337:
  7815     159D  3001               	movlw	1
  7816     159E                     u4235:
  7817     159E  1003               	clrc
  7818     159F  0DF2               	rlf	___lwmod@divisor,f
  7819     15A0  0DF3               	rlf	___lwmod@divisor+1,f
  7820     15A1  3EFF               	addlw	-1
  7821     15A2  1D03               	skipz
  7822     15A3  2D9E               	goto	u4235
  7823     15A4                     l4339:
  7824     15A4  3001               	movlw	1
  7825     15A5  07F6               	addwf	___lwmod@counter,f
  7826     15A6                     l4341:
  7827     15A6  1FF3               	btfss	___lwmod@divisor+1,7
  7828     15A7  2DA9               	goto	u4241
  7829     15A8  2DAA               	goto	u4240
  7830     15A9                     u4241:
  7831     15A9  2D9D               	goto	l4337
  7832     15AA                     u4240:
  7833     15AA                     l4343:
  7834     15AA  0873               	movf	___lwmod@divisor+1,w
  7835     15AB  0275               	subwf	___lwmod@dividend+1,w
  7836     15AC  1D03               	skipz
  7837     15AD  2DB0               	goto	u4255
  7838     15AE  0872               	movf	___lwmod@divisor,w
  7839     15AF  0274               	subwf	___lwmod@dividend,w
  7840     15B0                     u4255:
  7841     15B0  1C03               	skipc
  7842     15B1  2DB3               	goto	u4251
  7843     15B2  2DB4               	goto	u4250
  7844     15B3                     u4251:
  7845     15B3  2DBA               	goto	l4347
  7846     15B4                     u4250:
  7847     15B4                     l4345:
  7848     15B4  0872               	movf	___lwmod@divisor,w
  7849     15B5  02F4               	subwf	___lwmod@dividend,f
  7850     15B6  0873               	movf	___lwmod@divisor+1,w
  7851     15B7  1C03               	skipc
  7852     15B8  03F5               	decf	___lwmod@dividend+1,f
  7853     15B9  02F5               	subwf	___lwmod@dividend+1,f
  7854     15BA                     l4347:
  7855     15BA  3001               	movlw	1
  7856     15BB                     u4265:
  7857     15BB  1003               	clrc
  7858     15BC  0CF3               	rrf	___lwmod@divisor+1,f
  7859     15BD  0CF2               	rrf	___lwmod@divisor,f
  7860     15BE  3EFF               	addlw	-1
  7861     15BF  1D03               	skipz
  7862     15C0  2DBB               	goto	u4265
  7863     15C1                     l4349:
  7864     15C1  3001               	movlw	1
  7865     15C2  02F6               	subwf	___lwmod@counter,f
  7866     15C3  1D03               	btfss	3,2
  7867     15C4  2DC6               	goto	u4271
  7868     15C5  2DC7               	goto	u4270
  7869     15C6                     u4271:
  7870     15C6  2DAA               	goto	l4343
  7871     15C7                     u4270:
  7872     15C7                     l4351:
  7873     15C7  0875               	movf	___lwmod@dividend+1,w
  7874     15C8  00F3               	movwf	?___lwmod+1
  7875     15C9  0874               	movf	___lwmod@dividend,w
  7876     15CA  00F2               	movwf	?___lwmod
  7877     15CB                     l958:
  7878     15CB  0008               	return
  7879     15CC                     __end_of___lwmod:
  7880                           
  7881                           	psect	text30
  7882     15CC                     __ptext30:	
  7883 ;; *************** function ___lwdiv *****************
  7884 ;; Defined at:
  7885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  divisor         2    0[BANK0 ] unsigned int 
  7888 ;;  dividend        2    2[BANK0 ] unsigned int 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  quotient        2    5[BANK0 ] unsigned int 
  7891 ;;  counter         1    4[BANK0 ] unsigned char 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  2    0[BANK0 ] unsigned int 
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7901 ;;      Params:         0       4       0       0       0
  7902 ;;      Locals:         0       3       0       0       0
  7903 ;;      Temps:          0       0       0       0       0
  7904 ;;      Totals:         0       7       0       0       0
  7905 ;;Total ram usage:        7 bytes
  7906 ;; Hardware stack levels used: 1
  7907 ;; Hardware stack levels required when called: 1
  7908 ;; This function calls:
  7909 ;;		Nothing
  7910 ;; This function is called by:
  7911 ;;		_main
  7912 ;;		_display_dash_board
  7913 ;;		_log_car_event
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917     15CC                     ___lwdiv:	
  7918                           ;psect for function ___lwdiv
  7919                           
  7920     15CC                     l4307:	
  7921                           ;incstack = 0
  7922                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7923                           
  7924     15CC  1283               	bcf	3,5	;RP0=0, select bank0
  7925     15CD  1303               	bcf	3,6	;RP1=0, select bank0
  7926     15CE  01A5               	clrf	___lwdiv@quotient
  7927     15CF  01A6               	clrf	___lwdiv@quotient+1
  7928     15D0                     l4309:
  7929     15D0  0820               	movf	___lwdiv@divisor,w
  7930     15D1  0421               	iorwf	___lwdiv@divisor+1,w
  7931     15D2  1903               	btfsc	3,2
  7932     15D3  2DD5               	goto	u4151
  7933     15D4  2DD6               	goto	u4150
  7934     15D5                     u4151:
  7935     15D5  2E0B               	goto	l4329
  7936     15D6                     u4150:
  7937     15D6                     l4311:
  7938     15D6  3001               	movlw	1
  7939     15D7  00A4               	movwf	___lwdiv@counter
  7940     15D8  2DE2               	goto	l4317
  7941     15D9                     l4313:
  7942     15D9  3001               	movlw	1
  7943     15DA                     u4165:
  7944     15DA  1003               	clrc
  7945     15DB  0DA0               	rlf	___lwdiv@divisor,f
  7946     15DC  0DA1               	rlf	___lwdiv@divisor+1,f
  7947     15DD  3EFF               	addlw	-1
  7948     15DE  1D03               	skipz
  7949     15DF  2DDA               	goto	u4165
  7950     15E0                     l4315:
  7951     15E0  3001               	movlw	1
  7952     15E1  07A4               	addwf	___lwdiv@counter,f
  7953     15E2                     l4317:
  7954     15E2  1FA1               	btfss	___lwdiv@divisor+1,7
  7955     15E3  2DE5               	goto	u4171
  7956     15E4  2DE6               	goto	u4170
  7957     15E5                     u4171:
  7958     15E5  2DD9               	goto	l4313
  7959     15E6                     u4170:
  7960     15E6                     l4319:
  7961     15E6  3001               	movlw	1
  7962     15E7                     u4185:
  7963     15E7  1003               	clrc
  7964     15E8  0DA5               	rlf	___lwdiv@quotient,f
  7965     15E9  0DA6               	rlf	___lwdiv@quotient+1,f
  7966     15EA  3EFF               	addlw	-1
  7967     15EB  1D03               	skipz
  7968     15EC  2DE7               	goto	u4185
  7969     15ED  0821               	movf	___lwdiv@divisor+1,w
  7970     15EE  0223               	subwf	___lwdiv@dividend+1,w
  7971     15EF  1D03               	skipz
  7972     15F0  2DF3               	goto	u4195
  7973     15F1  0820               	movf	___lwdiv@divisor,w
  7974     15F2  0222               	subwf	___lwdiv@dividend,w
  7975     15F3                     u4195:
  7976     15F3  1C03               	skipc
  7977     15F4  2DF6               	goto	u4191
  7978     15F5  2DF7               	goto	u4190
  7979     15F6                     u4191:
  7980     15F6  2DFE               	goto	l4325
  7981     15F7                     u4190:
  7982     15F7                     l4321:
  7983     15F7  0820               	movf	___lwdiv@divisor,w
  7984     15F8  02A2               	subwf	___lwdiv@dividend,f
  7985     15F9  0821               	movf	___lwdiv@divisor+1,w
  7986     15FA  1C03               	skipc
  7987     15FB  03A3               	decf	___lwdiv@dividend+1,f
  7988     15FC  02A3               	subwf	___lwdiv@dividend+1,f
  7989     15FD                     l4323:
  7990     15FD  1425               	bsf	___lwdiv@quotient,0
  7991     15FE                     l4325:
  7992     15FE  3001               	movlw	1
  7993     15FF                     u4205:
  7994     15FF  1003               	clrc
  7995     1600  0CA1               	rrf	___lwdiv@divisor+1,f
  7996     1601  0CA0               	rrf	___lwdiv@divisor,f
  7997     1602  3EFF               	addlw	-1
  7998     1603  1D03               	skipz
  7999     1604  2DFF               	goto	u4205
  8000     1605                     l4327:
  8001     1605  3001               	movlw	1
  8002     1606  02A4               	subwf	___lwdiv@counter,f
  8003     1607  1D03               	btfss	3,2
  8004     1608  2E0A               	goto	u4211
  8005     1609  2E0B               	goto	u4210
  8006     160A                     u4211:
  8007     160A  2DE6               	goto	l4319
  8008     160B                     u4210:
  8009     160B                     l4329:
  8010     160B  0826               	movf	___lwdiv@quotient+1,w
  8011     160C  00A1               	movwf	?___lwdiv+1
  8012     160D  0825               	movf	___lwdiv@quotient,w
  8013     160E  00A0               	movwf	?___lwdiv
  8014     160F                     l948:
  8015     160F  0008               	return
  8016     1610                     __end_of___lwdiv:
  8017                           
  8018                           	psect	text31
  8019     1610                     __ptext31:	
  8020 ;; *************** function _clear_log *****************
  8021 ;; Defined at:
  8022 ;;		line 300 in file "cbb.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  i               1    4[BANK0 ] unsigned char 
  8027 ;;  clear           1    3[BANK0 ] unsigned char 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8037 ;;      Params:         0       0       0       0       0
  8038 ;;      Locals:         0       2       0       0       0
  8039 ;;      Temps:          0       3       0       0       0
  8040 ;;      Totals:         0       5       0       0       0
  8041 ;;Total ram usage:        5 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 4
  8044 ;; This function calls:
  8045 ;;		_clcd_print
  8046 ;;		_clear_screen
  8047 ;;		_ext_eeprom_24C02_byte_write
  8048 ;; This function is called by:
  8049 ;;		_main
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053     1610                     _clear_log:	
  8054                           ;psect for function _clear_log
  8055                           
  8056     1610                     l4647:	
  8057                           ;incstack = 0
  8058                           ; Regs used in _clear_log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8059                           
  8060                           
  8061                           ;cbb.c: 302:     clear_screen();
  8062     1610  160A  118A  2256  160A  118A  	fcall	_clear_screen
  8063     1615                     l4649:
  8064                           
  8065                           ;cbb.c: 303:     clcd_print("CLEAR LOG", (0x80 + 0));
  8066     1615  302A               	movlw	low (STR_28| (0+32768))
  8067     1616  00F6               	movwf	clcd_print@str
  8068     1617  3089               	movlw	high (STR_28| (0+32768))
  8069     1618  00F7               	movwf	clcd_print@str+1
  8070     1619  3080               	movlw	128
  8071     161A  00F8               	movwf	clcd_print@addr
  8072     161B  120A  158A  219C  160A  118A  	fcall	_clcd_print
  8073     1620                     l4651:
  8074                           
  8075                           ;cbb.c: 304:     clcd_print("SUCCESSFULL", (0xC0 + 0));
  8076     1620  301E               	movlw	low (STR_29| (0+32768))
  8077     1621  00F6               	movwf	clcd_print@str
  8078     1622  3089               	movlw	high (STR_29| (0+32768))
  8079     1623  00F7               	movwf	clcd_print@str+1
  8080     1624  30C0               	movlw	192
  8081     1625  00F8               	movwf	clcd_print@addr
  8082     1626  120A  158A  219C  160A  118A  	fcall	_clcd_print
  8083     162B                     l4653:
  8084                           
  8085                           ;cbb.c: 305:     unsigned char clear = 0x00;
  8086     162B  1283               	bcf	3,5	;RP0=0, select bank0
  8087     162C  1303               	bcf	3,6	;RP1=0, select bank0
  8088     162D  01A3               	clrf	clear_log@clear
  8089     162E                     l4655:
  8090                           
  8091                           ;cbb.c: 306:     for(unsigned char i = 5; i<=120; i++)
  8092     162E  3005               	movlw	5
  8093     162F  00A4               	movwf	clear_log@i
  8094     1630                     l4661:
  8095                           
  8096                           ;cbb.c: 307:     {;cbb.c: 308:         ext_eeprom_24C02_byte_write(i,clear);
  8097     1630  0823               	movf	clear_log@clear,w
  8098     1631  00F3               	movwf	ext_eeprom_24C02_byte_write@data
  8099     1632  0824               	movf	clear_log@i,w
  8100     1633  160A  118A  232A  160A  118A  	fcall	_ext_eeprom_24C02_byte_write
  8101     1638                     l4663:
  8102                           
  8103                           ;cbb.c: 309:     }
  8104     1638  3001               	movlw	1
  8105     1639  1283               	bcf	3,5	;RP0=0, select bank0
  8106     163A  1303               	bcf	3,6	;RP1=0, select bank0
  8107     163B  07A4               	addwf	clear_log@i,f
  8108     163C                     l4665:
  8109     163C  3079               	movlw	121
  8110     163D  0224               	subwf	clear_log@i,w
  8111     163E  1C03               	skipc
  8112     163F  2E41               	goto	u4601
  8113     1640  2E42               	goto	u4600
  8114     1641                     u4601:
  8115     1641  2E30               	goto	l4661
  8116     1642                     u4600:
  8117     1642                     l4667:
  8118                           
  8119                           ;cbb.c: 310:     pos = 0;
  8120     1642  01CE               	clrf	_pos
  8121     1643                     l4669:
  8122                           
  8123                           ;cbb.c: 311:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  8124     1643  3027               	movlw	39
  8125     1644  1283               	bcf	3,5	;RP0=0, select bank0
  8126     1645  1303               	bcf	3,6	;RP1=0, select bank0
  8127     1646  00A2               	movwf	??_clear_log+2
  8128     1647  300D               	movlw	13
  8129     1648  00A1               	movwf	??_clear_log+1
  8130     1649  3025               	movlw	37
  8131     164A  00A0               	movwf	??_clear_log
  8132     164B                     u5197:
  8133     164B  0BA0               	decfsz	??_clear_log,f
  8134     164C  2E4B               	goto	u5197
  8135     164D  0BA1               	decfsz	??_clear_log+1,f
  8136     164E  2E4B               	goto	u5197
  8137     164F  0BA2               	decfsz	??_clear_log+2,f
  8138     1650  2E4B               	goto	u5197
  8139     1651  2E52               	nop2
  8140     1652                     l4671:
  8141                           
  8142                           ;cbb.c: 312:     clear_screen();
  8143     1652  160A  118A  2256  160A  118A  	fcall	_clear_screen
  8144     1657                     l236:
  8145     1657  0008               	return
  8146     1658                     __end_of_clear_log:
  8147                           
  8148                           	psect	text32
  8149     0E93                     __ptext32:	
  8150 ;; *************** function _change_password *****************
  8151 ;; Defined at:
  8152 ;;		line 446 in file "cbb.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  wait            1   30[BANK0 ] unsigned char 
  8157 ;;  wait            2   26[BANK0 ] unsigned int 
  8158 ;;  i               1   33[BANK0 ] unsigned char 
  8159 ;;  key             1   32[BANK0 ] unsigned char 
  8160 ;;  flag            1   31[BANK0 ] unsigned char 
  8161 ;;  add             1   29[BANK0 ] unsigned char 
  8162 ;;  pwd_arr         5   21[BANK0 ] unsigned char [5]
  8163 ;;  res             1   28[BANK0 ] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      unsigned char 
  8166 ;; Registers used:
  8167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8173 ;;      Params:         0       0       0       0       0
  8174 ;;      Locals:         0      13       0       0       0
  8175 ;;      Temps:          0       3       0       0       0
  8176 ;;      Totals:         0      16       0       0       0
  8177 ;;Total ram usage:       16 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; Hardware stack levels required when called: 6
  8180 ;; This function calls:
  8181 ;;		_clcd_print
  8182 ;;		_clcd_putch
  8183 ;;		_clcd_write
  8184 ;;		_clear_screen
  8185 ;;		_compare_pwd
  8186 ;;		_ext_eeprom_24C02_str_write
  8187 ;;		_read_digital_keypad
  8188 ;; This function is called by:
  8189 ;;		_main
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193     0E93                     _change_password:	
  8194                           ;psect for function _change_password
  8195                           
  8196     0E93                     l4827:	
  8197                           ;incstack = 0
  8198                           ; Regs used in _change_password: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8199                           
  8200                           
  8201                           ;cbb.c: 448:     unsigned char pwd_arr[5],res;;cbb.c: 449:     clear_screen();
  8202     0E93  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8203     0E98                     l4829:
  8204                           
  8205                           ;cbb.c: 450:     clcd_print("ENTER OLD PWD", (0x80 + 0));
  8206     0E98  30C0               	movlw	low (STR_37| (0+32768))
  8207     0E99  00F6               	movwf	clcd_print@str
  8208     0E9A  3088               	movlw	high (STR_37| (0+32768))
  8209     0E9B  00F7               	movwf	clcd_print@str+1
  8210     0E9C  3080               	movlw	128
  8211     0E9D  00F8               	movwf	clcd_print@addr
  8212     0E9E  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8213     0EA3                     l4831:
  8214                           
  8215                           ;cbb.c: 451:     res = compare_pwd(0x01);
  8216     0EA3  3001               	movlw	1
  8217     0EA4  120A  158A  2574  120A  158A  	fcall	_compare_pwd
  8218     0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  8219     0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  8220     0EAB  00BC               	movwf	change_password@res
  8221     0EAC                     l4833:
  8222                           
  8223                           ;cbb.c: 452:     if(res == 0x11)
  8224     0EAC  3011               	movlw	17
  8225     0EAD  063C               	xorwf	change_password@res,w
  8226     0EAE  1D03               	btfss	3,2
  8227     0EAF  2EB1               	goto	u4741
  8228     0EB0  2EB2               	goto	u4740
  8229     0EB1                     u4741:
  8230     0EB1  2FFE               	goto	l4931
  8231     0EB2                     u4740:
  8232     0EB2                     l4835:
  8233                           
  8234                           ;cbb.c: 453:     {;cbb.c: 454:     clear_screen();
  8235     0EB2  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8236     0EB7                     l4837:
  8237                           
  8238                           ;cbb.c: 455:     clcd_print("ENTER NEW PWD", (0x80 + 0));
  8239     0EB7  30CE               	movlw	low (STR_38| (0+32768))
  8240     0EB8  00F6               	movwf	clcd_print@str
  8241     0EB9  3088               	movlw	high (STR_38| (0+32768))
  8242     0EBA  00F7               	movwf	clcd_print@str+1
  8243     0EBB  3080               	movlw	128
  8244     0EBC  00F8               	movwf	clcd_print@addr
  8245     0EBD  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8246     0EC2                     l4839:
  8247                           
  8248                           ;cbb.c: 456:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  8249     0EC2  3027               	movlw	39
  8250     0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  8251     0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  8252     0EC5  00B4               	movwf	??_change_password+2
  8253     0EC6  300D               	movlw	13
  8254     0EC7  00B3               	movwf	??_change_password+1
  8255     0EC8  3025               	movlw	37
  8256     0EC9  00B2               	movwf	??_change_password
  8257     0ECA                     u5207:
  8258     0ECA  0BB2               	decfsz	??_change_password,f
  8259     0ECB  2ECA               	goto	u5207
  8260     0ECC  0BB3               	decfsz	??_change_password+1,f
  8261     0ECD  2ECA               	goto	u5207
  8262     0ECE  0BB4               	decfsz	??_change_password+2,f
  8263     0ECF  2ECA               	goto	u5207
  8264     0ED0  2ED1               	nop2
  8265     0ED1                     l4841:
  8266                           
  8267                           ;cbb.c: 457:     clear_screen();
  8268     0ED1  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8269     0ED6                     l4843:
  8270                           
  8271                           ;cbb.c: 458:     clcd_print("4 DIGIT TO SET", (0x80 + 0));
  8272     0ED6  3093               	movlw	low (STR_39| (0+32768))
  8273     0ED7  00F6               	movwf	clcd_print@str
  8274     0ED8  3088               	movlw	high (STR_39| (0+32768))
  8275     0ED9  00F7               	movwf	clcd_print@str+1
  8276     0EDA  3080               	movlw	128
  8277     0EDB  00F8               	movwf	clcd_print@addr
  8278     0EDC  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8279     0EE1                     l4845:
  8280                           
  8281                           ;cbb.c: 459:     clcd_print("OR CANCEL", (0xC0 + 0));
  8282     0EE1  3034               	movlw	low (STR_40| (0+32768))
  8283     0EE2  00F6               	movwf	clcd_print@str
  8284     0EE3  3089               	movlw	high (STR_40| (0+32768))
  8285     0EE4  00F7               	movwf	clcd_print@str+1
  8286     0EE5  30C0               	movlw	192
  8287     0EE6  00F8               	movwf	clcd_print@addr
  8288     0EE7  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8289     0EEC                     l4847:
  8290                           
  8291                           ;cbb.c: 460:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  8292     0EEC  3027               	movlw	39
  8293     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  8294     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  8295     0EEF  00B4               	movwf	??_change_password+2
  8296     0EF0  300D               	movlw	13
  8297     0EF1  00B3               	movwf	??_change_password+1
  8298     0EF2  3025               	movlw	37
  8299     0EF3  00B2               	movwf	??_change_password
  8300     0EF4                     u5217:
  8301     0EF4  0BB2               	decfsz	??_change_password,f
  8302     0EF5  2EF4               	goto	u5217
  8303     0EF6  0BB3               	decfsz	??_change_password+1,f
  8304     0EF7  2EF4               	goto	u5217
  8305     0EF8  0BB4               	decfsz	??_change_password+2,f
  8306     0EF9  2EF4               	goto	u5217
  8307     0EFA  2EFB               	nop2
  8308     0EFB                     l4849:
  8309                           
  8310                           ;cbb.c: 461:     clear_screen();
  8311     0EFB  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8312     0F00                     l4851:
  8313                           
  8314                           ;cbb.c: 462:     clcd_print("ENTER NEW PWRD", (0x80 + 0));
  8315     0F00  3084               	movlw	low (STR_41| (0+32768))
  8316     0F01  00F6               	movwf	clcd_print@str
  8317     0F02  3088               	movlw	high (STR_41| (0+32768))
  8318     0F03  00F7               	movwf	clcd_print@str+1
  8319     0F04  3080               	movlw	128
  8320     0F05  00F8               	movwf	clcd_print@addr
  8321     0F06  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8322     0F0B                     l4853:
  8323     0F0B                     l4855:
  8324     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  8325     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  8326     0F0D  01C1               	clrf	change_password@i
  8327     0F0E                     l4857:
  8328     0F0E  01BF               	clrf	change_password@flag
  8329     0F0F                     l4859:
  8330     0F0F  01BD               	clrf	change_password@add
  8331                           
  8332                           ;cbb.c: 464:     clcd_write(0x0F,0);
  8333     0F10  01F2               	clrf	clcd_write@mode
  8334     0F11  300F               	movlw	15
  8335     0F12  160A  118A  2528  120A  158A  	fcall	_clcd_write
  8336     0F17                     l274:	
  8337                           ;cbb.c: 465:     while(1)
  8338                           
  8339                           
  8340                           ;cbb.c: 466:     {;cbb.c: 467:         key = read_digital_keypad(1);
  8341     0F17  3001               	movlw	1
  8342     0F18  160A  118A  26F7  120A  158A  	fcall	_read_digital_keypad
  8343     0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  8344     0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  8345     0F1F  00C0               	movwf	change_password@key
  8346     0F20                     l4861:
  8347                           
  8348                           ;cbb.c: 468:         for(unsigned int wait = 1000;wait--;);
  8349     0F20  30E8               	movlw	232
  8350     0F21  00BA               	movwf	change_password@wait
  8351     0F22  3003               	movlw	3
  8352     0F23  00BB               	movwf	change_password@wait+1
  8353     0F24                     l4863:
  8354     0F24  3001               	movlw	1
  8355     0F25  02BA               	subwf	change_password@wait,f
  8356     0F26  3000               	movlw	0
  8357     0F27  1C03               	skipc
  8358     0F28  03BB               	decf	change_password@wait+1,f
  8359     0F29  02BB               	subwf	change_password@wait+1,f
  8360     0F2A  0A3A               	incf	change_password@wait,w
  8361     0F2B  1D03               	skipz
  8362     0F2C  2F31               	goto	u4751
  8363     0F2D  0A3B               	incf	change_password@wait+1,w
  8364     0F2E  1D03               	btfss	3,2
  8365     0F2F  2F31               	goto	u4751
  8366     0F30  2F32               	goto	u4750
  8367     0F31                     u4751:
  8368     0F31  2F24               	goto	l4863
  8369     0F32                     u4750:
  8370     0F32                     l4865:
  8371                           
  8372                           ;cbb.c: 469:         if(key == 0x37 && i<4)
  8373     0F32  3037               	movlw	55
  8374     0F33  0640               	xorwf	change_password@key,w
  8375     0F34  1D03               	btfss	3,2
  8376     0F35  2F37               	goto	u4761
  8377     0F36  2F38               	goto	u4760
  8378     0F37                     u4761:
  8379     0F37  2F5A               	goto	l4879
  8380     0F38                     u4760:
  8381     0F38                     l4867:
  8382     0F38  3004               	movlw	4
  8383     0F39  0241               	subwf	change_password@i,w
  8384     0F3A  1803               	skipnc
  8385     0F3B  2F3D               	goto	u4771
  8386     0F3C  2F3E               	goto	u4770
  8387     0F3D                     u4771:
  8388     0F3D  2F5A               	goto	l4879
  8389     0F3E                     u4770:
  8390     0F3E                     l4869:
  8391                           
  8392                           ;cbb.c: 470:         {;cbb.c: 471:             pwd_arr[i++] = '1';
  8393     0F3E  0841               	movf	change_password@i,w
  8394     0F3F  3E35               	addlw	(low (change_password@pwd_arr| 0))& (0+255)
  8395     0F40  0084               	movwf	4
  8396     0F41  3031               	movlw	49
  8397     0F42  1383               	bcf	3,7	;select IRP bank0
  8398     0F43  0080               	movwf	0
  8399     0F44                     l4871:
  8400     0F44  3001               	movlw	1
  8401     0F45  07C1               	addwf	change_password@i,f
  8402     0F46                     l4873:
  8403                           
  8404                           ;cbb.c: 472:             clcd_putch('*', (0xC0 + i+4));
  8405     0F46  0841               	movf	change_password@i,w
  8406     0F47  3EC4               	addlw	196
  8407     0F48  00A7               	movwf	clcd_putch@addr
  8408     0F49  302A               	movlw	42
  8409     0F4A  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  8410     0F4F                     l4875:
  8411                           
  8412                           ;cbb.c: 473:             if(i == 4)
  8413     0F4F  3004               	movlw	4
  8414     0F50  1283               	bcf	3,5	;RP0=0, select bank0
  8415     0F51  1303               	bcf	3,6	;RP1=0, select bank0
  8416     0F52  0641               	xorwf	change_password@i,w
  8417     0F53  1D03               	btfss	3,2
  8418     0F54  2F56               	goto	u4781
  8419     0F55  2F57               	goto	u4780
  8420     0F56                     u4781:
  8421     0F56  2F80               	goto	l4893
  8422     0F57                     u4780:
  8423     0F57                     l4877:
  8424                           
  8425                           ;cbb.c: 474:                 flag =1;
  8426     0F57  3001               	movlw	1
  8427     0F58  00BF               	movwf	change_password@flag
  8428     0F59  2F80               	goto	l4893
  8429     0F5A                     l4879:
  8430     0F5A  302F               	movlw	47
  8431     0F5B  0640               	xorwf	change_password@key,w
  8432     0F5C  1D03               	btfss	3,2
  8433     0F5D  2F5F               	goto	u4791
  8434     0F5E  2F60               	goto	u4790
  8435     0F5F                     u4791:
  8436     0F5F  2F80               	goto	l4893
  8437     0F60                     u4790:
  8438     0F60                     l4881:
  8439     0F60  3004               	movlw	4
  8440     0F61  0241               	subwf	change_password@i,w
  8441     0F62  1803               	skipnc
  8442     0F63  2F65               	goto	u4801
  8443     0F64  2F66               	goto	u4800
  8444     0F65                     u4801:
  8445     0F65  2F80               	goto	l4893
  8446     0F66                     u4800:
  8447     0F66                     l4883:
  8448                           
  8449                           ;cbb.c: 477:         {;cbb.c: 478:             pwd_arr[i++] = '0';
  8450     0F66  0841               	movf	change_password@i,w
  8451     0F67  3E35               	addlw	(low (change_password@pwd_arr| 0))& (0+255)
  8452     0F68  0084               	movwf	4
  8453     0F69  3030               	movlw	48
  8454     0F6A  1383               	bcf	3,7	;select IRP bank0
  8455     0F6B  0080               	movwf	0
  8456     0F6C                     l4885:
  8457     0F6C  3001               	movlw	1
  8458     0F6D  07C1               	addwf	change_password@i,f
  8459     0F6E                     l4887:
  8460                           
  8461                           ;cbb.c: 479:             clcd_putch('*', (0xC0 + i+4));
  8462     0F6E  0841               	movf	change_password@i,w
  8463     0F6F  3EC4               	addlw	196
  8464     0F70  00A7               	movwf	clcd_putch@addr
  8465     0F71  302A               	movlw	42
  8466     0F72  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  8467     0F77                     l4889:
  8468                           
  8469                           ;cbb.c: 480:             if(i == 4)
  8470     0F77  3004               	movlw	4
  8471     0F78  1283               	bcf	3,5	;RP0=0, select bank0
  8472     0F79  1303               	bcf	3,6	;RP1=0, select bank0
  8473     0F7A  0641               	xorwf	change_password@i,w
  8474     0F7B  1D03               	btfss	3,2
  8475     0F7C  2F7E               	goto	u4811
  8476     0F7D  2F7F               	goto	u4810
  8477     0F7E                     u4811:
  8478     0F7E  2F80               	goto	l4893
  8479     0F7F                     u4810:
  8480     0F7F  2F57               	goto	l4877
  8481     0F80                     l4893:
  8482                           
  8483                           ;cbb.c: 483:         pwd_arr[i] = '\0';
  8484     0F80  0841               	movf	change_password@i,w
  8485     0F81  3E35               	addlw	(low (change_password@pwd_arr| 0))& (0+255)
  8486     0F82  0084               	movwf	4
  8487     0F83  1383               	bcf	3,7	;select IRP bank0
  8488     0F84  0180               	clrf	0
  8489     0F85                     l4895:
  8490                           
  8491                           ;cbb.c: 484:         if(key == 0xB7 && flag)
  8492     0F85  30B7               	movlw	183
  8493     0F86  0640               	xorwf	change_password@key,w
  8494     0F87  1D03               	btfss	3,2
  8495     0F88  2F8A               	goto	u4821
  8496     0F89  2F8B               	goto	u4820
  8497     0F8A                     u4821:
  8498     0F8A  2FE6               	goto	l4925
  8499     0F8B                     u4820:
  8500     0F8B                     l4897:
  8501     0F8B  083F               	movf	change_password@flag,w
  8502     0F8C  1903               	btfsc	3,2
  8503     0F8D  2F8F               	goto	u4831
  8504     0F8E  2F90               	goto	u4830
  8505     0F8F                     u4831:
  8506     0F8F  2FE6               	goto	l4925
  8507     0F90                     u4830:
  8508     0F90                     l4899:
  8509                           
  8510                           ;cbb.c: 485:         {;cbb.c: 486:             clcd_write(0x0C,0);
  8511     0F90  01F2               	clrf	clcd_write@mode
  8512     0F91  300C               	movlw	12
  8513     0F92  160A  118A  2528  120A  158A  	fcall	_clcd_write
  8514     0F97                     l4901:
  8515                           
  8516                           ;cbb.c: 487:             if(i == 4)
  8517     0F97  3004               	movlw	4
  8518     0F98  1283               	bcf	3,5	;RP0=0, select bank0
  8519     0F99  1303               	bcf	3,6	;RP1=0, select bank0
  8520     0F9A  0641               	xorwf	change_password@i,w
  8521     0F9B  1D03               	btfss	3,2
  8522     0F9C  2F9E               	goto	u4841
  8523     0F9D  2F9F               	goto	u4840
  8524     0F9E                     u4841:
  8525     0F9E  2F17               	goto	l274
  8526     0F9F                     u4840:
  8527     0F9F                     l4903:
  8528                           
  8529                           ;cbb.c: 488:             {;cbb.c: 489:             ext_eeprom_24C02_str_write(add,&pwd_a
      +                          rr);
  8530     0F9F  3035               	movlw	(low (change_password@pwd_arr| 0))& (0+255)
  8531     0FA0  00F5               	movwf	ext_eeprom_24C02_str_write@str
  8532     0FA1  083D               	movf	change_password@add,w
  8533     0FA2  160A  118A  22F6  120A  158A  	fcall	_ext_eeprom_24C02_str_write
  8534     0FA7                     l4905:
  8535                           
  8536                           ;cbb.c: 490:             for(unsigned char wait = 100;wait--;);
  8537     0FA7  3064               	movlw	100
  8538     0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  8539     0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  8540     0FAA  00BE               	movwf	change_password@wait_327
  8541     0FAB                     l4907:
  8542     0FAB  3001               	movlw	1
  8543     0FAC  02BE               	subwf	change_password@wait_327,f
  8544     0FAD  0A3E               	incf	change_password@wait_327,w
  8545     0FAE  1D03               	btfss	3,2
  8546     0FAF  2FB1               	goto	u4851
  8547     0FB0  2FB2               	goto	u4850
  8548     0FB1                     u4851:
  8549     0FB1  2FAB               	goto	l4907
  8550     0FB2                     u4850:
  8551     0FB2                     l4909:
  8552                           
  8553                           ;cbb.c: 491:             clear_screen();
  8554     0FB2  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8555     0FB7                     l4911:
  8556                           
  8557                           ;cbb.c: 492:             clcd_print("PASSWORD CHANGED", (0x80 + 0));
  8558     0FB7  3013               	movlw	low (STR_42| (0+32768))
  8559     0FB8  00F6               	movwf	clcd_print@str
  8560     0FB9  3088               	movlw	high (STR_42| (0+32768))
  8561     0FBA  00F7               	movwf	clcd_print@str+1
  8562     0FBB  3080               	movlw	128
  8563     0FBC  00F8               	movwf	clcd_print@addr
  8564     0FBD  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8565     0FC2                     l4913:
  8566                           
  8567                           ;cbb.c: 493:             clcd_print("SUCCESSFULLY", (0xC0 + 0));
  8568     0FC2  3004               	movlw	low (STR_32| (0+32768))
  8569     0FC3  00F6               	movwf	clcd_print@str
  8570     0FC4  3089               	movlw	high (STR_32| (0+32768))
  8571     0FC5  00F7               	movwf	clcd_print@str+1
  8572     0FC6  30C0               	movlw	192
  8573     0FC7  00F8               	movwf	clcd_print@addr
  8574     0FC8  120A  158A  219C  120A  158A  	fcall	_clcd_print
  8575     0FCD                     l4915:
  8576                           
  8577                           ;cbb.c: 494:             pwd_flag = 0;
  8578     0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  8579     0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  8580     0FCF  01E4               	clrf	_pwd_flag
  8581     0FD0                     l4917:
  8582                           
  8583                           ;cbb.c: 495:             _delay((unsigned long)((1500)*(20000000/4000.0)));
  8584     0FD0  3027               	movlw	39
  8585     0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8586     0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8587     0FD3  00B4               	movwf	??_change_password+2
  8588     0FD4  300D               	movlw	13
  8589     0FD5  00B3               	movwf	??_change_password+1
  8590     0FD6  3025               	movlw	37
  8591     0FD7  00B2               	movwf	??_change_password
  8592     0FD8                     u5227:
  8593     0FD8  0BB2               	decfsz	??_change_password,f
  8594     0FD9  2FD8               	goto	u5227
  8595     0FDA  0BB3               	decfsz	??_change_password+1,f
  8596     0FDB  2FD8               	goto	u5227
  8597     0FDC  0BB4               	decfsz	??_change_password+2,f
  8598     0FDD  2FD8               	goto	u5227
  8599     0FDE  2FDF               	nop2
  8600     0FDF                     l4919:
  8601                           
  8602                           ;cbb.c: 496:             clear_screen();
  8603     0FDF  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8604     0FE4                     l4921:
  8605                           
  8606                           ;cbb.c: 497:             return 0x11;
  8607     0FE4  3011               	movlw	17
  8608     0FE5  2FFF               	goto	l288
  8609     0FE6                     l4925:
  8610     0FE6  30AF               	movlw	175
  8611     0FE7  0640               	xorwf	change_password@key,w
  8612     0FE8  1D03               	btfss	3,2
  8613     0FE9  2FEB               	goto	u4861
  8614     0FEA  2FEC               	goto	u4860
  8615     0FEB                     u4861:
  8616     0FEB  2F17               	goto	l274
  8617     0FEC                     u4860:
  8618     0FEC                     l4927:
  8619     0FEC  083F               	movf	change_password@flag,w
  8620     0FED  1903               	btfsc	3,2
  8621     0FEE  2FF0               	goto	u4871
  8622     0FEF  2FF1               	goto	u4870
  8623     0FF0                     u4871:
  8624     0FF0  2F17               	goto	l274
  8625     0FF1                     u4870:
  8626     0FF1                     l4929:
  8627                           
  8628                           ;cbb.c: 501:         {;cbb.c: 502:             clcd_write(0x0C,0);
  8629     0FF1  01F2               	clrf	clcd_write@mode
  8630     0FF2  300C               	movlw	12
  8631     0FF3  160A  118A  2528  120A  158A  	fcall	_clcd_write
  8632                           
  8633                           ;cbb.c: 503:             clear_screen();
  8634     0FF8  160A  118A  2256  120A  158A  	fcall	_clear_screen
  8635                           
  8636                           ;cbb.c: 504:             break;
  8637     0FFD  2FFF               	goto	l288
  8638     0FFE                     l4931:
  8639                           
  8640                           ;cbb.c: 509:     {;cbb.c: 510:         return 0x22;
  8641     0FFE  3022               	movlw	34
  8642     0FFF                     l288:
  8643     0FFF  0008               	return
  8644     1000                     __end_of_change_password:
  8645                           
  8646                           	psect	text33
  8647     12F6                     __ptext33:	
  8648 ;; *************** function _ext_eeprom_24C02_str_write *****************
  8649 ;; Defined at:
  8650 ;;		line 27 in file "EEprom.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  addr            1    wreg     unsigned char 
  8653 ;;  str             1    5[COMMON] PTR unsigned char 
  8654 ;;		 -> change_password@pwd_arr(5), log(12), 
  8655 ;; Auto vars:     Size  Location     Type
  8656 ;;  addr            1    6[COMMON] unsigned char 
  8657 ;; Return value:  Size  Location     Type
  8658 ;;                  1    wreg      void 
  8659 ;; Registers used:
  8660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8661 ;; Tracked objects:
  8662 ;;		On entry : 0/0
  8663 ;;		On exit  : 0/0
  8664 ;;		Unchanged: 0/0
  8665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8666 ;;      Params:         1       0       0       0       0
  8667 ;;      Locals:         1       0       0       0       0
  8668 ;;      Temps:          0       0       0       0       0
  8669 ;;      Totals:         2       0       0       0       0
  8670 ;;Total ram usage:        2 bytes
  8671 ;; Hardware stack levels used: 1
  8672 ;; Hardware stack levels required when called: 4
  8673 ;; This function calls:
  8674 ;;		_ext_eeprom_24C02_byte_write
  8675 ;; This function is called by:
  8676 ;;		_log_event
  8677 ;;		_change_password
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681     12F6                     _ext_eeprom_24C02_str_write:	
  8682                           ;psect for function _ext_eeprom_24C02_str_write
  8683                           
  8684                           
  8685                           ;incstack = 0
  8686                           ; Regs used in _ext_eeprom_24C02_str_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8687                           ;ext_eeprom_24C02_str_write@addr stored from wreg
  8688     12F6  00F6               	movwf	ext_eeprom_24C02_str_write@addr
  8689     12F7                     l3923:
  8690                           
  8691                           ;EEprom.c: 28:     while (*str != '\0') {
  8692     12F7  2B06               	goto	l3931
  8693     12F8                     l3925:
  8694                           
  8695                           ;EEprom.c: 29:         ext_eeprom_24C02_byte_write(addr, *str);
  8696     12F8  0875               	movf	ext_eeprom_24C02_str_write@str,w
  8697     12F9  0084               	movwf	4
  8698     12FA  0800               	movf	0,w
  8699     12FB  00F3               	movwf	ext_eeprom_24C02_byte_write@data
  8700     12FC  0876               	movf	ext_eeprom_24C02_str_write@addr,w
  8701     12FD  160A  118A  232A  160A  118A  	fcall	_ext_eeprom_24C02_byte_write
  8702     1302                     l3927:
  8703                           
  8704                           ;EEprom.c: 30:         addr++;
  8705     1302  3001               	movlw	1
  8706     1303  07F6               	addwf	ext_eeprom_24C02_str_write@addr,f
  8707     1304                     l3929:
  8708                           
  8709                           ;EEprom.c: 31:         str++;
  8710     1304  3001               	movlw	1
  8711     1305  07F5               	addwf	ext_eeprom_24C02_str_write@str,f
  8712     1306                     l3931:
  8713                           
  8714                           ;EEprom.c: 28:     while (*str != '\0') {
  8715     1306  0875               	movf	ext_eeprom_24C02_str_write@str,w
  8716     1307  0084               	movwf	4
  8717     1308  1383               	bcf	3,7	;select IRP bank0
  8718     1309  0800               	movf	0,w
  8719     130A  1D03               	btfss	3,2
  8720     130B  2B0D               	goto	u3561
  8721     130C  2B0E               	goto	u3560
  8722     130D                     u3561:
  8723     130D  2AF8               	goto	l3925
  8724     130E                     u3560:
  8725     130E                     l506:
  8726     130E  0008               	return
  8727     130F                     __end_of_ext_eeprom_24C02_str_write:
  8728                           
  8729                           	psect	text34
  8730     132A                     __ptext34:	
  8731 ;; *************** function _ext_eeprom_24C02_byte_write *****************
  8732 ;; Defined at:
  8733 ;;		line 19 in file "EEprom.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  addr            1    wreg     unsigned char 
  8736 ;;  data            1    3[COMMON] unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  addr            1    4[COMMON] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, pclath, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8748 ;;      Params:         1       0       0       0       0
  8749 ;;      Locals:         1       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0
  8751 ;;      Totals:         2       0       0       0       0
  8752 ;;Total ram usage:        2 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 3
  8755 ;; This function calls:
  8756 ;;		_i2c_start
  8757 ;;		_i2c_stop
  8758 ;;		_i2c_write
  8759 ;; This function is called by:
  8760 ;;		_clear_log
  8761 ;;		_ext_eeprom_24C02_str_write
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765     132A                     _ext_eeprom_24C02_byte_write:	
  8766                           ;psect for function _ext_eeprom_24C02_byte_write
  8767                           
  8768                           
  8769                           ;incstack = 0
  8770                           ; Regs used in _ext_eeprom_24C02_byte_write: [wreg+status,2+status,0+pclath+cstack]
  8771                           ;ext_eeprom_24C02_byte_write@addr stored from wreg
  8772     132A  00F4               	movwf	ext_eeprom_24C02_byte_write@addr
  8773     132B                     l3831:
  8774                           
  8775                           ;EEprom.c: 20:     i2c_start();
  8776     132B  160A  118A  2266  160A  118A  	fcall	_i2c_start
  8777                           
  8778                           ;EEprom.c: 21:     i2c_write(0b10100000);
  8779     1330  30A0               	movlw	160
  8780     1331  160A  118A  228D  160A  118A  	fcall	_i2c_write
  8781                           
  8782                           ;EEprom.c: 22:     i2c_write(addr);
  8783     1336  0874               	movf	ext_eeprom_24C02_byte_write@addr,w
  8784     1337  160A  118A  228D  160A  118A  	fcall	_i2c_write
  8785                           
  8786                           ;EEprom.c: 23:     i2c_write(data);
  8787     133C  0873               	movf	ext_eeprom_24C02_byte_write@data,w
  8788     133D  160A  118A  228D  160A  118A  	fcall	_i2c_write
  8789                           
  8790                           ;EEprom.c: 24:     i2c_stop();
  8791     1342  160A  118A  226F  160A  118A  	fcall	_i2c_stop
  8792     1347                     l500:
  8793     1347  0008               	return
  8794     1348                     __end_of_ext_eeprom_24C02_byte_write:
  8795                           
  8796                           	psect	text35
  8797     0D74                     __ptext35:	
  8798 ;; *************** function _compare_pwd *****************
  8799 ;; Defined at:
  8800 ;;		line 513 in file "cbb.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  reset_flag      1    wreg     unsigned char 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  reset_flag      1   15[BANK0 ] unsigned char 
  8805 ;;  j               1   17[BANK0 ] unsigned char 
  8806 ;;  wait            2   12[BANK0 ] unsigned int 
  8807 ;;  key             1   16[BANK0 ] unsigned char 
  8808 ;;  add             1   14[BANK0 ] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      unsigned char 
  8811 ;; Registers used:
  8812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         0       0       0       0       0
  8819 ;;      Locals:         0       6       0       0       0
  8820 ;;      Temps:          0       3       0       0       0
  8821 ;;      Totals:         0       9       0       0       0
  8822 ;;Total ram usage:        9 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 5
  8825 ;; This function calls:
  8826 ;;		_clcd_print
  8827 ;;		_clcd_putch
  8828 ;;		_clcd_write
  8829 ;;		_clear_screen
  8830 ;;		_ext_eeprom_24C02_read
  8831 ;;		_read_digital_keypad
  8832 ;;		_strncmp
  8833 ;; This function is called by:
  8834 ;;		_change_password
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838     0D74                     _compare_pwd:	
  8839                           ;psect for function _compare_pwd
  8840                           
  8841                           
  8842                           ;incstack = 0
  8843                           ; Regs used in _compare_pwd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8844                           ;compare_pwd@reset_flag stored from wreg
  8845     0D74  1283               	bcf	3,5	;RP0=0, select bank0
  8846     0D75  1303               	bcf	3,6	;RP1=0, select bank0
  8847     0D76  00AF               	movwf	compare_pwd@reset_flag
  8848     0D77                     l4117:
  8849                           
  8850                           ;cbb.c: 513: unsigned char compare_pwd(unsigned char reset_flag);cbb.c: 514: {;cbb.c: 51
      +                          5:     static unsigned char user_pwd[4],saved_pwd[5];;cbb.c: 516:     static unsigned ch
      +                          ar i;;cbb.c: 517:     unsigned char add=0,key;
  8851     0D77  01AE               	clrf	compare_pwd@add
  8852     0D78                     l4119:
  8853                           
  8854                           ;cbb.c: 519:     if(pwd_flag)
  8855     0D78  0864               	movf	_pwd_flag,w
  8856     0D79  1903               	btfsc	3,2
  8857     0D7A  2D7C               	goto	u3821
  8858     0D7B  2D7D               	goto	u3820
  8859     0D7C                     u3821:
  8860     0D7C  2D9C               	goto	l4141
  8861     0D7D                     u3820:
  8862     0D7D                     l4121:
  8863                           
  8864                           ;cbb.c: 520:     {;cbb.c: 521:         if(reset_flag == 0x01)
  8865     0D7D  032F               	decf	compare_pwd@reset_flag,w
  8866     0D7E  1D03               	btfss	3,2
  8867     0D7F  2D81               	goto	u3831
  8868     0D80  2D82               	goto	u3830
  8869     0D81                     u3831:
  8870     0D81  2D95               	goto	l4135
  8871     0D82                     u3830:
  8872     0D82                     l4123:
  8873                           
  8874                           ;cbb.c: 522:         {;cbb.c: 523:             i=0;
  8875     0D82  01C8               	clrf	compare_pwd@i
  8876                           
  8877                           ;cbb.c: 524:             user_pwd[0] = '\0';
  8878     0D83  01D6               	clrf	compare_pwd@user_pwd
  8879                           
  8880                           ;cbb.c: 525:             user_pwd[1] = '\0';
  8881     0D84  01D7               	clrf	compare_pwd@user_pwd+1
  8882                           
  8883                           ;cbb.c: 526:             user_pwd[2] = '\0';
  8884     0D85  01D8               	clrf	compare_pwd@user_pwd+2
  8885                           
  8886                           ;cbb.c: 527:             user_pwd[3] = '\0';
  8887     0D86  01D9               	clrf	compare_pwd@user_pwd+3
  8888     0D87                     l4125:
  8889                           
  8890                           ;cbb.c: 528:             saved_pwd[0] = '1';
  8891     0D87  3031               	movlw	49
  8892     0D88  1683               	bsf	3,5	;RP0=1, select bank1
  8893     0D89  1303               	bcf	3,6	;RP1=0, select bank1
  8894     0D8A  00CA               	movwf	compare_pwd@saved_pwd^(0+128)
  8895     0D8B                     l4127:
  8896                           
  8897                           ;cbb.c: 529:             saved_pwd[1] = '1';
  8898     0D8B  3031               	movlw	49
  8899     0D8C  00CB               	movwf	(compare_pwd@saved_pwd^(0+128)+1)
  8900     0D8D                     l4129:
  8901                           
  8902                           ;cbb.c: 530:             saved_pwd[2] = '1';
  8903     0D8D  3031               	movlw	49
  8904     0D8E  00CC               	movwf	(compare_pwd@saved_pwd^(0+128)+2)
  8905     0D8F                     l4131:
  8906                           
  8907                           ;cbb.c: 531:             saved_pwd[3] = '1';
  8908     0D8F  3031               	movlw	49
  8909     0D90  00CD               	movwf	(compare_pwd@saved_pwd^(0+128)+3)
  8910     0D91                     l4133:
  8911                           
  8912                           ;cbb.c: 532:             return_time = 5;
  8913     0D91  3005               	movlw	5
  8914     0D92  1283               	bcf	3,5	;RP0=0, select bank0
  8915     0D93  1303               	bcf	3,6	;RP1=0, select bank0
  8916     0D94  00E5               	movwf	_return_time
  8917     0D95                     l4135:
  8918                           
  8919                           ;cbb.c: 535:         if(return_time == 0)
  8920     0D95  0865               	movf	_return_time,w
  8921     0D96  1D03               	btfss	3,2
  8922     0D97  2D99               	goto	u3841
  8923     0D98  2D9A               	goto	u3840
  8924     0D99                     u3841:
  8925     0D99  2DC5               	goto	l4163
  8926     0D9A                     u3840:
  8927     0D9A                     l4137:
  8928                           
  8929                           ;cbb.c: 536:         {;cbb.c: 537:             return 0x02;
  8930     0D9A  3002               	movlw	2
  8931     0D9B  2E92               	goto	l305
  8932     0D9C                     l4141:
  8933                           
  8934                           ;cbb.c: 541:     {;cbb.c: 542:     if(reset_flag == 0x01)
  8935     0D9C  032F               	decf	compare_pwd@reset_flag,w
  8936     0D9D  1D03               	btfss	3,2
  8937     0D9E  2DA0               	goto	u3851
  8938     0D9F  2DA1               	goto	u3850
  8939     0DA0                     u3851:
  8940     0DA0  2DBF               	goto	l4157
  8941     0DA1                     u3850:
  8942     0DA1                     l4143:
  8943                           
  8944                           ;cbb.c: 543:     {;cbb.c: 544:         i=0;
  8945     0DA1  01C8               	clrf	compare_pwd@i
  8946                           
  8947                           ;cbb.c: 545:         user_pwd[0] = '\0';
  8948     0DA2  01D6               	clrf	compare_pwd@user_pwd
  8949                           
  8950                           ;cbb.c: 546:         user_pwd[1] = '\0';
  8951     0DA3  01D7               	clrf	compare_pwd@user_pwd+1
  8952                           
  8953                           ;cbb.c: 547:         user_pwd[2] = '\0';
  8954     0DA4  01D8               	clrf	compare_pwd@user_pwd+2
  8955                           
  8956                           ;cbb.c: 548:         user_pwd[3] = '\0';
  8957     0DA5  01D9               	clrf	compare_pwd@user_pwd+3
  8958                           
  8959                           ;cbb.c: 549:         for(unsigned char j = 0; j<4; j++)
  8960     0DA6  01B1               	clrf	compare_pwd@j
  8961     0DA7                     l4149:
  8962                           
  8963                           ;cbb.c: 550:         {;cbb.c: 551:         saved_pwd[j] = ext_eeprom_24C02_read(add+j);
  8964     0DA7  0831               	movf	compare_pwd@j,w
  8965     0DA8  3ECA               	addlw	(low (compare_pwd@saved_pwd| 0))& (0+255)
  8966     0DA9  0084               	movwf	4
  8967     0DAA  0831               	movf	compare_pwd@j,w
  8968     0DAB  072E               	addwf	compare_pwd@add,w
  8969     0DAC  160A  118A  240D  120A  158A  	fcall	_ext_eeprom_24C02_read
  8970     0DB1  1383               	bcf	3,7	;select IRP bank1
  8971     0DB2  0080               	movwf	0
  8972     0DB3                     l4151:
  8973                           
  8974                           ;cbb.c: 552:         }
  8975     0DB3  3001               	movlw	1
  8976     0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  8977     0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  8978     0DB6  07B1               	addwf	compare_pwd@j,f
  8979     0DB7                     l4153:
  8980     0DB7  3004               	movlw	4
  8981     0DB8  0231               	subwf	compare_pwd@j,w
  8982     0DB9  1C03               	skipc
  8983     0DBA  2DBC               	goto	u3861
  8984     0DBB  2DBD               	goto	u3860
  8985     0DBC                     u3861:
  8986     0DBC  2DA7               	goto	l4149
  8987     0DBD                     u3860:
  8988     0DBD                     l309:
  8989                           
  8990                           ;cbb.c: 553:         return_time = 5;
  8991     0DBD  3005               	movlw	5
  8992     0DBE  00E5               	movwf	_return_time
  8993     0DBF                     l4155:
  8994     0DBF                     l4157:
  8995                           
  8996                           ;cbb.c: 556:     if(return_time == 0)
  8997     0DBF  0865               	movf	_return_time,w
  8998     0DC0  1D03               	btfss	3,2
  8999     0DC1  2DC3               	goto	u3871
  9000     0DC2  2DC4               	goto	u3870
  9001     0DC3                     u3871:
  9002     0DC3  2DC5               	goto	l4163
  9003     0DC4                     u3870:
  9004     0DC4  2D9A               	goto	l4137
  9005     0DC5                     l4163:
  9006                           
  9007                           ;cbb.c: 563:     {;cbb.c: 564:     key = read_digital_keypad(1);
  9008     0DC5  3001               	movlw	1
  9009     0DC6  160A  118A  26F7  120A  158A  	fcall	_read_digital_keypad
  9010     0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  9011     0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  9012     0DCD  00B0               	movwf	compare_pwd@key
  9013     0DCE                     l4165:
  9014                           
  9015                           ;cbb.c: 565:     for(unsigned int wait = 500;wait--;);
  9016     0DCE  30F4               	movlw	244
  9017     0DCF  00AC               	movwf	compare_pwd@wait
  9018     0DD0  3001               	movlw	1
  9019     0DD1  00AD               	movwf	compare_pwd@wait+1
  9020     0DD2                     l4167:
  9021     0DD2  3001               	movlw	1
  9022     0DD3  02AC               	subwf	compare_pwd@wait,f
  9023     0DD4  3000               	movlw	0
  9024     0DD5  1C03               	skipc
  9025     0DD6  03AD               	decf	compare_pwd@wait+1,f
  9026     0DD7  02AD               	subwf	compare_pwd@wait+1,f
  9027     0DD8  0A2C               	incf	compare_pwd@wait,w
  9028     0DD9  1D03               	skipz
  9029     0DDA  2DDF               	goto	u3881
  9030     0DDB  0A2D               	incf	compare_pwd@wait+1,w
  9031     0DDC  1D03               	btfss	3,2
  9032     0DDD  2DDF               	goto	u3881
  9033     0DDE  2DE0               	goto	u3880
  9034     0DDF                     u3881:
  9035     0DDF  2DD2               	goto	l4167
  9036     0DE0                     u3880:
  9037     0DE0                     l4169:
  9038                           
  9039                           ;cbb.c: 566:     if(i == 4)
  9040     0DE0  3004               	movlw	4
  9041     0DE1  0648               	xorwf	compare_pwd@i,w
  9042     0DE2  1D03               	btfss	3,2
  9043     0DE3  2DE5               	goto	u3891
  9044     0DE4  2DE6               	goto	u3890
  9045     0DE5                     u3891:
  9046     0DE5  2DE7               	goto	l4173
  9047     0DE6                     u3890:
  9048     0DE6  2E27               	goto	l4195
  9049     0DE7                     l4173:
  9050                           
  9051                           ;cbb.c: 568:     if(key == 0x37 && i<4)
  9052     0DE7  3037               	movlw	55
  9053     0DE8  0630               	xorwf	compare_pwd@key,w
  9054     0DE9  1D03               	btfss	3,2
  9055     0DEA  2DEC               	goto	u3901
  9056     0DEB  2DED               	goto	u3900
  9057     0DEC                     u3901:
  9058     0DEC  2E09               	goto	l4185
  9059     0DED                     u3900:
  9060     0DED                     l4175:
  9061     0DED  3004               	movlw	4
  9062     0DEE  0248               	subwf	compare_pwd@i,w
  9063     0DEF  1803               	skipnc
  9064     0DF0  2DF2               	goto	u3911
  9065     0DF1  2DF3               	goto	u3910
  9066     0DF2                     u3911:
  9067     0DF2  2E09               	goto	l4185
  9068     0DF3                     u3910:
  9069     0DF3                     l4177:
  9070                           
  9071                           ;cbb.c: 569:     {;cbb.c: 570:         user_pwd[i++] = '1';
  9072     0DF3  0848               	movf	compare_pwd@i,w
  9073     0DF4  3E56               	addlw	(low (compare_pwd@user_pwd| 0))& (0+255)
  9074     0DF5  0084               	movwf	4
  9075     0DF6  3031               	movlw	49
  9076     0DF7  1383               	bcf	3,7	;select IRP bank0
  9077     0DF8  0080               	movwf	0
  9078     0DF9                     l4179:
  9079     0DF9  3001               	movlw	1
  9080     0DFA  07C8               	addwf	compare_pwd@i,f
  9081     0DFB                     l4181:
  9082                           
  9083                           ;cbb.c: 571:         clcd_putch('*',(0xC0 + i + 4));
  9084     0DFB  0848               	movf	compare_pwd@i,w
  9085     0DFC  3EC4               	addlw	196
  9086     0DFD  00A7               	movwf	clcd_putch@addr
  9087     0DFE  302A               	movlw	42
  9088     0DFF  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  9089     0E04                     l4183:
  9090                           
  9091                           ;cbb.c: 572:         return_time = 5;
  9092     0E04  3005               	movlw	5
  9093     0E05  1283               	bcf	3,5	;RP0=0, select bank0
  9094     0E06  1303               	bcf	3,6	;RP1=0, select bank0
  9095     0E07  00E5               	movwf	_return_time
  9096                           
  9097                           ;cbb.c: 573:     }
  9098     0E08  2DC5               	goto	l4163
  9099     0E09                     l4185:
  9100     0E09  302F               	movlw	47
  9101     0E0A  0630               	xorwf	compare_pwd@key,w
  9102     0E0B  1D03               	btfss	3,2
  9103     0E0C  2E0E               	goto	u3921
  9104     0E0D  2E0F               	goto	u3920
  9105     0E0E                     u3921:
  9106     0E0E  2DC5               	goto	l4163
  9107     0E0F                     u3920:
  9108     0E0F                     l4187:
  9109     0E0F  3004               	movlw	4
  9110     0E10  0248               	subwf	compare_pwd@i,w
  9111     0E11  1803               	skipnc
  9112     0E12  2E14               	goto	u3931
  9113     0E13  2E15               	goto	u3930
  9114     0E14                     u3931:
  9115     0E14  2DC5               	goto	l4163
  9116     0E15                     u3930:
  9117     0E15                     l4189:
  9118                           
  9119                           ;cbb.c: 575:     {;cbb.c: 576:         user_pwd[i++] = '0';
  9120     0E15  0848               	movf	compare_pwd@i,w
  9121     0E16  3E56               	addlw	(low (compare_pwd@user_pwd| 0))& (0+255)
  9122     0E17  0084               	movwf	4
  9123     0E18  3030               	movlw	48
  9124     0E19  1383               	bcf	3,7	;select IRP bank0
  9125     0E1A  0080               	movwf	0
  9126     0E1B                     l4191:
  9127     0E1B  3001               	movlw	1
  9128     0E1C  07C8               	addwf	compare_pwd@i,f
  9129     0E1D                     l4193:
  9130                           
  9131                           ;cbb.c: 577:         clcd_putch('*',(0xC0 + i + 4));
  9132     0E1D  0848               	movf	compare_pwd@i,w
  9133     0E1E  3EC4               	addlw	196
  9134     0E1F  00A7               	movwf	clcd_putch@addr
  9135     0E20  302A               	movlw	42
  9136     0E21  160A  118A  22E1  120A  158A  	fcall	_clcd_putch
  9137     0E26  2DC5               	goto	l4163
  9138     0E27                     l4195:
  9139                           
  9140                           ;cbb.c: 581:     if(i == 4)
  9141     0E27  3004               	movlw	4
  9142     0E28  0648               	xorwf	compare_pwd@i,w
  9143     0E29  1D03               	btfss	3,2
  9144     0E2A  2E2C               	goto	u3941
  9145     0E2B  2E2D               	goto	u3940
  9146     0E2C                     u3941:
  9147     0E2C  2E92               	goto	l305
  9148     0E2D                     u3940:
  9149     0E2D                     l4197:
  9150                           
  9151                           ;cbb.c: 582:     {;cbb.c: 583:         if(strncmp(user_pwd,saved_pwd,4) == 0)
  9152     0E2D  3056               	movlw	(low (compare_pwd@user_pwd| 0))& (0+255)
  9153     0E2E  00F2               	movwf	strncmp@l
  9154     0E2F  30CA               	movlw	(low (compare_pwd@saved_pwd| 0))& (0+255)
  9155     0E30  00F3               	movwf	strncmp@r
  9156     0E31  3004               	movlw	4
  9157     0E32  00F4               	movwf	strncmp@n
  9158     0E33  3000               	movlw	0
  9159     0E34  00F5               	movwf	strncmp@n+1
  9160     0E35  160A  118A  2658  120A  158A  	fcall	_strncmp
  9161     0E3A  0872               	movf	?_strncmp,w
  9162     0E3B  0473               	iorwf	?_strncmp+1,w
  9163     0E3C  1D03               	btfss	3,2
  9164     0E3D  2E3F               	goto	u3951
  9165     0E3E  2E40               	goto	u3950
  9166     0E3F                     u3951:
  9167     0E3F  2E72               	goto	l4215
  9168     0E40                     u3950:
  9169     0E40                     l4199:
  9170                           
  9171                           ;cbb.c: 584:         {;cbb.c: 585:            clear_screen();
  9172     0E40  160A  118A  2256  120A  158A  	fcall	_clear_screen
  9173                           
  9174                           ;cbb.c: 587:            clcd_write(0x0C,0);
  9175     0E45  01F2               	clrf	clcd_write@mode
  9176     0E46  300C               	movlw	12
  9177     0E47  160A  118A  2528  120A  158A  	fcall	_clcd_write
  9178     0E4C                     l4201:
  9179                           
  9180                           ;cbb.c: 588:            _delay((unsigned long)((100)*(20000000/4000000.0)));
  9181     0E4C  30A5               	movlw	165
  9182     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  9183     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  9184     0E4F  00A9               	movwf	??_compare_pwd
  9185     0E50                     u5237:
  9186     0E50  0BA9               	decfsz	??_compare_pwd,f
  9187     0E51  2E50               	goto	u5237
  9188     0E52  2E53               	nop2
  9189     0E53                     l4203:
  9190                           
  9191                           ;cbb.c: 589:            clcd_print("GRANTED",(0x80 + 0));
  9192     0E53  3063               	movlw	low (STR_44| (0+32768))
  9193     0E54  00F6               	movwf	clcd_print@str
  9194     0E55  3089               	movlw	high (STR_44| (0+32768))
  9195     0E56  00F7               	movwf	clcd_print@str+1
  9196     0E57  3080               	movlw	128
  9197     0E58  00F8               	movwf	clcd_print@addr
  9198     0E59  120A  158A  219C  120A  158A  	fcall	_clcd_print
  9199     0E5E                     l4205:
  9200                           
  9201                           ;cbb.c: 590:            _delay((unsigned long)((1500)*(20000000/4000.0)));
  9202     0E5E  3027               	movlw	39
  9203     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  9204     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  9205     0E61  00AB               	movwf	??_compare_pwd+2
  9206     0E62  300D               	movlw	13
  9207     0E63  00AA               	movwf	??_compare_pwd+1
  9208     0E64  3025               	movlw	37
  9209     0E65  00A9               	movwf	??_compare_pwd
  9210     0E66                     u5247:
  9211     0E66  0BA9               	decfsz	??_compare_pwd,f
  9212     0E67  2E66               	goto	u5247
  9213     0E68  0BAA               	decfsz	??_compare_pwd+1,f
  9214     0E69  2E66               	goto	u5247
  9215     0E6A  0BAB               	decfsz	??_compare_pwd+2,f
  9216     0E6B  2E66               	goto	u5247
  9217     0E6C  2E6D               	nop2
  9218     0E6D                     l4207:
  9219                           
  9220                           ;cbb.c: 592:            TMR2ON = 0;
  9221     0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  9222     0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  9223     0E6F  1112               	bcf	18,2	;volatile
  9224     0E70                     l4209:
  9225                           
  9226                           ;cbb.c: 593:            return 0x11;
  9227     0E70  3011               	movlw	17
  9228     0E71  2E92               	goto	l305
  9229     0E72                     l4215:
  9230                           
  9231                           ;cbb.c: 596:         {;cbb.c: 597:             clear_screen();
  9232     0E72  160A  118A  2256  120A  158A  	fcall	_clear_screen
  9233     0E77                     l4217:
  9234                           
  9235                           ;cbb.c: 598:             clcd_print("INVALID",(0x80 + 0));
  9236     0E77  306B               	movlw	low (STR_45| (0+32768))
  9237     0E78  00F6               	movwf	clcd_print@str
  9238     0E79  3089               	movlw	high (STR_45| (0+32768))
  9239     0E7A  00F7               	movwf	clcd_print@str+1
  9240     0E7B  3080               	movlw	128
  9241     0E7C  00F8               	movwf	clcd_print@addr
  9242     0E7D  120A  158A  219C  120A  158A  	fcall	_clcd_print
  9243     0E82                     l4219:
  9244                           
  9245                           ;cbb.c: 599:            _delay((unsigned long)((1500)*(20000000/4000.0)));
  9246     0E82  3027               	movlw	39
  9247     0E83  1283               	bcf	3,5	;RP0=0, select bank0
  9248     0E84  1303               	bcf	3,6	;RP1=0, select bank0
  9249     0E85  00AB               	movwf	??_compare_pwd+2
  9250     0E86  300D               	movlw	13
  9251     0E87  00AA               	movwf	??_compare_pwd+1
  9252     0E88  3025               	movlw	37
  9253     0E89  00A9               	movwf	??_compare_pwd
  9254     0E8A                     u5257:
  9255     0E8A  0BA9               	decfsz	??_compare_pwd,f
  9256     0E8B  2E8A               	goto	u5257
  9257     0E8C  0BAA               	decfsz	??_compare_pwd+1,f
  9258     0E8D  2E8A               	goto	u5257
  9259     0E8E  0BAB               	decfsz	??_compare_pwd+2,f
  9260     0E8F  2E8A               	goto	u5257
  9261     0E90  2E91               	nop2
  9262     0E91                     l4221:
  9263                           
  9264                           ;cbb.c: 600:             return 0x22;
  9265     0E91  3022               	movlw	34
  9266     0E92                     l305:
  9267     0E92  0008               	return
  9268     0E93                     __end_of_compare_pwd:
  9269                           
  9270                           	psect	text36
  9271     1658                     __ptext36:	
  9272 ;; *************** function _strncmp *****************
  9273 ;; Defined at:
  9274 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  l               1    2[COMMON] PTR const unsigned char 
  9277 ;;		 -> compare_pwd@user_pwd(4), login_screen@user_password(4), 
  9278 ;;  r               1    3[COMMON] PTR const unsigned char 
  9279 ;;		 -> compare_pwd@saved_pwd(5), login_screen@saved_password(5), 
  9280 ;;  n               2    4[COMMON] unsigned int 
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2    2[COMMON] int 
  9285 ;; Registers used:
  9286 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9292 ;;      Params:         4       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0
  9294 ;;      Temps:          2       0       0       0       0
  9295 ;;      Totals:         6       0       0       0       0
  9296 ;;Total ram usage:        6 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 1
  9299 ;; This function calls:
  9300 ;;		Nothing
  9301 ;; This function is called by:
  9302 ;;		_login_screen
  9303 ;;		_compare_pwd
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307     1658                     _strncmp:	
  9308                           ;psect for function _strncmp
  9309                           
  9310     1658                     l3939:	
  9311                           ;incstack = 0
  9312                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0]
  9313                           
  9314     1658  3001               	movlw	1
  9315     1659  02F4               	subwf	strncmp@n,f
  9316     165A  3000               	movlw	0
  9317     165B  1C03               	skipc
  9318     165C  03F5               	decf	strncmp@n+1,f
  9319     165D  02F5               	subwf	strncmp@n+1,f
  9320     165E  0A74               	incf	strncmp@n,w
  9321     165F  1D03               	skipz
  9322     1660  2E65               	goto	u3571
  9323     1661  0A75               	incf	strncmp@n+1,w
  9324     1662  1D03               	btfss	3,2
  9325     1663  2E65               	goto	u3571
  9326     1664  2E66               	goto	u3570
  9327     1665                     u3571:
  9328     1665  2E73               	goto	l3949
  9329     1666                     u3570:
  9330     1666                     l3941:
  9331     1666  01F2               	clrf	?_strncmp
  9332     1667  01F3               	clrf	?_strncmp+1
  9333     1668  2EA2               	goto	l1134
  9334     1669                     l3945:
  9335     1669  3001               	movlw	1
  9336     166A  07F2               	addwf	strncmp@l,f
  9337     166B  3001               	movlw	1
  9338     166C  07F3               	addwf	strncmp@r,f
  9339     166D                     l3947:
  9340     166D  3001               	movlw	1
  9341     166E  02F4               	subwf	strncmp@n,f
  9342     166F  3000               	movlw	0
  9343     1670  1C03               	skipc
  9344     1671  03F5               	decf	strncmp@n+1,f
  9345     1672  02F5               	subwf	strncmp@n+1,f
  9346     1673                     l3949:
  9347     1673  0872               	movf	strncmp@l,w
  9348     1674  0084               	movwf	4
  9349     1675  1383               	bcf	3,7	;select IRP bank0
  9350     1676  0800               	movf	0,w
  9351     1677  1903               	btfsc	3,2
  9352     1678  2E7A               	goto	u3581
  9353     1679  2E7B               	goto	u3580
  9354     167A                     u3581:
  9355     167A  2E94               	goto	l3957
  9356     167B                     u3580:
  9357     167B                     l3951:
  9358     167B  0873               	movf	strncmp@r,w
  9359     167C  0084               	movwf	4
  9360     167D  0800               	movf	0,w
  9361     167E  1903               	btfsc	3,2
  9362     167F  2E81               	goto	u3591
  9363     1680  2E82               	goto	u3590
  9364     1681                     u3591:
  9365     1681  2E94               	goto	l3957
  9366     1682                     u3590:
  9367     1682                     l3953:
  9368     1682  0874               	movf	strncmp@n,w
  9369     1683  0475               	iorwf	strncmp@n+1,w
  9370     1684  1903               	btfsc	3,2
  9371     1685  2E87               	goto	u3601
  9372     1686  2E88               	goto	u3600
  9373     1687                     u3601:
  9374     1687  2E94               	goto	l3957
  9375     1688                     u3600:
  9376     1688                     l3955:
  9377     1688  0873               	movf	strncmp@r,w
  9378     1689  0084               	movwf	4
  9379     168A  0800               	movf	0,w
  9380     168B  00F6               	movwf	??_strncmp
  9381     168C  0872               	movf	strncmp@l,w
  9382     168D  0084               	movwf	4
  9383     168E  0800               	movf	0,w
  9384     168F  0676               	xorwf	??_strncmp,w
  9385     1690  1903               	skipnz
  9386     1691  2E93               	goto	u3611
  9387     1692  2E94               	goto	u3610
  9388     1693                     u3611:
  9389     1693  2E69               	goto	l3945
  9390     1694                     u3610:
  9391     1694                     l3957:
  9392     1694  0873               	movf	strncmp@r,w
  9393     1695  0084               	movwf	4
  9394     1696  0800               	movf	0,w
  9395     1697  00F6               	movwf	??_strncmp
  9396     1698  0872               	movf	strncmp@l,w
  9397     1699  0084               	movwf	4
  9398     169A  0800               	movf	0,w
  9399     169B  00F7               	movwf	??_strncmp+1
  9400     169C  0876               	movf	??_strncmp,w
  9401     169D  0277               	subwf	??_strncmp+1,w
  9402     169E  00F2               	movwf	?_strncmp
  9403     169F  01F3               	clrf	?_strncmp+1
  9404     16A0  1C03               	skipc
  9405     16A1  03F3               	decf	?_strncmp+1,f
  9406     16A2                     l1134:
  9407     16A2  0008               	return
  9408     16A3                     __end_of_strncmp:
  9409                           
  9410                           	psect	text37
  9411     16F7                     __ptext37:	
  9412 ;; *************** function _read_digital_keypad *****************
  9413 ;; Defined at:
  9414 ;;		line 10 in file "digital_keypad.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  mode            1    wreg     unsigned char 
  9417 ;; Auto vars:     Size  Location     Type
  9418 ;;  mode            1    3[COMMON] unsigned char 
  9419 ;; Return value:  Size  Location     Type
  9420 ;;                  1    wreg      unsigned char 
  9421 ;; Registers used:
  9422 ;;		wreg, status,2, status,0
  9423 ;; Tracked objects:
  9424 ;;		On entry : 0/0
  9425 ;;		On exit  : 0/0
  9426 ;;		Unchanged: 0/0
  9427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9428 ;;      Params:         0       0       0       0       0
  9429 ;;      Locals:         1       0       0       0       0
  9430 ;;      Temps:          1       0       0       0       0
  9431 ;;      Totals:         2       0       0       0       0
  9432 ;;Total ram usage:        2 bytes
  9433 ;; Hardware stack levels used: 1
  9434 ;; Hardware stack levels required when called: 1
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_main
  9439 ;;		_set_time
  9440 ;;		_change_password
  9441 ;;		_compare_pwd
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445     16F7                     _read_digital_keypad:	
  9446                           ;psect for function _read_digital_keypad
  9447                           
  9448                           
  9449                           ;incstack = 0
  9450                           ; Regs used in _read_digital_keypad: [wreg+status,2+status,0]
  9451                           ;read_digital_keypad@mode stored from wreg
  9452     16F7  00F3               	movwf	read_digital_keypad@mode
  9453     16F8                     l3849:
  9454                           
  9455                           ;digital_keypad.c: 10: unsigned char read_digital_keypad(unsigned char mode);digital_key
      +                          pad.c: 11: {;digital_keypad.c: 12:     static unsigned char once = 1,long_press,prev_key
      +                          ,key;;digital_keypad.c: 14:     if (mode == 0)
  9456     16F8  0873               	movf	read_digital_keypad@mode,w
  9457     16F9  1D03               	btfss	3,2
  9458     16FA  2EFC               	goto	u3461
  9459     16FB  2EFD               	goto	u3460
  9460     16FC                     u3461:
  9461     16FC  2F02               	goto	l3857
  9462     16FD                     u3460:
  9463     16FD                     l3851:
  9464                           
  9465                           ;digital_keypad.c: 15:     {;digital_keypad.c: 16:         return PORTB & 0x3F;
  9466     16FD  1283               	bcf	3,5	;RP0=0, select bank0
  9467     16FE  1303               	bcf	3,6	;RP1=0, select bank0
  9468     16FF  0806               	movf	6,w	;volatile
  9469     1700  393F               	andlw	63
  9470     1701  2F4B               	goto	l368
  9471     1702                     l3857:
  9472                           
  9473                           ;digital_keypad.c: 19:     {;digital_keypad.c: 20:         key = PORTB & 0x3F;
  9474     1702  1283               	bcf	3,5	;RP0=0, select bank0
  9475     1703  1303               	bcf	3,6	;RP1=0, select bank0
  9476     1704  0806               	movf	6,w	;volatile
  9477     1705  00C6               	movwf	read_digital_keypad@key
  9478     1706                     l3859:
  9479     1706  303F               	movlw	63
  9480     1707  05C6               	andwf	read_digital_keypad@key,f
  9481     1708                     l3861:
  9482                           
  9483                           ;digital_keypad.c: 21:         if ((key != 0x3F) && once)
  9484     1708  303F               	movlw	63
  9485     1709  0646               	xorwf	read_digital_keypad@key,w
  9486     170A  1903               	btfsc	3,2
  9487     170B  2F0D               	goto	u3471
  9488     170C  2F0E               	goto	u3470
  9489     170D                     u3471:
  9490     170D  2F18               	goto	l3869
  9491     170E                     u3470:
  9492     170E                     l3863:
  9493     170E  087B               	movf	read_digital_keypad@once,w
  9494     170F  1903               	btfsc	3,2
  9495     1710  2F12               	goto	u3481
  9496     1711  2F13               	goto	u3480
  9497     1712                     u3481:
  9498     1712  2F18               	goto	l3869
  9499     1713                     u3480:
  9500     1713                     l3865:
  9501                           
  9502                           ;digital_keypad.c: 22:         {;digital_keypad.c: 23:             once = 0;
  9503     1713  01FB               	clrf	read_digital_keypad@once
  9504                           
  9505                           ;digital_keypad.c: 24:             long_press = 0;
  9506     1714  01FA               	clrf	read_digital_keypad@long_press
  9507     1715                     l3867:
  9508                           
  9509                           ;digital_keypad.c: 25:             prev_key = key;
  9510     1715  0846               	movf	read_digital_keypad@key,w
  9511     1716  00C7               	movwf	read_digital_keypad@prev_key
  9512                           
  9513                           ;digital_keypad.c: 26:         }
  9514     1717  2F4A               	goto	l3901
  9515     1718                     l3869:
  9516     1718  087B               	movf	read_digital_keypad@once,w
  9517     1719  1D03               	btfss	3,2
  9518     171A  2F1C               	goto	u3491
  9519     171B  2F1D               	goto	u3490
  9520     171C                     u3491:
  9521     171C  2F2C               	goto	l3877
  9522     171D                     u3490:
  9523     171D                     l3871:
  9524     171D  0847               	movf	read_digital_keypad@prev_key,w
  9525     171E  0646               	xorwf	read_digital_keypad@key,w
  9526     171F  1D03               	skipz
  9527     1720  2F22               	goto	u3501
  9528     1721  2F23               	goto	u3500
  9529     1722                     u3501:
  9530     1722  2F2C               	goto	l3877
  9531     1723                     u3500:
  9532     1723                     l3873:
  9533     1723  301E               	movlw	30
  9534     1724  027A               	subwf	read_digital_keypad@long_press,w
  9535     1725  1803               	skipnc
  9536     1726  2F28               	goto	u3511
  9537     1727  2F29               	goto	u3510
  9538     1728                     u3511:
  9539     1728  2F2C               	goto	l3877
  9540     1729                     u3510:
  9541     1729                     l3875:
  9542                           
  9543                           ;digital_keypad.c: 28:         {;digital_keypad.c: 29:             long_press++;
  9544     1729  3001               	movlw	1
  9545     172A  07FA               	addwf	read_digital_keypad@long_press,f
  9546                           
  9547                           ;digital_keypad.c: 30:         }
  9548     172B  2F4A               	goto	l3901
  9549     172C                     l3877:
  9550     172C  301E               	movlw	30
  9551     172D  067A               	xorwf	read_digital_keypad@long_press,w
  9552     172E  1D03               	btfss	3,2
  9553     172F  2F31               	goto	u3521
  9554     1730  2F32               	goto	u3520
  9555     1731                     u3521:
  9556     1731  2F37               	goto	l3887
  9557     1732                     u3520:
  9558     1732                     l3879:
  9559                           
  9560                           ;digital_keypad.c: 32:         {;digital_keypad.c: 33:             long_press++;
  9561     1732  3001               	movlw	1
  9562     1733  07FA               	addwf	read_digital_keypad@long_press,f
  9563     1734                     l3881:
  9564                           
  9565                           ;digital_keypad.c: 34:             return prev_key | 0x80;
  9566     1734  0847               	movf	read_digital_keypad@prev_key,w
  9567     1735  3880               	iorlw	128
  9568     1736  2F4B               	goto	l368
  9569     1737                     l3887:
  9570     1737  303F               	movlw	63
  9571     1738  0506               	andwf	6,w	;volatile
  9572     1739  00F2               	movwf	??_read_digital_keypad
  9573     173A  303F               	movlw	63
  9574     173B  0672               	xorwf	??_read_digital_keypad,w
  9575     173C  1D03               	btfss	3,2
  9576     173D  2F3F               	goto	u3531
  9577     173E  2F40               	goto	u3530
  9578     173F                     u3531:
  9579     173F  2F4A               	goto	l371
  9580     1740                     u3530:
  9581     1740                     l3889:
  9582     1740  087B               	movf	read_digital_keypad@once,w
  9583     1741  1D03               	btfss	3,2
  9584     1742  2F44               	goto	u3541
  9585     1743  2F45               	goto	u3540
  9586     1744                     u3541:
  9587     1744  2F4A               	goto	l371
  9588     1745                     u3540:
  9589     1745                     l3891:
  9590                           
  9591                           ;digital_keypad.c: 37:         {;digital_keypad.c: 38:             once = 1;
  9592     1745  3001               	movlw	1
  9593     1746  00FB               	movwf	read_digital_keypad@once
  9594     1747                     l3893:
  9595                           
  9596                           ;digital_keypad.c: 39:             long_press = 0;
  9597     1747  01FA               	clrf	read_digital_keypad@long_press
  9598     1748                     l3895:
  9599     1748                     l3897:	
  9600                           ;digital_keypad.c: 40:             if(long_press < 30)
  9601                           
  9602                           
  9603                           ;digital_keypad.c: 41:             return prev_key;
  9604     1748  0847               	movf	read_digital_keypad@prev_key,w
  9605     1749  2F4B               	goto	l368
  9606     174A                     l371:
  9607     174A                     l3901:
  9608                           
  9609                           ;digital_keypad.c: 45:     return 0x3F;
  9610     174A  303F               	movlw	63
  9611     174B                     l368:
  9612     174B  0008               	return
  9613     174C                     __end_of_read_digital_keypad:
  9614                           
  9615                           	psect	text38
  9616     140D                     __ptext38:	
  9617 ;; *************** function _ext_eeprom_24C02_read *****************
  9618 ;; Defined at:
  9619 ;;		line 4 in file "EEprom.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  addr            1    wreg     unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  addr            1    4[COMMON] unsigned char 
  9624 ;;  data            1    5[COMMON] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      unsigned char 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, pclath, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9634 ;;      Params:         0       0       0       0       0
  9635 ;;      Locals:         2       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0
  9637 ;;      Totals:         2       0       0       0       0
  9638 ;;Total ram usage:        2 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 4
  9641 ;; This function calls:
  9642 ;;		_i2c_read
  9643 ;;		_i2c_rep_start
  9644 ;;		_i2c_start
  9645 ;;		_i2c_stop
  9646 ;;		_i2c_write
  9647 ;; This function is called by:
  9648 ;;		_login_screen
  9649 ;;		_view_log
  9650 ;;		_download_log
  9651 ;;		_compare_pwd
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655     140D                     _ext_eeprom_24C02_read:	
  9656                           ;psect for function _ext_eeprom_24C02_read
  9657                           
  9658                           
  9659                           ;incstack = 0
  9660                           ; Regs used in _ext_eeprom_24C02_read: [wreg+status,2+status,0+pclath+cstack]
  9661                           ;ext_eeprom_24C02_read@addr stored from wreg
  9662     140D  00F4               	movwf	ext_eeprom_24C02_read@addr
  9663     140E                     l3933:
  9664                           
  9665                           ;EEprom.c: 5:     unsigned char data;;EEprom.c: 7:     i2c_start();
  9666     140E  160A  118A  2266  160A  118A  	fcall	_i2c_start
  9667                           
  9668                           ;EEprom.c: 8:     i2c_write(0b10100000);
  9669     1413  30A0               	movlw	160
  9670     1414  160A  118A  228D  160A  118A  	fcall	_i2c_write
  9671                           
  9672                           ;EEprom.c: 9:     i2c_write(addr);
  9673     1419  0874               	movf	ext_eeprom_24C02_read@addr,w
  9674     141A  160A  118A  228D  160A  118A  	fcall	_i2c_write
  9675                           
  9676                           ;EEprom.c: 10:     i2c_rep_start();
  9677     141F  160A  118A  2282  160A  118A  	fcall	_i2c_rep_start
  9678                           
  9679                           ;EEprom.c: 11:     i2c_write(0b10100001);
  9680     1424  30A1               	movlw	161
  9681     1425  160A  118A  228D  160A  118A  	fcall	_i2c_write
  9682                           
  9683                           ;EEprom.c: 12:     data = i2c_read(0);
  9684     142A  3000               	movlw	0
  9685     142B  160A  118A  23A5  160A  118A  	fcall	_i2c_read
  9686     1430  00F5               	movwf	ext_eeprom_24C02_read@data
  9687                           
  9688                           ;EEprom.c: 13:     i2c_stop();
  9689     1431  160A  118A  226F  160A  118A  	fcall	_i2c_stop
  9690     1436                     l3935:
  9691                           
  9692                           ;EEprom.c: 15:     return data;
  9693     1436  0875               	movf	ext_eeprom_24C02_read@data,w
  9694     1437                     l497:
  9695     1437  0008               	return
  9696     1438                     __end_of_ext_eeprom_24C02_read:
  9697                           
  9698                           	psect	text39
  9699     128D                     __ptext39:	
  9700 ;; *************** function _i2c_write *****************
  9701 ;; Defined at:
  9702 ;;		line 65 in file "i2c.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  data            1    wreg     unsigned char 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  data            1    2[COMMON] unsigned char 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  2  385[None  ] int 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0, pclath, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9716 ;;      Params:         0       0       0       0       0
  9717 ;;      Locals:         1       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0
  9719 ;;      Totals:         1       0       0       0       0
  9720 ;;Total ram usage:        1 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 2
  9723 ;; This function calls:
  9724 ;;		_i2c_wait_for_idle
  9725 ;; This function is called by:
  9726 ;;		_read_ds1307
  9727 ;;		_write_ds1307
  9728 ;;		_ext_eeprom_24C02_read
  9729 ;;		_ext_eeprom_24C02_byte_write
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733     128D                     _i2c_write:	
  9734                           ;psect for function _i2c_write
  9735                           
  9736                           
  9737                           ;incstack = 0
  9738                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  9739                           ;i2c_write@data stored from wreg
  9740     128D  00F2               	movwf	i2c_write@data
  9741     128E                     l3799:
  9742                           
  9743                           ;i2c.c: 65: int i2c_write(unsigned char data);i2c.c: 66: {;i2c.c: 67:     i2c_wait_for_i
      +                          dle();
  9744     128E  160A  118A  22AE  160A  118A  	fcall	_i2c_wait_for_idle
  9745     1293                     l3801:
  9746                           
  9747                           ;i2c.c: 68:     SSPBUF = data;
  9748     1293  0872               	movf	i2c_write@data,w
  9749     1294  1283               	bcf	3,5	;RP0=0, select bank0
  9750     1295  1303               	bcf	3,6	;RP1=0, select bank0
  9751     1296  0093               	movwf	19	;volatile
  9752     1297                     l3803:
  9753     1297                     l452:	
  9754                           ;i2c.c: 70:     return !ACKSTAT;;	Return value of _i2c_write is never used
  9755                           
  9756     1297  0008               	return
  9757     1298                     __end_of_i2c_write:
  9758                           
  9759                           	psect	text40
  9760     1282                     __ptext40:	
  9761 ;; *************** function _i2c_rep_start *****************
  9762 ;; Defined at:
  9763 ;;		line 28 in file "i2c.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;		None
  9768 ;; Return value:  Size  Location     Type
  9769 ;;                  1    wreg      void 
  9770 ;; Registers used:
  9771 ;;		wreg, status,2, status,0, pclath, cstack
  9772 ;; Tracked objects:
  9773 ;;		On entry : 0/0
  9774 ;;		On exit  : 0/0
  9775 ;;		Unchanged: 0/0
  9776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9777 ;;      Params:         0       0       0       0       0
  9778 ;;      Locals:         0       0       0       0       0
  9779 ;;      Temps:          0       0       0       0       0
  9780 ;;      Totals:         0       0       0       0       0
  9781 ;;Total ram usage:        0 bytes
  9782 ;; Hardware stack levels used: 1
  9783 ;; Hardware stack levels required when called: 3
  9784 ;; This function calls:
  9785 ;;		_i2c_start
  9786 ;;		_i2c_stop
  9787 ;; This function is called by:
  9788 ;;		_read_ds1307
  9789 ;;		_ext_eeprom_24C02_read
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793     1282                     _i2c_rep_start:	
  9794                           ;psect for function _i2c_rep_start
  9795                           
  9796     1282                     l3833:	
  9797                           ;incstack = 0
  9798                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  9799                           
  9800                           
  9801                           ;i2c.c: 30:     i2c_stop();
  9802     1282  160A  118A  226F  160A  118A  	fcall	_i2c_stop
  9803                           
  9804                           ;i2c.c: 31:     i2c_start();
  9805     1287  160A  118A  2266  160A  118A  	fcall	_i2c_start
  9806     128C                     l441:
  9807     128C  0008               	return
  9808     128D                     __end_of_i2c_rep_start:
  9809                           
  9810                           	psect	text41
  9811     126F                     __ptext41:	
  9812 ;; *************** function _i2c_stop *****************
  9813 ;; Defined at:
  9814 ;;		line 35 in file "i2c.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2, status,0, pclath, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9828 ;;      Params:         0       0       0       0       0
  9829 ;;      Locals:         0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0
  9831 ;;      Totals:         0       0       0       0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 2
  9835 ;; This function calls:
  9836 ;;		_i2c_wait_for_idle
  9837 ;; This function is called by:
  9838 ;;		_read_ds1307
  9839 ;;		_write_ds1307
  9840 ;;		_i2c_rep_start
  9841 ;;		_ext_eeprom_24C02_read
  9842 ;;		_ext_eeprom_24C02_byte_write
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846     126F                     _i2c_stop:	
  9847                           ;psect for function _i2c_stop
  9848                           
  9849     126F                     l3807:	
  9850                           ;incstack = 0
  9851                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  9852                           
  9853                           
  9854                           ;i2c.c: 37:     i2c_wait_for_idle();
  9855     126F  160A  118A  22AE  160A  118A  	fcall	_i2c_wait_for_idle
  9856     1274                     l3809:
  9857                           
  9858                           ;i2c.c: 38:     PEN = 1;
  9859     1274  1683               	bsf	3,5	;RP0=1, select bank1
  9860     1275  1303               	bcf	3,6	;RP1=0, select bank1
  9861     1276  1511               	bsf	17,2	;volatile
  9862     1277                     l444:
  9863     1277  0008               	return
  9864     1278                     __end_of_i2c_stop:
  9865                           
  9866                           	psect	text42
  9867     1266                     __ptext42:	
  9868 ;; *************** function _i2c_start *****************
  9869 ;; Defined at:
  9870 ;;		line 22 in file "i2c.c"
  9871 ;; Parameters:    Size  Location     Type
  9872 ;;		None
  9873 ;; Auto vars:     Size  Location     Type
  9874 ;;		None
  9875 ;; Return value:  Size  Location     Type
  9876 ;;                  1    wreg      void 
  9877 ;; Registers used:
  9878 ;;		wreg, status,2, status,0, pclath, cstack
  9879 ;; Tracked objects:
  9880 ;;		On entry : 0/0
  9881 ;;		On exit  : 0/0
  9882 ;;		Unchanged: 0/0
  9883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9884 ;;      Params:         0       0       0       0       0
  9885 ;;      Locals:         0       0       0       0       0
  9886 ;;      Temps:          0       0       0       0       0
  9887 ;;      Totals:         0       0       0       0       0
  9888 ;;Total ram usage:        0 bytes
  9889 ;; Hardware stack levels used: 1
  9890 ;; Hardware stack levels required when called: 2
  9891 ;; This function calls:
  9892 ;;		_i2c_wait_for_idle
  9893 ;; This function is called by:
  9894 ;;		_read_ds1307
  9895 ;;		_write_ds1307
  9896 ;;		_i2c_rep_start
  9897 ;;		_ext_eeprom_24C02_read
  9898 ;;		_ext_eeprom_24C02_byte_write
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902     1266                     _i2c_start:	
  9903                           ;psect for function _i2c_start
  9904                           
  9905     1266                     l3795:	
  9906                           ;incstack = 0
  9907                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  9908                           
  9909                           
  9910                           ;i2c.c: 24:     i2c_wait_for_idle();
  9911     1266  160A  118A  22AE  160A  118A  	fcall	_i2c_wait_for_idle
  9912     126B                     l3797:
  9913                           
  9914                           ;i2c.c: 25:     SEN = 1;
  9915     126B  1683               	bsf	3,5	;RP0=1, select bank1
  9916     126C  1303               	bcf	3,6	;RP1=0, select bank1
  9917     126D  1411               	bsf	17,0	;volatile
  9918     126E                     l438:
  9919     126E  0008               	return
  9920     126F                     __end_of_i2c_start:
  9921                           
  9922                           	psect	text43
  9923     13A5                     __ptext43:	
  9924 ;; *************** function _i2c_read *****************
  9925 ;; Defined at:
  9926 ;;		line 41 in file "i2c.c"
  9927 ;; Parameters:    Size  Location     Type
  9928 ;;  ack             1    wreg     unsigned char 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;  ack             1    2[COMMON] unsigned char 
  9931 ;;  data            1    3[COMMON] unsigned char 
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      unsigned char 
  9934 ;; Registers used:
  9935 ;;		wreg, status,2, status,0, pclath, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9941 ;;      Params:         0       0       0       0       0
  9942 ;;      Locals:         2       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0
  9944 ;;      Totals:         2       0       0       0       0
  9945 ;;Total ram usage:        2 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 2
  9948 ;; This function calls:
  9949 ;;		_i2c_wait_for_idle
  9950 ;; This function is called by:
  9951 ;;		_read_ds1307
  9952 ;;		_ext_eeprom_24C02_read
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956     13A5                     _i2c_read:	
  9957                           ;psect for function _i2c_read
  9958                           
  9959                           
  9960                           ;incstack = 0
  9961                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  9962                           ;i2c_read@ack stored from wreg
  9963     13A5  00F2               	movwf	i2c_read@ack
  9964     13A6                     l3835:
  9965                           
  9966                           ;i2c.c: 41: unsigned char i2c_read(unsigned char ack);i2c.c: 42: {;i2c.c: 43:     unsign
      +                          ed char data;;i2c.c: 45:     i2c_wait_for_idle();
  9967     13A6  160A  118A  22AE  160A  118A  	fcall	_i2c_wait_for_idle
  9968     13AB                     l3837:
  9969                           
  9970                           ;i2c.c: 46:     RCEN = 1;
  9971     13AB  1683               	bsf	3,5	;RP0=1, select bank1
  9972     13AC  1303               	bcf	3,6	;RP1=0, select bank1
  9973     13AD  1591               	bsf	17,3	;volatile
  9974                           
  9975                           ;i2c.c: 48:     i2c_wait_for_idle();
  9976     13AE  160A  118A  22AE  160A  118A  	fcall	_i2c_wait_for_idle
  9977     13B3                     l3839:
  9978                           
  9979                           ;i2c.c: 49:     data = SSPBUF;
  9980     13B3  1283               	bcf	3,5	;RP0=0, select bank0
  9981     13B4  1303               	bcf	3,6	;RP1=0, select bank0
  9982     13B5  0813               	movf	19,w	;volatile
  9983     13B6  00F3               	movwf	i2c_read@data
  9984     13B7                     l3841:
  9985                           
  9986                           ;i2c.c: 51:     if (ack == 1)
  9987     13B7  0372               	decf	i2c_read@ack,w
  9988     13B8  1D03               	btfss	3,2
  9989     13B9  2BBB               	goto	u3451
  9990     13BA  2BBC               	goto	u3450
  9991     13BB                     u3451:
  9992     13BB  2BC0               	goto	l447
  9993     13BC                     u3450:
  9994     13BC                     l3843:
  9995                           
  9996                           ;i2c.c: 52:     {;i2c.c: 53:         ACKDT = 1;
  9997     13BC  1683               	bsf	3,5	;RP0=1, select bank1
  9998     13BD  1303               	bcf	3,6	;RP1=0, select bank1
  9999     13BE  1691               	bsf	17,5	;volatile
 10000                           
 10001                           ;i2c.c: 54:     }
 10002     13BF  2BC3               	goto	l448
 10003     13C0                     l447:	
 10004                           ;i2c.c: 55:     else
 10005                           
 10006                           
 10007                           ;i2c.c: 56:     {;i2c.c: 57:         ACKDT = 0;
 10008     13C0  1683               	bsf	3,5	;RP0=1, select bank1
 10009     13C1  1303               	bcf	3,6	;RP1=0, select bank1
 10010     13C2  1291               	bcf	17,5	;volatile
 10011     13C3                     l448:	
 10012                           ;i2c.c: 58:     }
 10013                           
 10014                           
 10015                           ;i2c.c: 60:     ACKEN = 1;
 10016     13C3  1611               	bsf	17,4	;volatile
 10017     13C4                     l3845:
 10018                           
 10019                           ;i2c.c: 62:     return data;
 10020     13C4  0873               	movf	i2c_read@data,w
 10021     13C5                     l449:
 10022     13C5  0008               	return
 10023     13C6                     __end_of_i2c_read:
 10024                           
 10025                           	psect	text44
 10026     12AE                     __ptext44:	
 10027 ;; *************** function _i2c_wait_for_idle *****************
 10028 ;; Defined at:
 10029 ;;		line 16 in file "i2c.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;		None
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10043 ;;      Params:         0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0
 10045 ;;      Temps:          0       0       0       0       0
 10046 ;;      Totals:         0       0       0       0       0
 10047 ;;Total ram usage:        0 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 1
 10050 ;; This function calls:
 10051 ;;		Nothing
 10052 ;; This function is called by:
 10053 ;;		_i2c_start
 10054 ;;		_i2c_stop
 10055 ;;		_i2c_read
 10056 ;;		_i2c_write
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060     12AE                     _i2c_wait_for_idle:	
 10061                           ;psect for function _i2c_wait_for_idle
 10062                           
 10063     12AE                     l3791:	
 10064                           ;incstack = 0
 10065                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
 10066                           
 10067     12AE                     l432:	
 10068                           ;i2c.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
 10069                           
 10070     12AE  1683               	bsf	3,5	;RP0=1, select bank1
 10071     12AF  1303               	bcf	3,6	;RP1=0, select bank1
 10072     12B0  1914               	btfsc	20,2	;volatile
 10073     12B1  2AB3               	goto	u3401
 10074     12B2  2AB4               	goto	u3400
 10075     12B3                     u3401:
 10076     12B3  2AAE               	goto	l432
 10077     12B4                     u3400:
 10078     12B4                     l3793:
 10079     12B4  0811               	movf	17,w	;volatile
 10080     12B5  391F               	andlw	31
 10081     12B6  1D03               	btfss	3,2
 10082     12B7  2AB9               	goto	u3411
 10083     12B8  2ABA               	goto	u3410
 10084     12B9                     u3411:
 10085     12B9  2AAE               	goto	l432
 10086     12BA                     u3410:
 10087     12BA                     l435:
 10088     12BA  0008               	return
 10089     12BB                     __end_of_i2c_wait_for_idle:
 10090                           
 10091                           	psect	text45
 10092     1256                     __ptext45:	
 10093 ;; *************** function _clear_screen *****************
 10094 ;; Defined at:
 10095 ;;		line 604 in file "cbb.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;		None
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0, pclath, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10109 ;;      Params:         0       0       0       0       0
 10110 ;;      Locals:         0       0       0       0       0
 10111 ;;      Temps:          0       0       0       0       0
 10112 ;;      Totals:         0       0       0       0       0
 10113 ;;Total ram usage:        0 bytes
 10114 ;; Hardware stack levels used: 1
 10115 ;; Hardware stack levels required when called: 2
 10116 ;; This function calls:
 10117 ;;		_clcd_write
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;;		_login_screen
 10121 ;;		_menu_screen
 10122 ;;		_clear_log
 10123 ;;		_download_log
 10124 ;;		_set_time
 10125 ;;		_change_password
 10126 ;;		_compare_pwd
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130     1256                     _clear_screen:	
 10131                           ;psect for function _clear_screen
 10132                           
 10133     1256                     l3905:	
 10134                           ;incstack = 0
 10135                           ; Regs used in _clear_screen: [wreg+status,2+status,0+pclath+cstack]
 10136                           
 10137                           
 10138                           ;cbb.c: 606:     clcd_write(0x01, 0);
 10139     1256  01F2               	clrf	clcd_write@mode
 10140     1257  3001               	movlw	1
 10141     1258  160A  118A  2528  160A  118A  	fcall	_clcd_write
 10142     125D                     l326:
 10143     125D  0008               	return
 10144     125E                     __end_of_clear_screen:
 10145                           
 10146                           	psect	text46
 10147     12E1                     __ptext46:	
 10148 ;; *************** function _clcd_putch *****************
 10149 ;; Defined at:
 10150 ;;		line 56 in file "clcd.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  data            1    wreg     const unsigned char 
 10153 ;;  addr            1    7[BANK0 ] unsigned char 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  data            1    8[BANK0 ] const unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0, pclath, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10165 ;;      Params:         0       1       0       0       0
 10166 ;;      Locals:         0       1       0       0       0
 10167 ;;      Temps:          0       0       0       0       0
 10168 ;;      Totals:         0       2       0       0       0
 10169 ;;Total ram usage:        2 bytes
 10170 ;; Hardware stack levels used: 1
 10171 ;; Hardware stack levels required when called: 2
 10172 ;; This function calls:
 10173 ;;		_clcd_write
 10174 ;; This function is called by:
 10175 ;;		_get_time
 10176 ;;		_display_dash_board
 10177 ;;		_login_screen
 10178 ;;		_menu_screen
 10179 ;;		_view_log
 10180 ;;		_set_time
 10181 ;;		_change_password
 10182 ;;		_compare_pwd
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186     12E1                     _clcd_putch:	
 10187                           ;psect for function _clcd_putch
 10188                           
 10189                           
 10190                           ;incstack = 0
 10191                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
 10192                           ;clcd_putch@data stored from wreg
 10193     12E1  1283               	bcf	3,5	;RP0=0, select bank0
 10194     12E2  1303               	bcf	3,6	;RP1=0, select bank0
 10195     12E3  00A8               	movwf	clcd_putch@data
 10196     12E4                     l3921:
 10197                           
 10198                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
 10199     12E4  01F2               	clrf	clcd_write@mode
 10200     12E5  0827               	movf	clcd_putch@addr,w
 10201     12E6  160A  118A  2528  160A  118A  	fcall	_clcd_write
 10202                           
 10203                           ;clcd.c: 59:     clcd_write(data, 1);
 10204     12EB  01F2               	clrf	clcd_write@mode
 10205     12EC  0AF2               	incf	clcd_write@mode,f
 10206     12ED  1283               	bcf	3,5	;RP0=0, select bank0
 10207     12EE  1303               	bcf	3,6	;RP1=0, select bank0
 10208     12EF  0828               	movf	clcd_putch@data,w
 10209     12F0  160A  118A  2528  160A  118A  	fcall	_clcd_write
 10210     12F5                     l478:
 10211     12F5  0008               	return
 10212     12F6                     __end_of_clcd_putch:
 10213                           
 10214                           	psect	text47
 10215     099C                     __ptext47:	
 10216 ;; *************** function _clcd_print *****************
 10217 ;; Defined at:
 10218 ;;		line 62 in file "clcd.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  str             2    6[COMMON] PTR const unsigned char 
 10221 ;;		 -> STR_45(8), STR_44(8), STR_43(13), STR_42(17), 
 10222 ;;		 -> STR_41(15), STR_40(10), STR_39(15), STR_38(14), 
 10223 ;;		 -> STR_37(14), STR_36(13), STR_35(9), STR_34(16), 
 10224 ;;		 -> STR_33(16), STR_32(13), STR_31(13), STR_29(12), 
 10225 ;;		 -> STR_28(10), STR_27(17), STR_26(15), STR_25(15), 
 10226 ;;		 -> STR_24(15), STR_23(4), STR_22(9), STR_21(16), 
 10227 ;;		 -> STR_20(14), STR_19(17), STR_18(15), STR_17(13), 
 10228 ;;		 -> STR_16(13), STR_15(10), STR_14(9), STR_9(15), 
 10229 ;;		 -> main@event(3), 
 10230 ;;  addr            1    8[COMMON] unsigned char 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  1    wreg      void 
 10235 ;; Registers used:
 10236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10242 ;;      Params:         3       0       0       0       0
 10243 ;;      Locals:         0       0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0
 10245 ;;      Totals:         3       0       0       0       0
 10246 ;;Total ram usage:        3 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; Hardware stack levels required when called: 2
 10249 ;; This function calls:
 10250 ;;		_clcd_write
 10251 ;; This function is called by:
 10252 ;;		_main
 10253 ;;		_display_dash_board
 10254 ;;		_login_screen
 10255 ;;		_menu_screen
 10256 ;;		_view_log
 10257 ;;		_clear_log
 10258 ;;		_download_log
 10259 ;;		_set_time
 10260 ;;		_change_password
 10261 ;;		_compare_pwd
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265     099C                     _clcd_print:	
 10266                           ;psect for function _clcd_print
 10267                           
 10268     099C                     l3907:	
 10269                           ;incstack = 0
 10270                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10271                           
 10272                           
 10273                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
 10274     099C  01F2               	clrf	clcd_write@mode
 10275     099D  0878               	movf	clcd_print@addr,w
 10276     099E  160A  118A  2528  120A  158A  	fcall	_clcd_write
 10277                           
 10278                           ;clcd.c: 66:     while (*str != '\0')
 10279     09A3  29BA               	goto	l3913
 10280     09A4                     l3909:
 10281                           
 10282                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
 10283     09A4  01F2               	clrf	clcd_write@mode
 10284     09A5  0AF2               	incf	clcd_write@mode,f
 10285     09A6  0877               	movf	clcd_print@str+1,w
 10286     09A7  00FF               	movwf	btemp+1
 10287     09A8  0876               	movf	clcd_print@str,w
 10288     09A9  0084               	movwf	4
 10289     09AA  160A  118A  2000  120A  158A  	fcall	stringtab
 10290     09AF  160A  118A  2528  120A  158A  	fcall	_clcd_write
 10291     09B4                     l3911:
 10292                           
 10293                           ;clcd.c: 69:         str++;
 10294     09B4  3001               	movlw	1
 10295     09B5  07F6               	addwf	clcd_print@str,f
 10296     09B6  1803               	skipnc
 10297     09B7  0AF7               	incf	clcd_print@str+1,f
 10298     09B8  3000               	movlw	0
 10299     09B9  07F7               	addwf	clcd_print@str+1,f
 10300     09BA                     l3913:
 10301                           
 10302                           ;clcd.c: 66:     while (*str != '\0')
 10303     09BA  0877               	movf	clcd_print@str+1,w
 10304     09BB  1283               	bcf	3,5	;RP0=0, select bank0
 10305     09BC  1303               	bcf	3,6	;RP1=0, select bank0
 10306     09BD  00FF               	movwf	btemp+1
 10307     09BE  0876               	movf	clcd_print@str,w
 10308     09BF  0084               	movwf	4
 10309     09C0  160A  118A  2000  120A  158A  	fcall	stringtab
 10310     09C5  3A00               	xorlw	0
 10311     09C6  1D03               	skipz
 10312     09C7  29C9               	goto	u3551
 10313     09C8  29CA               	goto	u3550
 10314     09C9                     u3551:
 10315     09C9  29A4               	goto	l3909
 10316     09CA                     u3550:
 10317     09CA                     l484:
 10318     09CA  0008               	return
 10319     09CB                     __end_of_clcd_print:
 10320                           
 10321                           	psect	text48
 10322     1528                     __ptext48:	
 10323 ;; *************** function _clcd_write *****************
 10324 ;; Defined at:
 10325 ;;		line 4 in file "clcd.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  byte            1    wreg     unsigned char 
 10328 ;;  mode            1    2[COMMON] unsigned char 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  byte            1    5[COMMON] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, status,2, status,0
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10340 ;;      Params:         1       0       0       0       0
 10341 ;;      Locals:         1       0       0       0       0
 10342 ;;      Temps:          2       0       0       0       0
 10343 ;;      Totals:         4       0       0       0       0
 10344 ;;Total ram usage:        4 bytes
 10345 ;; Hardware stack levels used: 1
 10346 ;; Hardware stack levels required when called: 1
 10347 ;; This function calls:
 10348 ;;		Nothing
 10349 ;; This function is called by:
 10350 ;;		_main
 10351 ;;		_login_screen
 10352 ;;		_change_password
 10353 ;;		_compare_pwd
 10354 ;;		_clear_screen
 10355 ;;		_init_display_controller
 10356 ;;		_clcd_putch
 10357 ;;		_clcd_print
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361     1528                     _clcd_write:	
 10362                           ;psect for function _clcd_write
 10363                           
 10364                           
 10365                           ;incstack = 0
 10366                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
 10367                           ;clcd_write@byte stored from wreg
 10368     1528  00F5               	movwf	clcd_write@byte
 10369     1529                     l3811:
 10370                           
 10371                           ;clcd.c: 4: void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;clcd.c:
      +                           6:     RE2 = mode;
 10372     1529  1872               	btfsc	clcd_write@mode,0
 10373     152A  2D2C               	goto	u3421
 10374     152B  2D30               	goto	u3420
 10375     152C                     u3421:
 10376     152C  1283               	bcf	3,5	;RP0=0, select bank0
 10377     152D  1303               	bcf	3,6	;RP1=0, select bank0
 10378     152E  1509               	bsf	9,2	;volatile
 10379     152F  2D33               	goto	u3434
 10380     1530                     u3420:
 10381     1530  1283               	bcf	3,5	;RP0=0, select bank0
 10382     1531  1303               	bcf	3,6	;RP1=0, select bank0
 10383     1532  1109               	bcf	9,2	;volatile
 10384     1533                     u3434:
 10385     1533                     l3813:
 10386                           
 10387                           ;clcd.c: 8:     PORTD = byte & 0xF0;
 10388     1533  0875               	movf	clcd_write@byte,w
 10389     1534  39F0               	andlw	240
 10390     1535  0088               	movwf	8	;volatile
 10391     1536                     l3815:
 10392                           
 10393                           ;clcd.c: 9:     RE1 = 1;
 10394     1536  1489               	bsf	9,1	;volatile
 10395     1537                     l3817:
 10396                           
 10397                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
 10398     1537  30A6               	movlw	166
 10399     1538  00F3               	movwf	??_clcd_write
 10400     1539                     u5267:
 10401     1539  0BF3               	decfsz	??_clcd_write,f
 10402     153A  2D39               	goto	u5267
 10403     153B  0000               	nop
 10404     153C                     l3819:
 10405                           
 10406                           ;clcd.c: 11:     RE1 = 0;
 10407     153C  1283               	bcf	3,5	;RP0=0, select bank0
 10408     153D  1303               	bcf	3,6	;RP1=0, select bank0
 10409     153E  1089               	bcf	9,1	;volatile
 10410     153F                     l3821:
 10411                           
 10412                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
 10413     153F  0875               	movf	clcd_write@byte,w
 10414     1540  390F               	andlw	15
 10415     1541  00F3               	movwf	??_clcd_write
 10416     1542  3003               	movlw	3
 10417     1543                     u3445:
 10418     1543  1003               	clrc
 10419     1544  0DF3               	rlf	??_clcd_write,f
 10420     1545  3EFF               	addlw	-1
 10421     1546  1D03               	skipz
 10422     1547  2D43               	goto	u3445
 10423     1548  1003               	clrc
 10424     1549  0D73               	rlf	??_clcd_write,w
 10425     154A  0088               	movwf	8	;volatile
 10426     154B                     l3823:
 10427                           
 10428                           ;clcd.c: 14:     RE1 = 1;
 10429     154B  1489               	bsf	9,1	;volatile
 10430     154C                     l3825:
 10431                           
 10432                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
 10433     154C  30A6               	movlw	166
 10434     154D  00F3               	movwf	??_clcd_write
 10435     154E                     u5277:
 10436     154E  0BF3               	decfsz	??_clcd_write,f
 10437     154F  2D4E               	goto	u5277
 10438     1550  0000               	nop
 10439     1551                     l3827:
 10440                           
 10441                           ;clcd.c: 16:     RE1 = 0;
 10442     1551  1283               	bcf	3,5	;RP0=0, select bank0
 10443     1552  1303               	bcf	3,6	;RP1=0, select bank0
 10444     1553  1089               	bcf	9,1	;volatile
 10445     1554                     l3829:
 10446                           
 10447                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
 10448     1554  301B               	movlw	27
 10449     1555  00F4               	movwf	??_clcd_write+1
 10450     1556  309E               	movlw	158
 10451     1557  00F3               	movwf	??_clcd_write
 10452     1558                     u5287:
 10453     1558  0BF3               	decfsz	??_clcd_write,f
 10454     1559  2D58               	goto	u5287
 10455     155A  0BF4               	decfsz	??_clcd_write+1,f
 10456     155B  2D58               	goto	u5287
 10457     155C  0000               	nop
 10458     155D                     l469:
 10459     155D  0008               	return
 10460     155E                     __end_of_clcd_write:
 10461                           
 10462                           	psect	text49
 10463     1463                     __ptext49:	
 10464 ;; *************** function _isr *****************
 10465 ;; Defined at:
 10466 ;;		line 4 in file "isr.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;		None
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, status,2, status,0
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10480 ;;      Params:         0       0       0       0       0
 10481 ;;      Locals:         0       0       0       0       0
 10482 ;;      Temps:          2       0       0       0       0
 10483 ;;      Totals:         2       0       0       0       0
 10484 ;;Total ram usage:        2 bytes
 10485 ;; Hardware stack levels used: 1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		Interrupt level 1
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493     1463                     _isr:	
 10494                           ;psect for function _isr
 10495                           
 10496     1463                     i1l3777:
 10497                           
 10498                           ;isr.c: 6:     static unsigned int count =0;;isr.c: 7:     if (TMR2IF == 1)
 10499     1463  1283               	bcf	3,5	;RP0=0, select bank0
 10500     1464  1303               	bcf	3,6	;RP1=0, select bank0
 10501     1465  1C8C               	btfss	12,1	;volatile
 10502     1466  2C68               	goto	u336_21
 10503     1467  2C69               	goto	u336_20
 10504     1468                     u336_21:
 10505     1468  2C89               	goto	i1l523
 10506     1469                     u336_20:
 10507     1469                     i1l3779:
 10508                           
 10509                           ;isr.c: 8:     {;isr.c: 9:         if(++count == 20000)
 10510     1469  3001               	movlw	1
 10511     146A  07C4               	addwf	isr@count,f
 10512     146B  1803               	skipnc
 10513     146C  0AC5               	incf	isr@count+1,f
 10514     146D  3000               	movlw	0
 10515     146E  07C5               	addwf	isr@count+1,f
 10516     146F  3020               	movlw	32
 10517     1470  0644               	xorwf	isr@count,w
 10518     1471  304E               	movlw	78
 10519     1472  1903               	skipnz
 10520     1473  0645               	xorwf	isr@count+1,w
 10521     1474  1D03               	btfss	3,2
 10522     1475  2C77               	goto	u337_21
 10523     1476  2C78               	goto	u337_20
 10524     1477                     u337_21:
 10525     1477  2C88               	goto	i1l3789
 10526     1478                     u337_20:
 10527     1478                     i1l3781:
 10528                           
 10529                           ;isr.c: 10:         {;isr.c: 11:             count = 0;
 10530     1478  01C4               	clrf	isr@count
 10531     1479  01C5               	clrf	isr@count+1
 10532     147A                     i1l3783:
 10533                           
 10534                           ;isr.c: 12:             if(sec > 0)
 10535     147A  0863               	movf	_sec,w
 10536     147B  1903               	btfsc	3,2
 10537     147C  2C7E               	goto	u338_21
 10538     147D  2C7F               	goto	u338_20
 10539     147E                     u338_21:
 10540     147E  2C81               	goto	i1l521
 10541     147F                     u338_20:
 10542     147F                     i1l3785:
 10543                           
 10544                           ;isr.c: 13:                 sec--;
 10545     147F  3001               	movlw	1
 10546     1480  02E3               	subwf	_sec,f
 10547     1481                     i1l521:
 10548                           
 10549                           ;isr.c: 14:             if(return_time > 0)
 10550     1481  0865               	movf	_return_time,w
 10551     1482  1903               	btfsc	3,2
 10552     1483  2C85               	goto	u339_21
 10553     1484  2C86               	goto	u339_20
 10554     1485                     u339_21:
 10555     1485  2C88               	goto	i1l3789
 10556     1486                     u339_20:
 10557     1486                     i1l3787:
 10558                           
 10559                           ;isr.c: 15:                 return_time--;
 10560     1486  3001               	movlw	1
 10561     1487  02E5               	subwf	_return_time,f
 10562     1488                     i1l3789:
 10563                           
 10564                           ;isr.c: 17:         TMR2IF = 0;
 10565     1488  108C               	bcf	12,1	;volatile
 10566     1489                     i1l523:
 10567     1489  0871               	movf	??_isr+1,w
 10568     148A  008A               	movwf	10
 10569     148B  0E70               	swapf	??_isr,w
 10570     148C  0083               	movwf	3
 10571     148D  0EFE               	swapf	btemp,f
 10572     148E  0E7E               	swapf	btemp,w
 10573     148F  0009               	retfie
 10574     1490                     __end_of_isr:
 10575     0002                     ___latbits      equ	2
 10576     007E                     btemp           set	126	;btemp
 10577     007E                     wtemp0          set	126
 10578                           
 10579                           	psect	intentry
 10580     0004                     __pintentry:	
 10581                           ;incstack = 0
 10582                           ; Regs used in _isr: [wreg+status,2+status,0]
 10583                           
 10584     0004                     interrupt_function:
 10585     007E                     saved_w         set	btemp
 10586     0004  00FE               	movwf	btemp
 10587     0005  0E03               	swapf	3,w
 10588     0006  00F0               	movwf	??_isr
 10589     0007  080A               	movf	10,w
 10590     0008  00F1               	movwf	??_isr+1
 10591     0009  160A  118A  2C63   	ljmp	_isr
 10592                           
 10593                           	psect	config
 10594                           
 10595                           ;Config register CONFIG @ 0x2007
 10596                           ;	Oscillator Selection bits
 10597                           ;	FOSC = 0x3, unprogrammed default
 10598                           ;	Watchdog Timer Enable bit
 10599                           ;	WDTE = OFF, WDT disabled
 10600                           ;	Power-up Timer Enable bit
 10601                           ;	PWRTE = 0x1, unprogrammed default
 10602                           ;	Brown-out Reset Enable bit
 10603                           ;	BOREN = 0x1, unprogrammed default
 10604                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10605                           ;	LVP = 0x1, unprogrammed default
 10606                           ;	Data EEPROM Memory Code Protection bit
 10607                           ;	CPD = 0x1, unprogrammed default
 10608                           ;	Flash Program Memory Write Enable bits
 10609                           ;	WRT = 0x3, unprogrammed default
 10610                           ;	In-Circuit Debugger Mode bit
 10611                           ;	DEBUG = 0x1, unprogrammed default
 10612                           ;	Flash Program Memory Code Protection bit
 10613                           ;	CP = 0x1, unprogrammed default
 10614     2007                     	org	8199
 10615     2007  3FFB               	dw	16379

Data Sizes:
    Strings     411
    Constant    0
    Data        33
    BSS         55
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     36      70
    BANK1            80     13      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> main@event(BANK1[3]), STR_14(CODE[9]), STR_15(CODE[10]), STR_16(CODE[13]), 
		 -> STR_17(CODE[13]), STR_18(CODE[15]), STR_19(CODE[17]), STR_20(CODE[14]), 
		 -> STR_21(CODE[16]), STR_22(CODE[9]), STR_23(CODE[4]), STR_24(CODE[15]), 
		 -> STR_25(CODE[15]), STR_26(CODE[15]), STR_27(CODE[17]), STR_28(CODE[10]), 
		 -> STR_29(CODE[12]), STR_31(CODE[13]), STR_32(CODE[13]), STR_33(CODE[16]), 
		 -> STR_34(CODE[16]), STR_35(CODE[9]), STR_36(CODE[13]), STR_37(CODE[14]), 
		 -> STR_38(CODE[14]), STR_39(CODE[15]), STR_40(CODE[10]), STR_41(CODE[15]), 
		 -> STR_42(CODE[17]), STR_43(CODE[13]), STR_44(CODE[8]), STR_45(CODE[8]), 
		 -> STR_9(CODE[15]), 

    display_dash_board@event	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK1[3]), 

    ext_eeprom_24C02_str_write@str	PTR unsigned char  size(1) Largest target is 12
		 -> change_password@pwd_arr(BANK0[5]), log(BANK1[12]), 

    gear	PTR unsigned char [7] size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), 

    get_time@clock_reg	PTR unsigned char  size(1) Largest target is 3
		 -> clock_reg(BANK0[3]), 

    log_car_event@event	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK1[3]), 

    menu	PTR unsigned char [5] size(2) Largest target is 15
		 -> STR_14(CODE[9]), STR_15(CODE[10]), STR_16(CODE[13]), STR_17(CODE[13]), 
		 -> STR_18(CODE[15]), 

    puts@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_30(CODE[19]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK1[3]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 12
		 -> log(BANK1[12]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK1[3]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 3
		 -> main@event(BANK1[3]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), STR_10(CODE[3]), STR_11(CODE[3]), STR_12(CODE[3]), 
		 -> STR_13(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), 
		 -> STR_5(CODE[3]), STR_6(CODE[3]), STR_7(CODE[3]), STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 4
		 -> compare_pwd@user_pwd(BANK0[4]), login_screen@user_password(BANK0[4]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> compare_pwd@saved_pwd(BANK1[5]), login_screen@saved_password(BANK1[5]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 12
		 -> log(BANK1[12]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 12
		 -> log(BANK1[12]), 

    strncpy@s	PTR const unsigned char  size(1) Largest target is 7
		 -> main@event(BANK1[3]), time(BANK0[7]), 


Critical Paths under _main in COMMON

    _set_time->___awdiv
    _write_ds1307->_i2c_write
    _login_screen->___awdiv
    _log_event->_ext_eeprom_24C02_str_write
    _init_uart->___lldiv
    _init_i2c->___lldiv
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _download_log->_clcd_print
    _puts->_putchar
    _read_ds1307->_i2c_read
    ___lwdiv->_read_adc
    _clear_log->_clcd_print
    _ext_eeprom_24C02_str_write->_ext_eeprom_24C02_byte_write
    _ext_eeprom_24C02_byte_write->_i2c_write
    _ext_eeprom_24C02_read->_i2c_read
    _clear_screen->_clcd_write
    _clcd_putch->___awdiv
    _clcd_print->_clcd_write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_change_password
    _view_log->_clcd_putch
    _set_time->_clcd_putch
    _menu_screen->_clcd_putch
    _login_screen->_clcd_putch
    _log_car_event->_get_time
    _init_config->_init_i2c
    _init_config->_init_uart
    _init_uart->___lldiv
    _init_i2c->___lldiv
    _display_dash_board->_get_time
    _get_time->_clcd_putch
    _change_password->_compare_pwd
    _compare_pwd->_clcd_putch
    _clcd_putch->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   25272
                                             34 BANK0      2     2      0
                                              0 BANK1     13    13      0
                            ___lwdiv
                    _change_password
                         _clcd_print
                         _clcd_write
                          _clear_log
                       _clear_screen
                 _display_dash_board
                       _download_log
                        _init_config
                      _log_car_event
                       _login_screen
                        _menu_screen
                           _read_adc
                _read_digital_keypad
                           _set_time
                             _strcpy
                           _view_log
 ---------------------------------------------------------------------------------
 (1) _view_log                                            16    15      1    2100
                                              9 BANK0     16    15      1
                             ___bmul
                         _clcd_print
                         _clcd_putch
              _ext_eeprom_24C02_read
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     3      3     145
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _set_time                                             6     6      0    2826
                                              9 BANK0      6     6      0
                            ___awdiv
                            ___awmod
                             ___bmul
                         _clcd_print
                         _clcd_putch
                       _clear_screen
                _read_digital_keypad
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (2) _write_ds1307                                         2     1      1     137
                                              3 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             6     4      2      81
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _menu_screen                                          4     3      1    1259
                                              9 BANK0      4     3      1
                         _clcd_print
                         _clcd_putch
                       _clear_screen
 ---------------------------------------------------------------------------------
 (1) _login_screen                                         7     6      1    3070
                                              9 BANK0      7     6      1
                            ___awdiv
                            ___awmod
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _clear_screen
              _ext_eeprom_24C02_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     457
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     469
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _log_car_event                                        3     0      3    2288
                                             11 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
                           _get_time
                          _log_event
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              5     1      4     220
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) _log_event                                            1     1      0     475
                                              7 COMMON     1     1      0
                             ___bmul
         _ext_eeprom_24C02_str_write
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     186
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     768
                           _init_adc
                          _init_clcd
                _init_digital_keypad
                           _init_i2c
                        _init_timer2
                          _init_uart
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     287
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _init_timer2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     287
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     253
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _init_digital_keypad                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     194
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     194
                                              6 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _download_log                                        18    18      0    1758
                                              0 BANK0     18    18      0
                         _clcd_print
                       _clear_screen
              _ext_eeprom_24C02_read
                            _putchar
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     0      2     115
                                              3 COMMON     2     0      2
                            _putchar
 ---------------------------------------------------------------------------------
 (3) _putchar                                              1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _display_dash_board                                   3     0      3    2488
                                             11 BANK0      3     0      3
                            ___lwdiv
                            ___lwmod
                         _clcd_print
                         _clcd_putch
                           _get_time
 ---------------------------------------------------------------------------------
 (2) _get_time                                             2     1      1     949
                                              9 BANK0      2     1      1
                         _clcd_putch
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     244
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     259
                                              0 BANK0      7     3      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 (1) _clear_log                                            5     5      0     940
                                              0 BANK0      5     5      0
                         _clcd_print
                       _clear_screen
        _ext_eeprom_24C02_byte_write
 ---------------------------------------------------------------------------------
 (1) _change_password                                     16    16      0    4650
                                             18 BANK0     16    16      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _clear_screen
                        _compare_pwd
         _ext_eeprom_24C02_str_write
                _read_digital_keypad
 ---------------------------------------------------------------------------------
 (3) _ext_eeprom_24C02_str_write                           2     1      1     255
                                              5 COMMON     2     1      1
        _ext_eeprom_24C02_byte_write
 ---------------------------------------------------------------------------------
 (4) _ext_eeprom_24C02_byte_write                          2     1      1     131
                                              3 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _compare_pwd                                          9     9      0    2219
                                              9 BANK0      9     9      0
                         _clcd_print
                         _clcd_putch
                         _clcd_write
                       _clear_screen
              _ext_eeprom_24C02_read
                _read_digital_keypad
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     275
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _read_digital_keypad                                  2     2      0      47
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ext_eeprom_24C02_read                                2     2      0     209
                                              4 COMMON     2     2      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      47
                                              2 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      81
                                              2 COMMON     2     2      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_screen                                         0     0      0     194
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1     455
                                              7 BANK0      2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3     482
                                              6 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           4     3      1     194
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _read_adc (ARG)
   _change_password
     _clcd_print
       _clcd_write
     _clcd_putch
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
       _clcd_write (ARG)
     _clcd_write
     _clear_screen
       _clcd_write
     _compare_pwd
       _clcd_print
       _clcd_putch
       _clcd_write
       _clear_screen
       _ext_eeprom_24C02_read
         _i2c_read
           _i2c_wait_for_idle
         _i2c_rep_start
           _i2c_start
             _i2c_wait_for_idle
           _i2c_stop
             _i2c_wait_for_idle
         _i2c_start
         _i2c_stop
         _i2c_write
           _i2c_wait_for_idle
       _read_digital_keypad
       _strncmp
     _ext_eeprom_24C02_str_write
       _ext_eeprom_24C02_byte_write
         _i2c_start
         _i2c_stop
         _i2c_write
     _read_digital_keypad
   _clcd_print
   _clcd_write
   _clear_log
     _clcd_print
     _clear_screen
     _ext_eeprom_24C02_byte_write
   _clear_screen
   _display_dash_board
     ___lwdiv
     ___lwmod
     _clcd_print
     _clcd_putch
     _get_time
       _clcd_putch
       _read_ds1307
         _i2c_read
         _i2c_rep_start
         _i2c_start
         _i2c_stop
         _i2c_write
   _download_log
     _clcd_print
     _clear_screen
     _ext_eeprom_24C02_read
     _putchar
     _puts
       _putchar
   _init_config
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_digital_keypad
     _init_i2c
       ___lldiv
     _init_timer2
     _init_uart
       ___lldiv
   _log_car_event
     ___lwdiv
     ___lwmod
     _get_time
     _log_event
       ___bmul
       _ext_eeprom_24C02_str_write
     _strncpy
   _login_screen
     ___awdiv
     ___awmod
     _clcd_print
     _clcd_putch
     _clcd_write
     _clear_screen
     _ext_eeprom_24C02_read
     _strncmp
   _menu_screen
     _clcd_print
     _clcd_putch
     _clear_screen
   _read_adc
   _read_digital_keypad
   _set_time
     ___awdiv
     ___awmod
     ___bmul
     _clcd_print
     _clcd_putch
     _clear_screen
     _read_digital_keypad
     _write_ds1307
       _i2c_start
       _i2c_stop
       _i2c_write
   _strcpy
   _view_log
     ___bmul
     _clcd_print
     _clcd_putch
     _ext_eeprom_24C02_read

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80     13      65     81.2%
BITBANK1            80      0       0      0.0%
BANK0               80     36      70     87.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     145      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Feb 18 21:14:51 2025

                                  pc 0002                       ___bmul@product 0073  
                     clcd_print@addr 0078                                   l55 1527  
                                 l74 01B8                                   l83 018C  
                                 l84 018F                                   l85 0192  
                                 l94 01CE                                   l86 0195  
                                 l96 01E2                                   _GO 00FA  
                       ?_compare_pwd 0070                         ___awdiv@sign 0077  
                                 fsr 0004                                  l202 06B4  
                                l231 0D73                                  l400 1365  
                                l305 0E92                                  l170 13A4  
                                l218 0C77                                  l163 0BAF  
                                l251 0302                                  l500 1347  
                                l236 1657                                  l244 07F9  
                                l309 0DBD                                  l173 17FF  
                                l326 125D                                  l166 16F6  
                                l343 1255                                  l191 05A2  
                                l432 12AE                                  l441 128C  
                                l506 130E                                  l274 0F17  
                                l346 1376                                  l266 0557  
                                l435 12BA                                  l371 174A  
                                l187 0716                                  l444 1277  
                                l452 1297                                  l356 07FF  
                                l429 14F2                                  l349 1384  
                                l438 126E                                  l447 13C0  
                                l448 13C3                                  l368 174B  
                                l288 0FFF                                  l472 0A2D  
                                l704 0AF6                                  l449 13C5  
                                l545 1281                                  l475 12AD  
                                l484 09CA                                  l564 14C0  
                                l469 155D                                  l397 1462  
                                l821 0A90                                  l478 12F5  
                                l574 129D                                  l582 140C  
                                l575 12A1                                  l576 12A2  
                                l497 1437                                  l834 17A2  
                                l694 12CD                                  l948 160F  
                                l958 15CB                                  _GIE 005F  
                                _RE1 0049                                  _RE2 004A  
                                _PR2 0092                                  _PEN 048A  
                                _SEN 0488                                  _PSA 040B  
                      log_event@addr 0077                                  _log 00BE  
                                _sec 0063                                  _isr 1463  
                     clcd_putch@addr 0027                                  _pos 004E  
                                fsr0 0004                       clcd_putch@data 0028  
                                indf 0000                         ___awmod@sign 0077  
                 log_car_event@event 002B                   view_log@reset_flag 0029  
                 log_car_event@speed 002C                                 l1130 13E6  
                               l1134 16A2                                 l1149 1593  
                               l4001 0A91                ??_read_digital_keypad 0072  
                               l4011 0ABE                                 l4003 0AA3  
                               l4013 0AD0                                 l4005 0AA6  
                               l4021 0AEE                                 l4101 157F  
                               l4111 13F6                                 l4031 12A8  
                               l4015 0ADE                                 l4007 0AB1  
                               l4103 1583                                 l4201 0E4C  
                               l4121 0D7D                                 l4113 13FC  
                               l4025 12A3                                 l4033 07FA  
                               l4017 0ADF                                 l4009 0AB5  
                               l4041 14EF                                 l4105 1585  
                               l5001 0173                                 l4203 0E53  
                               l4131 0D8F                                 l4123 0D82  
                               l4051 0AF7                                 l4107 13E7  
                               l4035 124F                                 l4027 12A6  
                               l4019 0AE8                                 l4043 1278  
                               l4115 1349                                 l5011 0189  
                               l5003 0179                                 l4221 0E91  
                               l4205 0E5E                                 l4133 0D91  
                               l4125 0D87                                 l4141 0D9C  
                               l4117 0D77                                 l4061 0B44  
                               l4053 0B1C                                 l4109 13E8  
                               l4029 12A7                                 l4037 14C1  
                               l4045 1490                                 l4301 1799  
                               l5021 01B5                                 l4207 0E6D  
                               l4215 0E72                                 l4151 0DB3  
                               l4143 0DA1                                 l4127 0D8B  
                               l4135 0D95                                 l4119 0D78  
                               l4311 15D6                                 l4071 0B77  
                               l4063 0B4E                                 l4055 0B2C  
                               l4039 14C4                                 l4047 1494  
                               l4231 0A38                                 l4303 179E  
                               l5023 01B9                                 l5007 0180  
                               l5015 0198                                 l4217 0E77  
                               l4209 0E70                                 l4153 0DB7  
                               l4137 0D9A                                 l4129 0D8D  
                               l4321 15F7                                 l4313 15D9  
                               l4081 0BAC                                 l4073 0B81  
                               l4065 0B5F                                 l4057 0B32  
                               l4401 16C4                                 l4049 14BF  
                               l4241 0A47                                 l4233 0A3A  
                               l4225 0A2E                                 l5041 0216  
                               l5025 01D2                                 l5009 0185  
                               l5017 01A9                                 l4219 0E82  
                               l4155 0DBF                                 l4163 0DC5  
                               l4323 15FD                                 l4315 15E0  
                               l4307 15CC                                 l4075 0B93  
                               l4067 0B65                                 l4059 0B3A  
                               l4403 16DE                                 l4083 1385  
                               l4091 155E                                 l4251 0A5D  
                               l4243 0A4D                                 l4235 0A3E  
                               l4227 0A2F                                 l4411 0566  
                               l5043 0222                                 l5027 01DE  
                               l5019 01AF                                 l4181 0DFB  
                               l4173 0DE7                                 l4165 0DCE  
                               l4149 0DA7                                 l4157 0DBF  
                               l4325 15FE                                 l4317 15E2  
                               l4309 15D0                                 l4341 15A6  
                               l4333 1594                                 l4077 0B9A  
                               l4069 0B6D                                 l4085 1391  
                               l4093 1561                                 l4253 0A6E  
                               l4245 0A50                                 l4261 0A82  
                               l4237 0A43                                 l4229 0A33  
                               l4501 065E                                 l4421 0575  
                               l4413 056B                                 l4405 055B  
                               l5061 027E                                 l5045 022A  
                               l5037 01F3                                 l5029 01E6  
                               l4191 0E1B                                 l4183 0E04  
                               l4175 0DED                                 l4167 0DD2  
                               l4327 1605                                 l4319 15E6  
                               l4343 15AA                                 l4335 159A  
                               l4351 15C7                                 l4079 0BA2  
                               l4087 139B                                 l4095 1567  
                               l4263 0A87                                 l4255 0A74  
                               l4247 0A57                                 l4239 0A45  
                               l4271 174D                                 l4503 0669  
                               l4511 06B7                                 l4431 0586  
                               l4415 056F                                 l4423 057A  
                               l4407 055C                                 l5071 02AC  
                               l5063 0286                                 l5055 0259  
                               l5047 022F                                 l5039 0206  
                               l3801 1293                                 l4193 0E1D  
                               l4177 0DF3                                 l4185 0E09  
                               l4169 0DE0                                 l4329 160B  
                               l4345 15B4                                 l4337 159D  
                               l4361 1516                                 l4089 139C  
                               l4265 0A8C                                 l4257 0A75  
                               l4249 0A59                                 l4281 1761  
                               l4273 1751                                 l4513 06C3  
                               l4521 06FA                                 l4505 066E  
                               l4441 059C                                 l4425 057F  
                               l4417 0571                                 l4409 0561  
                               l5073 02B4                                 l5065 028C  
                               l5049 0234                                 l3811 1529  
                               l3803 1297                                 l4187 0E0F  
                               l4179 0DF9                                 l4195 0E27  
                               l4347 15BA                                 l4339 15A4  
                               l4363 1525                                 l4355 14F3  
                               l4099 1578                                 l4371 17B3  
                               l4259 0A7C                                 l4291 1777  
                               l4283 1767                                 l4275 1756  
                               l4523 06FF                                 l4515 06CA  
                               l4507 06A2                                 l4443 05A4  
                               l4451 05AB                                 l4419 0573  
                               l4531 0BB3                                 l4611 0CC3  
                               l4603 0CAC                                 l5075 02BA  
                               l5083 02DA                                 l3821 153F  
                               l3813 1533                                 l3901 174A  
                               l4197 0E2D                                 l4189 0E15  
                               l4349 15C1                                 l4365 1526  
                               l4357 14FD                                 l4381 17FA  
                               l4373 17C0                                 l4293 1781  
                               l4285 176A                                 l4277 1758  
                               l4269 174C                                 l4525 070A  
                               l4517 06D5                                 l4509 06AD  
                               l4461 05C8                                 l4453 05B1  
                               l4437 058C                                 l4445 05A5  
                               l4429 0581                                 l4541 0BC8  
                               l4533 0BB9                                 l4621 0CF1  
                               l4613 0CC8                                 l4605 0CB8  
                               l5085 02F6                                 l3823 154B  
                               l3815 1536                                 l3911 09B4  
                               l3807 126F                                 l4199 0E40  
                               l3831 132B                                 l4711 07D4  
                               l4703 0745                                 l4359 1502  
                               l4375 17CF                                 l4367 17A3  
                               l4295 1787                                 l4287 1771  
                               l4279 175C                                 l4527 0711  
                               l4519 06E0                                 l4471 05E1  
                               l4455 05B7                                 l4463 05CD  
                               l4439 0598                                 l4551 0BE0  
                               l4543 0BCA                                 l4535 0BBA  
                               l4383 1367                                 l4391 13C6  
                               l4631 0D23                                 l4623 0CFB  
                               l4615 0CD3                                 l4607 0CBC  
                               l3825 154C                                 l3817 1537  
                               l3913 09BA                                 l3921 12E4  
                               l3905 1256                                 l3841 13B7  
                               l3809 1274                                 l3833 1282  
                               l4713 07DF                                 l4705 07C5  
                               l4377 17E5                                 l4369 17AC  
                               l4297 178E                                 l4289 1773  
                               l4529 0714                                 l4481 0618  
                               l4465 05D3                                 l4473 05EA  
                               l4457 05BD                                 l4553 0BE5  
                               l4561 0BF6                                 l4545 0BD0  
                               l4537 0BBC                                 l4385 1375  
                               l4801 04D7                                 l4721 0316  
                               l4393 13C8                                 l4641 0D55  
                               l4633 0D2D                                 l4625 0D05  
                               l4617 0CDD                                 l4609 0CC2  
                               l3827 1551                                 l3819 153C  
                               l3907 099C                                 l3843 13BC  
                               l3835 13A6                                 l3851 16FD  
                               l3931 1306                                 l3923 12F7  
                               l4651 1620                                 l3915 1439  
                               l4395 16A3                                 l4715 07EA  
                               l4707 07C9                                 l4379 17F9  
                               l4299 1794                                 l4483 0623  
                               l4475 05F2                                 l4467 05D9  
                               l4459 05BF                                 l4571 0C4A  
                               l4563 0BFB                                 l4555 0BE7  
                               l4547 0BD5                                 l4539 0BC2  
                               l4387 137A                                 l4811 0502  
                               l4803 04E1                                 l4731 0348  
                               l4723 0320                                 l4643 0D5F  
                               l4635 0D37                                 l4627 0D0F  
                               l4619 0CE7                                 l3829 1554  
                               l3909 09A4                                 l3845 13C4  
                               l3837 13AB                                 l3933 140E  
                               l3861 1708                                 l3941 1666  
                               l3925 12F8                                 l4901 0F97  
                               l4661 1630                                 l4653 162B  
                               l3917 1461                                 l4397 16AE  
                               l4709 07CF                                 l4485 0632  
                               l4477 0605                                 l4493 0637  
                               l4469 05DF                                 l4573 0C5F  
                               l4565 0C0D                                 l4557 0BED  
                               l4549 0BDA                                 l4813 050D  
                               l4805 04EB                                 l4741 0376  
                               l4733 0352                                 l4725 032A  
                               l4717 02FD                                 l4645 0D69  
                               l4637 0D41                                 l4629 0D19  
                               l4581 0C81                                 l3791 12AE  
                               l3839 13B3                                 l3935 1436  
                               l3871 171D                                 l3863 170E  
                               l3951 167B                                 l3927 1302  
                               l4911 0FB7                                 l4903 0F9F  
                               l4831 0EA3                                 l4671 1652  
                               l4663 1638                                 l4655 162E  
                               l4647 1610                                 l4399 16B7  
                               l4495 0640                                 l4487 0635  
                               l4479 0611                                 l4575 0C74  
                               l4567 0C22                                 l4559 0BF2  
                               l4815 0536                                 l4823 054C  
                               l4807 04F5                                 l4751 03A9  
                               l4743 0378                                 l4735 035C  
                               l4727 0334                                 l4719 030B  
                               l4639 0D4B                                 l4591 0C98  
                               l4583 0C83                                 l3793 12B4  
                               l3881 1734                                 l3873 1723  
                               l3865 1713                                 l3857 1702  
                               l3849 16F8                                 l3953 1682  
                               l3945 1669                                 l3929 1304  
                               l4921 0FE4                                 l4913 0FC2  
                               l4905 0FA7                                 l4841 0ED1  
                               l4833 0EAC                                 l4665 163C  
                               l4649 1615                                 l3961 1299  
                               l4673 0717                                 l4497 064C  
                               l4569 0C38                                 l4825 0552  
                               l4817 0545                                 l4809 04FD  
                               l4761 03F8                                 l4753 03AA  
                               l4745 0398                                 l4737 0366  
                               l4729 033E                                 l4593 0C9D  
                               l4585 0C89                                 l3795 1266  
                               l3891 1745                                 l3875 1729  
                               l3867 1715                                 l3859 1706  
                               l3955 1688                                 l3947 166D  
                               l3939 1658                                 l4915 0FCD  
                               l4907 0FAB                                 l4851 0F00  
                               l4843 0ED6                                 l4835 0EB2  
                               l4931 0FFE                                 l4827 0E93  
                               l4667 1642                                 l4691 0732  
                               l4683 0725                                 l4675 0720  
                               l3971 09EF                                 l3963 09CB  
                               l4499 0653                                 l4771 0432  
                               l4763 03FE                                 l4755 03BF  
                               l4747 039B                                 l4739 036E  
                               l4587 0C8F                                 l4595 0C9F  
                               l4579 0C7B                                 l3797 126B  
                               l3893 1747                                 l3877 172C  
                               l3869 1718                                 l3957 1694  
                               l3949 1673                                 l4917 0FD0  
                               l4909 0FB2                                 l4925 0FE6  
                               l4861 0F20                                 l4853 0F0B  
                               l4845 0EE1                                 l4837 0EB7  
                               l4829 0E98                                 l4669 1643  
                               l4693 0736                                 l4677 0724  
                               l3981 0A11                                 l3973 09F6  
                               l3965 09D3                                 l4781 0464  
                               l4773 0452                                 l4765 0406  
                               l4757 03D5                                 l4749 03A1  
                               l4597 0CAB                                 l4589 0C92  
                               l4941 0054                                 l3799 128E  
                               l3895 1748                                 l3879 1732  
                               l3887 1737                                 l4927 0FEC  
                               l4919 0FDF                                 l4871 0F44  
                               l4863 0F24                                 l4855 0F0B  
                               l4847 0EEC                                 l4839 0EC2  
                               l4695 073C                                 l3983 0A21  
                               l3975 09F9                                 l3967 09DA  
                               l3991 12C1                                 l4791 04A5  
                               l4783 0479                                 l4775 0455  
                               l4767 0407                                 l4759 03F5  
                               l4951 0080                                 l4943 0054  
                               l4935 0045                                 l3897 1748  
                               l3889 1740                                 l4929 0FF1  
                               l4881 0F60                                 l4873 0F46  
                               l4865 0F32                                 l4857 0F0E  
                               l4849 0EFB                                 l4697 073E  
                               l4689 0726                                 l3985 0A28  
                               l3977 0A00                                 l3969 09EA  
                               l3993 12C3                                 l4793 04AF  
                               l4777 045B                                 l4769 041C  
                               l4961 00A3                                 l4953 0086  
                               l4945 0056                                 l4937 004A  
                               _ADFM 04FF                                 l4883 0F66  
                               l4875 0F4F                                 l4867 0F38  
                               l4859 0F0F                                 l4699 073F  
                               l3979 0A0C                                 l3995 12C5  
                               l3987 12BC                                 l4795 04B9  
                               l4779 0463                                 l4787 048F  
                               l4971 00E4                                 l4963 00A9  
                               l4955 0088                                 l4947 0057  
                               l4939 0052                                 ?_isr 0070  
                               l4885 0F6C                                 l4877 0F57  
                               l4893 0F80                                 l4869 0F3E  
                               l3997 12CC                                 l3989 12BD  
                               l4797 04C3                                 l4789 049A  
                               l4981 012B                                 l4973 00FB  
                               l4965 00C9                                 l4957 0091  
                               l4949 0063                                 l4895 0F85  
                               l4887 0F6E                                 l4879 0F5A  
                               l4799 04CD                                 l4991 0154  
                               l4967 00CF                                 l4975 0110  
                               l4959 0095                                 l4897 0F8B  
                               l4889 0F77                                 l4993 0158  
                               l4977 0116                                 l4985 0143  
                               l4969 00DC                                 l4899 0F90  
                               l4995 015D                                 l4987 0149  
                               l4979 0123                                 l4997 0168  
                               l4989 014F                                 l4999 016F  
                               _ADON 00F8                                 STR_1 098F  
                               STR_2 0995                                 STR_3 0977  
                               STR_4 097A                                 STR_5 097D  
                               STR_6 0980                                 STR_7 0983  
                               STR_8 0986                                 STR_9 08B1  
                               _CREN 00C4                                 _T0CS 040D  
                               u4000 0A5D                                 u4001 0A5C  
                               u4020 0A6E                                 u4100 1777  
                               u4021 0A6D                                 u4101 1776  
                               u4110 1781                                 u4015 0A5E  
                               u4111 1780                                 u3400 12B4  
                               u4040 0A82                                 u5000 01AF  
                               u3401 12B3                                 u4041 0A81  
                               u4025 0A6A                                 u5001 01AE  
                               u3410 12BA                                 u4210 160B  
                               u4050 0A87                                 u4130 1794  
                               u5010 01B5                                 u3411 12B9  
                               u4211 160A                                 u4051 0A86  
                               u4035 0A76                                 u4131 1793  
                               u4115 177D                                 u5011 01B4  
                               u3420 1530                                 u3500 1723  
                               u4220 159A                                 u4140 1799  
                               u4060 1751                                 u4300 13E6  
                               u5020 022A                                 u3421 152C  
                               u3501 1722                                 u4205 15FF  
                               u4221 1599                                 u4141 1798  
                               u4125 1788                                 u4061 1750  
                               u4301 13E5                                 u5021 0229  
                               u3510 1729                                 u4150 15D6  
                               u4070 175C                                 u4310 0561  
                               u5030 028C                                 u3511 1728  
                               u4151 15D5                                 u4071 175B  
                               u4311 0560                                 u5031 028B  
                               u3520 1732                                 u3600 1688  
                               u4240 15AA                                 u4080 1767  
                               u4400 05D9                                 u4320 0566  
                               u5040 02BA                                 u3521 1731  
                               u3601 1687                                 u4241 15A9  
                               u4081 1766                                 u4401 05D8  
                               u4321 0565                                 u5041 02B9  
                               u3434 1533                                 u3450 13BC  
                               u3530 1740                                 u3610 1694  
                               u4170 15E6                                 u4250 15B4  
                               u4410 05F2                                 u4330 057F  
                               u3451 13BB                                 u3531 173F  
                               u3611 1693                                 u4171 15E5  
                               u4251 15B3                                 u4235 159E  
                               u5107 06F3                                 u4411 05F1  
                               u4331 057E                                 u3540 1745  
                               u3460 16FD                                 u3620 12A1  
                               u4420 0605                                 u4340 0586  
                               u4500 0BE5                                 u3445 1543  
                               u3541 1744                                 u3461 16FC  
                               u4165 15DA                                 u3621 12A0  
                               u5117 09CF                                 u4421 0604  
                               u4341 0585                                 u4501 0BE4  
                               u3550 09CA                                 u3470 170E  
                               u4190 15F7                                 u4270 15C7  
                               u3710 0AEE                                 u3630 12C1  
                               u4430 0640                                 u4350 05A2  
                               u4510 0BED                                 u3551 09C9  
                               u3471 170D                                 u5207 0ECA  
                               u4191 15F6                                 u4271 15C6  
                               u4255 15B0                                 u5127 09DE  
                               u3711 0AED                                 u3631 12C0  
                               u4095 176B                                 u4431 063F  
                               u4351 05A1                                 u4511 0BEC  
                               u3480 1713                                 u3560 130E  
                               u4600 1642                                 u3720 14D2  
                               u3640 12CC                                 u3800 1593  
                               u4440 06B4                                 u4360 05AA  
                               u4520 0BFB                                 u3481 1712  
                               u3561 130D                                 u5217 0EF4  
                               u4601 1641                                 u4185 15E7  
                               u4265 15BB                                 u5137 09EC  
                               u3705 0AE0                                 u3641 12CB  
                               u3801 1592                                 u4441 06B3  
                               u4361 05A9                                 u4521 0BFA  
                               u5057 053E                                 u3490 171D  
                               u3570 1666                                 u3810 140C  
                               u4610 073C                                 u3650 0AA3  
                               u3730 14A2                                 u4370 05B1  
                               u4450 0BB9                                 u4290 137A  
                               u4530 0C81                                 u3491 171C  
                               u3571 1665                                 u5227 0FD8  
                               u4195 15F3                                 u3811 140B  
                               u4611 073B                                 u5147 0A02  
                               u3651 0AA2                                 u5067 0615  
                               u4371 05B0                                 u4451 0BB8  
                               u4291 1379                                 u4531 0C80  
                               _PEIE 005E                                 u3580 167B  
                               u3900 0DED                                 u3820 0D7D  
                               u4620 0744                                 u4380 05B7  
                               u4460 0BC2                                 u4700 045B  
                               u4540 0C89                                 u3581 167A  
                               u5237 0E50                                 u3901 0DEC  
                               u3821 0D7C                                 u4621 0743  
                               u5157 0A0E                                 u3725 14CD  
                               u5077 062B                                 u4381 05B6  
                               u4461 0BC1                                 u4285 136A  
                               u4701 045A                                 u4541 0C88  
                               u3590 1682                                 u3910 0DF3  
                               u3830 0D82                                 u4630 07CF  
                               u3670 0AB5                                 u4390 05D3  
                               u4470 0BC8                                 u4710 0463  
                               u4550 0C8F                                 u3591 1681  
                               u5247 0E66                                 u3911 0DF2  
                               u3831 0D81                                 u4631 07CE  
                               u5167 0A1C                                 u3671 0AB4  
                               u3735 149D                                 u5087 0650  
                               u4391 05D2                                 u4471 0BC7  
                               u4711 0462                                 u4551 0C8E  
                               u3920 0E0F                                 u3840 0D9A  
                               u4800 0F66                                 u4480 0BD0  
                               u4720 04FD                                 u4640 036E  
                               u4560 0C98                                 u5257 0E8A  
                               u3921 0E0E                                 u3841 0D99  
                               u4801 0F65                                 u3745 0B23  
                               u5177 0A2A                                 u3665 0AA8  
                               u5097 06C7                                 u4481 0BCF  
                               u4721 04FC                                 u4641 036D  
                               u4561 0C97                                 u3930 0E15  
                               u3850 0DA1                                 u4810 0F7F  
                               u3690 0AD0                                 u3770 139B  
                               u4490 0BE0                                 u4730 0552  
                               u4650 0376                                 u4570 0C9D  
                               u5267 1539                                 u3931 0E14  
                               u3851 0DA0                                 u4811 0F7E  
                               u3755 0B56                                 u5187 07F2  
                               u3691 0ACF                                 u3771 139A  
                               u4491 0BDF                                 u4731 0551  
                               u4651 0375                                 u4571 0C9C  
                               _RCIE 0465                                 u3940 0E2D  
                               u3860 0DBD                                 u4820 0F8B  
                               u4740 0EB2                                 u3780 1577  
                               u4660 03A1                                 u4580 0CC2  
                               u4900 00A9                                 _RCEN 048B  
                               _RCIF 0065                                 u5277 154E  
                               u3941 0E2C                                 u3861 0DBC  
                               u4821 0F8A                                 u4741 0EB1  
                               u5197 164B                                 u3765 0B8A  
                               u3685 0AB7                                 u3781 1576  
                               u4661 03A0                                 u4581 0CC1  
                               u4901 00A8                                 u3950 0E40  
                               u3870 0DC4                                 u4830 0F90  
                               u4750 0F32                                 u3790 157E  
                               u4670 03A9                                 u4590 0CC8  
                               u4910 00CF                                 u5287 1558  
                               u3951 0E3F                                 u3871 0DC3  
                               u4831 0F8F                                 u4751 0F31  
                               u3695 0ACC                                 u3791 157D  
                               u4671 03A8                                 u4591 0CC7  
                               u4911 00CE                                 u3880 0DE0  
                               u4840 0F9F                                 u4760 0F38  
                               u3960 0A33                                 u4680 03FE  
                               u4920 00DC                                 u3881 0DDF  
                               u4841 0F9E                                 u4761 0F37  
                               u3961 0A32                                 u4681 03FD  
                               u4921 00DB                                 u3890 0DE6  
                               u4850 0FB2                                 u4770 0F3E  
                               u3970 0A3E                                 u4690 0406  
                               u4930 0116                                 u3891 0DE5  
                               u4851 0FB1                                 u4771 0F3D  
                               u3971 0A3D                                 u4691 0405  
                               u4931 0115                                 u4860 0FEC  
                               u4780 0F57                                 u3980 0A4D  
                               u4940 0123                                 u4861 0FEB  
                               u4781 0F56                                 u3981 0A4C  
                               u4941 0122                                 u4925 00D8  
                               u4870 0FF1                                 u4790 0F60  
                               u4950 0149                                 u4871 0FF0  
                               u4791 0F5F                                 u4951 0148  
                               u4960 014F                                 u4880 0086  
                               u4961 014E                                 u4945 011F  
                               u4881 0085                                 u4970 0154  
                               u4890 00A3                                 u3995 0A51  
                               u4971 0153                                 u4891 00A2  
                               u4980 0179                                 u4981 0178  
                               u4990 017F                                 u4991 017E  
                               _TMR0 0001                                 _SPEN 00C7  
                               _TXIF 0064                                 _R_nW 04A2  
      read_digital_keypad@long_press 007A                                 _gear 00A0  
         __end_of_display_dash_board 16F7                                 _main 0045  
                               _menu 00AE                                 _time 004F  
                               btemp 007E                                 _puts 13E7  
                               start 000C                       menu_screen@key 002C  
                  ___bmul@multiplier 0074                       clcd_write@byte 0075  
                     clcd_write@mode 0072                        _i2c_rep_start 1282  
                              ??_isr 0070                                ?_main 0070  
                       ?_read_ds1307 0070                                _ACKEN 048C  
                              _ACKDT 048D                      __end_of___awdiv 0A91  
                              STR_10 0989                                STR_11 098C  
                              STR_12 0998                                STR_20 08DC  
                              STR_13 0992                                STR_21 0856  
                              STR_22 095A                                STR_30 0800  
                              STR_14 0951                                STR_23 0973  
                              STR_31 08F7                                STR_15 093E  
                              STR_40 0934                                STR_32 0904  
                              STR_24 08A2                                STR_16 0911  
                              STR_41 0884                                STR_25 0875  
                              STR_33 0846                                STR_17 08EA  
                              STR_34 0846                                STR_26 08B1  
                              STR_42 0813                                STR_18 0866  
                              STR_43 0904                                STR_35 0948  
                              STR_19 0835                                STR_27 0824  
                              STR_36 0904                                STR_44 0963  
                              STR_28 092A                      __end_of___awmod 17A3  
                              STR_45 096B                                STR_29 091E  
                              STR_37 08C0                                STR_38 08CE  
                              STR_39 0893                                ?_puts 0073  
                    __end_of___lldiv 0AF7                          i2c_read@ack 0072  
                    ___awdiv@divisor 0072                      __end_of___lwdiv 1610  
                              i1l521 1481                      __end_of___lwmod 15CC  
                              i1l523 1489                         ?_init_config 0070  
                    ___awdiv@counter 0076                                _RCREG 001A  
                              _SPBRG 0099                                _PORTB 0006  
                              _PORTD 0008                                _SSPM3 00A3  
                              _TRISB 0086                                _TRISD 0088  
                              _SSPEN 00A5                                _TXREG 0019  
                       ?_init_timer2 0070                         main@menu_pos 00D6  
                              _nDONE 00FA                 __end_of_clear_screen 125E  
                       view_log@rlog 002A                      _change_password 0E93  
                       ?_menu_screen 0029                                pclath 000A  
                              puts@s 0073                      __end_of_putchar 12A3  
                              status 0003                                wtemp0 007E  
                       compare_pwd@i 0048                         compare_pwd@j 0031  
                    __end_of_strncmp 16A3                      __end_of_strncpy 1594  
                    __initialization 000F                       ?_i2c_rep_start 0070  
                       __end_of_main 02FD                         __end_of_puts 140D  
                   __end_of_i2c_read 13C6                     __end_of_i2c_stop 1278  
                      ?_download_log 0070                               ??_main 0042  
         login_screen@saved_password 00CF                               ??_puts 0075  
                             _ADCON0 001F                               _ADRESH 001E  
                             _ADRESL 009E                     ___awdiv@dividend 0074  
                       i2c_read@data 0073                               i1l3781 1478  
                             i1l3783 147A                               i1l3785 147F  
                             i1l3777 1463                               i1l3787 1486  
                             i1l3779 1469                               i1l3789 1488  
                             u336_20 1469                               u336_21 1468  
                             u337_20 1478                               u337_21 1477  
                             u338_20 147F                               u338_21 147E  
                       _write_ds1307 1348                               u339_20 1486  
                             u339_21 1485                       clear_log@clear 0023  
                             _TMR0IE 005D                               _TMR2IE 0461  
                             _TMR2IF 0061                               _TMR2ON 0092  
                             _SSPADD 0093                               _TRISE1 0449  
                             _TRISE2 044A                               _SSPBUF 0013  
        __end_of_init_digital_keypad 0800                        login_screen@i 004D  
                      login_screen@j 002F                     __end_of_get_time 0BB0  
                             ___bmul 12BB              _init_display_controller 09CB  
                          ??___awdiv 0076                            ??___awmod 0076  
                          ??___lldiv 0020         ??_ext_eeprom_24C02_str_write 0076  
                          ??___lwdiv 0078                            ??___lwmod 0076  
                   __end_of_init_i2c 14F3                     __end_of_init_adc 1256  
                   __end_of_read_adc 1385                       ??_download_log 0020  
                   ___awdiv@quotient 0078                               _s_time 00BB  
                    ___awmod@divisor 0072                      ___awmod@counter 0076  
                      view_log@shift 004B                               main@gr 00D9  
                             _strcpy 13C6         ?_ext_eeprom_24C02_byte_write 0073  
                       __pdataCOMMON 007B              __end_of_change_password 1000  
        read_digital_keypad@prev_key 0047                     __end_of_set_time 0558  
                             saved_w 007E                     __end_of_view_log 0D74  
                          ??_putchar 0072                            ??_strncmp 0076  
                          ??_strncpy 0076              __end_of__initialization 0041  
                    ??_i2c_rep_start 0072                  ___bmul@multiplicand 0072  
                      ?_login_screen 0029                       __pcstackCOMMON 0070  
                       __pidataBANK0 124A                         __pidataBANK1 130F  
                  __end_of_i2c_start 126F                    __end_of_i2c_write 1298  
      ??_ext_eeprom_24C02_byte_write 0074                    _i2c_wait_for_idle 12AE  
                 ?_i2c_wait_for_idle 0070                           __pbssBANK0 0044  
                         __pbssBANK1 00BB                            ?_i2c_read 0070  
                          ?_i2c_stop 0070                       ??_login_screen 002A  
          ??_init_display_controller 0076                           _clcd_print 099C  
                ??_i2c_wait_for_idle 0072                           _clcd_putch 12E1  
                         _clcd_write 1528                _ext_eeprom_24C02_read 140D  
                         __pmaintext 0045                      read_ds1307@addr 0074  
                      _log_car_event 17A3                      read_ds1307@data 0075  
                       _clear_screen 1256                              ?___bmul 0072  
                         __pintentry 0004                   _display_dash_board 16A3  
                            _ACKSTAT 048E                              ?_strcpy 0072  
                            _T2CKPS0 0090                              _T2CKPS1 0091  
          login_screen@user_password 005A                  ?_display_dash_board 002B  
        __end_of_read_digital_keypad 174C                     ?_change_password 0070  
          __end_of_i2c_wait_for_idle 12BB                         init_i2c@baud 0026  
                            _SSPCON2 0091                            ?_get_time 0029  
                         __stringtab 1000                           ??_i2c_read 0072  
                         ??_i2c_stop 0072                            ?_init_i2c 0026  
               __end_of_download_log 07FA                            ?_init_adc 0070  
                          ?_read_adc 0072                    __end_of_clear_log 1658  
               ??_display_dash_board 007A                       ?_log_car_event 002B  
                          ?_set_time 0070                   change_password@add 003D  
                 change_password@key 0040                   change_password@res 003C  
 __end_of_ext_eeprom_24C02_str_write 130F           _ext_eeprom_24C02_str_write 12F6  
          ext_eeprom_24C02_read@addr 0074            ext_eeprom_24C02_read@data 0075  
                            ___awdiv 0A2E                              ___awmod 174C  
                          ?_view_log 0029                              ___lldiv 0A91  
                            ___lwdiv 15CC                              ___lwmod 1594  
                   main@control_flag 00DE                              __ptext1 0C78  
                            __ptext2 13C6                              __ptext3 02FD  
                            __ptext4 1348                              __ptext5 1366  
                            __ptext6 0BB0                              __ptext7 0558  
                            __ptext8 174C                              __ptext9 0A2E  
    __end_of_init_display_controller 0A2E                    __end_of_init_clcd 12AE  
             read_digital_keypad@key 0046                    __end_of_init_uart 14C1  
                   ___awmod@dividend 0074                       main@reset_flag 00D8  
                  __end_of_log_event 13A5                              _putchar 1298  
                            main@key 00E0                              clrloop0 125F  
                         ??_get_time 002A                              _strncmp 1658  
                            _strncpy 155E                 end_of_initialization 0041  
                         clear_log@i 0024                          set_time@key 0049  
                        set_time@min 002D                          set_time@sec 002C  
                         ??_init_i2c 002A                           ??_init_adc 0072  
                         ??_read_adc 0074               change_password@pwd_arr 0035  
             ?_ext_eeprom_24C02_read 0070                          ?_clcd_print 0076  
                        ?_clcd_putch 0027                      ___lldiv@divisor 0072  
                        ?_clcd_write 0072                      ___lldiv@counter 0025  
                         ??_set_time 0029                           ??_view_log 007A  
                       __pstringtext 0800                              strcpy@d 0077  
                     compare_pwd@add 002E                  compare_pwd@user_pwd 0056  
                     compare_pwd@key 0030                      read_adc@channel 0075  
                      i2c_write@data 0072        ext_eeprom_24C02_str_write@str 0075  
               __end_of_login_screen 0717                        clcd_print@str 0076  
                    ??_log_car_event 007A               login_screen@reset_flag 0029  
                     __end_of___bmul 12CE                        ??_compare_pwd 0029  
                      __pidataCOMMON 0003                          view_log@add 0036  
                        view_log@key 0037                       __end_of_strcpy 13E7  
                start_initialization 000F                            _i2c_start 1266  
                        __end_of_isr 1490                            _i2c_write 128D  
     ext_eeprom_24C02_str_write@addr 0076                          putchar@data 0072  
                   change_password@i 0041                __end_of_i2c_rep_start 128D  
                           ??___bmul 0073                           init_fetch0 12CE  
                        __pdataBANK0 0061                          __pdataBANK1 00A0  
                      ??_read_ds1307 0074                         _download_log 0717  
                           ??_strcpy 0075                        ??_init_config 007A  
                      ??_init_timer2 0072                  __end_of_compare_pwd 0E93  
                        __pbssCOMMON 007A                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00D4  
                         ?_i2c_start 0070                           ?_i2c_write 0070  
                      ??_menu_screen 002A              display_dash_board@event 002B  
            display_dash_board@speed 002C                     ___lwdiv@dividend 0022  
                          _clear_log 1610          ?_ext_eeprom_24C02_str_write 0075  
                           ?___awdiv 0072                             ?___awmod 0072  
                           ?___lldiv 0072                             ?___lwdiv 0020  
                          _clock_reg 005E                             ?___lwmod 0072  
                          __pstrings 1000  __end_of_ext_eeprom_24C02_byte_write 1348  
        _ext_eeprom_24C02_byte_write 132A                  read_adc@adc_reg_val 0076  
                __end_of_read_ds1307 1463                     ___lwdiv@quotient 0025  
                           ?_putchar 0070                            _init_clcd 12A3  
                __end_of_init_config 1528                            _init_uart 1490  
                           ?_strncmp 0072                             ?_strncpy 0072  
                          _log_event 1385                        ?_write_ds1307 0073  
            ??_ext_eeprom_24C02_read 0074                  __end_of_init_timer2 1282  
           ?_init_display_controller 0070                    interrupt_function 0004  
                          clear_ram0 125E                           set_time@hr 002E  
                       ??_clcd_print 0079                         ??_clcd_putch 007A  
                __end_of_menu_screen 0C78                         ??_clcd_write 0073  
                       _login_screen 0558                           ?_clear_log 0070  
                          main@F1244 00B8                          _compare_pwd 0D74  
                      download_log@i 0031                        download_log@j 0030  
                        __stringbase 1012                            main@event 00DB  
                          main@speed 00DF                          ??_i2c_start 0072  
                 __end_of_clcd_print 09CB                          ??_i2c_write 0072  
                 __end_of_clcd_putch 12F6                   __end_of_clcd_write 155E  
                         ?_init_clcd 0070                           ?_init_uart 0026  
                     ??_write_ds1307 0074                           ?_log_event 0070  
                _init_digital_keypad 07FA                             _i2c_read 13A5  
                           _i2c_stop 126F                    get_time@clock_reg 0029  
                    login_screen@add 002D                      login_screen@key 002E  
                      set_time@shift 004A                  change_password@flag 003F  
                change_password@wait 003A                  login_screen@attempt 0062  
               ?_init_digital_keypad 0070                   __end_of__stringtab 1012  
                        _read_ds1307 1438                          _init_config 14F3  
                        _init_timer2 1278                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0024                             __ptext10 17A3  
                           __ptext11 155E                             __ptext20 12A3  
                           __ptext12 1385                             __ptext21 09CB  
                           __ptext13 12BB                             __ptext30 15CC  
                           __ptext22 124F                             __ptext14 14F3  
                           __ptext31 1610                             __ptext23 0717  
                           __ptext15 1490                             __ptext40 1282  
                           __ptext32 0E93                             __ptext24 13E7  
                           __ptext16 1278                             __ptext41 126F  
                           __ptext33 12F6                             __ptext25 1298  
                           __ptext17 14C1                             __ptext42 1266  
                           __ptext34 132A                             __ptext26 16A3  
                           __ptext18 0A91                             __ptext43 13A5  
                           __ptext35 0D74                             __ptext27 0AF7  
                           __ptext19 07FA                             __ptext44 12AE  
                           __ptext36 1658                             __ptext28 1438  
                           __ptext45 1256                             __ptext37 16F7  
                           __ptext29 1594                             __ptext46 12E1  
                           __ptext38 140D                             __ptext47 099C  
                           __ptext39 128D                             __ptext48 1528  
                           __ptext49 1463      ext_eeprom_24C02_byte_write@addr 0074  
    ext_eeprom_24C02_byte_write@data 0073                             _get_time 0AF7  
                        _menu_screen 0BB0                           strcpy@dest 0072  
                           _init_i2c 14C1                             _init_adc 124F  
                           _read_adc 1366              read_digital_keypad@mode 0073  
            read_digital_keypad@once 007B                __end_of_log_car_event 1800  
              compare_pwd@reset_flag 002F                          ??_clear_log 0020  
                  ??_change_password 0032                        ?_clear_screen 0070  
                           _set_time 02FD                             _pwd_flag 0064  
                           _view_log 0C78                ??_init_digital_keypad 0072  
                           main@wait 00D4                             main@stat 00D7  
                          view_log@i 0038                             isr@count 0044  
            change_password@wait_327 003E                             init_ram0 12D2  
                        ??_init_clcd 0078                          ??_init_uart 002A  
                        ??_log_event 0077                             intlevel1 0000  
                      init_uart@baud 0026                     ___lwmod@dividend 0074  
                   ___lldiv@dividend 0076                            strcpy@src 0073  
               compare_pwd@saved_pwd 00CA                            stringcode 100A  
                     ??_clear_screen 0076                            strncpy@cp 0076  
               __end_of_write_ds1307 1366                  _read_digital_keypad 16F7  
                   ___lldiv@quotient 0021                      ___lwmod@divisor 0072  
                    ___lwmod@counter 0076                             strncmp@l 0072  
                           strncmp@n 0074                             strncmp@r 0073  
                           stringtab 1000                             strncpy@d 0072  
                           strncpy@n 0074                             strncpy@s 0073  
                    compare_pwd@wait 002C                menu_screen@select_pos 0061  
                        _return_time 0065                 ?_read_digital_keypad 0070  
                   write_ds1307@addr 0074                     write_ds1307@data 0073  
              menu_screen@reset_flag 0029                  menu_screen@menu_pos 004C  
      __end_of_ext_eeprom_24C02_read 1438                      download_log@add 002F  
                   download_log@rlog 0023  
